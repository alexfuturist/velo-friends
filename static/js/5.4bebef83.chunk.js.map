{"version":3,"sources":["components/Login/Login.module.scss","components/Login/Login.jsx"],"names":["module","exports","Input","Element","maxLength15","maxLengthCreator","minLength5","minLengthCreator","LoginReduxForm","reduxForm","form","props","className","s","loginForm","onSubmit","handleSubmit","htmlFor","loginField","name","component","type","placeholder","validate","required","RememberMe","RememberMeInput","id","RememberMeLabel","for","error","formCommonError","captchaUrl","CaptchaImageContainer","CaptchaImage","src","class","reloadDouble","onClick","getCaptchaUrl","autocomplete","loginButton","connect","state","isAuth","auth","login","to","loginTitle","formData","email","password","rememberMe","captcha","console","log"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,WAAa,0BAA0B,UAAY,yBAAyB,WAAa,0BAA0B,WAAa,0BAA0B,gBAAkB,+BAA+B,gBAAkB,+BAA+B,sBAAwB,qCAAqC,aAAe,4BAA4B,OAAS,sBAAsB,gBAAkB,+BAA+B,YAAc,6B,iCCDjf,wGASMC,EAAQC,YAAQ,SAChBC,EAAcC,YAAiB,IAC/BC,EAAaC,YAAiB,GA6C9BC,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,EA3CL,SAACE,GACf,OACI,0BAAMC,UAAWC,IAAEC,UAAWC,SAAUJ,EAAMK,cAC1C,6BACI,2BAAOC,QAAQ,UACf,kBAAC,IAAD,CAAOL,UAAWC,IAAEK,WAAYC,KAAK,QAAQC,UAAWlB,EAAOmB,KAAK,OAChEC,YAAa,QAASC,SAAU,CAACC,QAEzC,6BACI,2BAAOP,QAAQ,aACf,kBAAC,IAAD,CAAOL,UAAWC,IAAEK,WAAYC,KAAK,WAAWC,UAAWlB,EAAOmB,KAAK,WACnEC,YAAa,WAAYC,SAAU,CAACC,IAAUlB,EAAYF,MAElE,yBAAKQ,UAAWC,IAAEY,YACd,kBAAC,IAAD,CAAOb,UAAWC,IAAEa,gBAAiBP,KAAK,aAAaQ,GAAG,aAAaP,UAAU,QAAQC,KAAK,aAC9F,2BAAOT,UAAWC,IAAEe,gBAAiBC,IAAI,cAAzC,2FAEJ,6BACKlB,EAAMmB,OACH,yBAAKlB,UAAWC,IAAEkB,iBAAkBpB,EAAMmB,QAIjDnB,EAAMqB,YACH,yBAAKpB,UAAWC,IAAEoB,uBACd,6BACI,6BACI,yBAAKrB,UAAWC,IAAEqB,aAAcC,IAAKxB,EAAMqB,aAC3C,yBAAKI,MAAOvB,IAAEwB,aAAcC,QAAS3B,EAAM4B,kBAGnD,6BACI,kBAAC,IAAD,CAAO3B,UAAWC,IAAEK,WAAYC,KAAK,UAAUqB,aAAa,MACxDlB,YAAY,wFAAkBF,UAAWlB,EAAOqB,SAAU,CAACC,SAK3E,4BAAQZ,UAAWC,IAAE4B,YAAapB,KAAK,UAAvC,4CAgCGqB,uBALS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,OACnBZ,WAAYW,EAAME,KAAKb,cAGa,CAAEc,UAAOP,mBAAlCG,EAvBD,SAAC/B,GAMX,OAAIA,EAAMiC,OACC,kBAAC,IAAD,CAAUG,GAAI,aAIrB,yBAAKnC,UAAWC,IAAEiC,OACd,wBAAIlC,UAAWC,IAAEmC,YAAjB,sEACA,kBAACxC,EAAD,CAAgBO,SAZP,SAACkC,GACdtC,EAAMmC,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,SAC7EC,QAAQC,IAAIN,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UAUrCrB,WAAYrB,EAAMqB,WAAYO,cAAe5B,EAAM4B","file":"static/js/5.4bebef83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2DqEy\",\"loginTitle\":\"Login_loginTitle__3JZKd\",\"loginForm\":\"Login_loginForm__3BjhM\",\"loginField\":\"Login_loginField__sUmQn\",\"RememberMe\":\"Login_RememberMe__wSdmn\",\"RememberMeLabel\":\"Login_RememberMeLabel__8I-Nk\",\"RememberMeInput\":\"Login_RememberMeInput__3oDuT\",\"CaptchaImageContainer\":\"Login_CaptchaImageContainer__2brGE\",\"reloadDouble\":\"Login_reloadDouble__1F7gG\",\"rotate\":\"Login_rotate__1ZK4p\",\"formCommonError\":\"Login_formCommonError__1fy5a\",\"loginButton\":\"Login_loginButton__3kiEU\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, minLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Element } from \"../Common/FormControls/FormControls\";\r\nimport { login, getCaptchaUrl } from \"../../redux/auth-reducer\";\r\nimport s from './Login.module.scss';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Input = Element(\"input\");\r\nconst maxLength15 = maxLengthCreator(15);\r\nconst minLength5 = minLengthCreator(5);\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form className={s.loginForm} onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"email\"></label>\r\n                <Field className={s.loginField} name=\"email\" component={Input} type=\"text\"\r\n                    placeholder={\"login\"} validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"password\"></label>\r\n                <Field className={s.loginField} name=\"password\" component={Input} type=\"password\"\r\n                    placeholder={\"password\"} validate={[required, minLength5, maxLength15]} />\r\n            </div>\r\n            <div className={s.RememberMe}>\r\n                <Field className={s.RememberMeInput} name=\"rememberMe\" id=\"rememberMe\" component=\"input\" type=\"checkbox\" />\r\n                <label className={s.RememberMeLabel} for=\"rememberMe\">запам'ятати мене</label>\r\n            </div>\r\n            <div>\r\n                {props.error &&\r\n                    <div className={s.formCommonError}>{props.error}</div>}\r\n            </div>\r\n\r\n\r\n            {props.captchaUrl &&\r\n                <div className={s.CaptchaImageContainer} >\r\n                    <div>\r\n                        <div>\r\n                            <img className={s.CaptchaImage} src={props.captchaUrl} />\r\n                            <div class={s.reloadDouble} onClick={props.getCaptchaUrl} ></div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={s.loginField} name=\"captcha\" autocomplete=\"off\"\r\n                            placeholder=\"введіть символи\" component={Input} validate={[required]} />\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            <button className={s.loginButton} type=\"submit\">УВІЙТИ</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n        console.log(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            <h1 className={s.loginTitle}>Авторизація</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} getCaptchaUrl={props.getCaptchaUrl} />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, getCaptchaUrl })(Login);"],"sourceRoot":""}