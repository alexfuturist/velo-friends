{"version":3,"sources":["redux/dialogs-reducer.js","components/Main/Content/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.module.scss","redux/users-reducer.js","components/Main/Navbar/Navbar.module.css","components/Main/Content/Content.module.css","components/Main/Content/Profile/Profile.module.css","components/Main/Content/Profile/Posts/Posts.module.scss","components/Common/Preloader/Preloader.module.scss","components/Main/Main.module.css","api/api.js","components/Main/Content/Profile/Posts/Post/Post.module.scss","components/Main/Content/Profile/ProfileInfo/ProfileData/ProfileData.module.scss","components/Main/Content/StarUsers/StarUsers.module.scss","hoc/AuthRedirect.jsx","redux/profile-reducer.js","reportWebVitals.js","redux/star-users-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Main/Navbar/Navbar.jsx","components/Main/Content/AboutProject/AboutProject.jsx","components/Main/Content/Friends/Friends.jsx","components/Main/Content/Music/Music.jsx","components/Main/Content/Photos/Photos.jsx","components/Main/Content/Profile/NewPost/NewPost.jsx","components/Main/Content/Profile/Posts/Post/Post.jsx","components/Main/Content/Profile/Posts/Posts.jsx","components/Main/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Main/Content/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Main/Content/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Main/Content/Profile/ProfileInfo/ProfileInfo.jsx","components/Main/Content/Profile/Profile.jsx","components/Main/Content/Profile/ProfileContainer.jsx","components/Main/Content/Routes/Routes.jsx","components/Main/Content/Settings/Settings.jsx","components/Main/Content/StarUsers/StarUsers.jsx","components/Main/Content/StarUsers/StarUsersContainer.jsx","components/Main/Content/Content.jsx","components/Main/Main.jsx","App.js","index.js","components/Main/Content/Profile/ProfileInfo/ProfileInfo.module.scss","components/Header/Header.module.scss","assets/images/user_default.png","components/Main/Content/AboutProject/AboutProject.module.scss","redux/auth-reducer.js","components/Main/Content/Profile/NewPost/NewPost.module.scss","utils/validators/validators.js","components/Common/Preloader/Preloader.jsx","redux/users-selectors.js","components/Main/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss"],"names":["ADD_MESSAGE","REFRESH_CURRENT_TEXT_OF_MESSAGE","SET_CURRENT_TEXT_OF_MESSAGE","initialState","dialogs","id","name","dialogsMessages","messages","messagesText","newMessageText","setCurrentTextOfMessage","currentTextOfMessage","dialogId","type","addNewMessage","dispatch","length","addMessage","refreshCurrentTextOfMessage","reset","resetNewMessageField","dialogsReducer","state","action","dialogsMessagesItemAvaileble","filter","dm","newMessage","dialogsMessagesMockup","map","module","exports","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_IN_PROGRESS","users","pageSize","currentPage","totalUsersCount","isFetching","followingInProgress","followSucces","userId","unfollowSucces","setUsers","toggleIsFetching","toggleFollowingInProgress","requestUsers","a","usersAPI","getUsers","data","items","totalCount","updateUsers","pageNumber","unfollow","response","resultCode","follow","usersReducer","u","followed","instance","axios","withCredentials","baseURL","headers","authAPI","me","get","login","email","password","rememberMe","captcha","post","logout","delete","securityAPI","getCaptchaUrl","profileAPI","getProfile","getStatus","updateStatus","status","put","updatePhoto","photoFile","formData","FormData","append","saveProfile","profile","then","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","UPDATE_PHOTO_SUCCESS","DELETE_POST","UPDATE_POST","UPDATE_POST_MODE","profileInfo","userPhotoDefault","posts","message","isUpdatePostMode","setUserProfile","setUserStatus","updatePostMode","flag","addNewPost","newPostText","addPost","getUserProfile","getUserStatus","updateUserStatus","file","photos","getState","stopSubmit","_error","Promise","reject","deletePost","postIndex","index","deletePostSuccess","profilePage","findIndex","element","updatePost","updatePostSuccess","profileReducer","newPost","Math","max","p","console","log","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_USERS_STARS","starUsersReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","dialogsPage","usersPage","authReducer","form","formReducer","app","starUsersPage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","className","s","header","wrapper","header__img","src","loginName","logoutButton","onClick","loginLink","HeaderContainer","NavbarFriends","navbar__friendsTitle","activeClassName","navbar__active","friends__items","friends__item","alt","navbar","navbar__items","navbar__item","navbar__friends","aboutProject","aboutProject__title","stack","stack__item","stack__title","stack__list","list__item","cn","stack__listBottom","list__itemPink","list__itemBlue","aboutProject__linkTitle","aboutProject__link","target","href","AddNewPostFormRedux","maxLengthCreator","minLengthCreator","reduxForm","onSubmit","handleSubmit","htmlFor","Field","newPosts__text","component","placeholder","validate","required","maxLength","newPosts__button","AddNewPost","newPosts","newPosts__title","initialValues","Post","useState","editMode","setEditMode","massage","setMessage","warningMode","setWarningMode","useEffect","deactivateWarningMode","post__constant","post__image","small","post__text","controls","controls__button","controls__buttonClose","warning__container","onBlur","tabIndex","warning__title","warning__buttons","post__update","post__textareaContainer","post__textarea","onChange","e","currentTarget","value","autoFocus","onFocus","val","Posts","postsElements","reverse","key","ProfileStatusWithHooks","memo","setStatus","undefined","profileStatus","profileStatus__Description","isOwner","profileStatus__input","Contact","contactTitle","contactValue","profileInfo__Contact","profileInfo__ContactTitle","profileInfo__ContactValue","ProfileData","goToEditMode","profileInfo__Text","profileInfo__TextLeft","profileInfo__Name","fullName","profileInfo__Parametr","bold","lookingForAJob","lookingForAJobDescription","aboutMe","profileInfo__button","profileInfo__Contacts","profileInfo__ContactsTitle","Object","keys","contacts","ProfileDataFormRedux","error","profileInfo__Form","profileInfo__FormLeft","profileInfo__Checkbox","profileInfo__CheckboxInput","profileInfo__CheckboxLabel","profileInfo__ParametrInput","profileInfo__buttonSave","formCommonError","profileInfo__FormContacts","ProfileInfo","profileCover","profileCover__img","profileInfo__PhotoWrapper","profileInfo__PhotoImage","large","input__wrapper","input__file","files","input__fileButton","input__fileIcon","input__fileButtonText","Profile","ProfileContainer","match","params","authorizedUserId","refreshProfile","prevProps","withRouter","StarUsers","setUsersStars","avatar","location","city","country","users__item","users__img","users__button__unfollow","users__button","active","hover","users__button__follow","users__info","users__infoTop","users__name","users__city","users__infoBottom","users__status","users__country","StarUsersContainer","Preloader","getStars","getIsFetchingStars","getFollowingInProgressStars","DialogsContainer","lazy","UsersContainer","Login","Content","content","fallback","exact","path","render","Main","main","App","initializeApp","promise","getAuthUserData","all","renderEntireTree","ReactDOM","StrictMode","document","getElementById","subscribe","SET_AUTH_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","url","minLength","preloader","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress"],"mappings":"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","file":"static/js/main.6f7b0386.chunk.js","sourcesContent":["import {\r\n    reset\r\n} from \"redux-form\";\r\n\r\nconst ADD_MESSAGE = 'ADD-MESSAGE';\r\nconst REFRESH_CURRENT_TEXT_OF_MESSAGE = 'REFRESH_CURRENT_TEXT_OF_MESSAGE';\r\nconst SET_CURRENT_TEXT_OF_MESSAGE = 'SET_CURRENT_TEXT_OF_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [{\r\n            id: 1,\r\n            name: 'Михайло'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Віка'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Іван'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Клара'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Христина'\r\n        },\r\n        {\r\n            id: 7,\r\n            name: 'Давид'\r\n        },\r\n        {\r\n            id: 8,\r\n            name: 'Ігор'\r\n        },\r\n        {\r\n            id: 9,\r\n            name: 'Інна'\r\n        },\r\n        {\r\n            id: 10,\r\n            name: 'Аліна'\r\n        },\r\n        {\r\n            id: 11,\r\n            name: 'Наталя'\r\n        },\r\n        {\r\n            id: 12,\r\n            name: 'Ірина'\r\n        },\r\n        {\r\n            id: 13,\r\n            name: 'Тетяна'\r\n        },\r\n        {\r\n            id: 14,\r\n            name: 'Володимир'\r\n        },\r\n        {\r\n            id: 15,\r\n            name: 'Віталій'\r\n        },\r\n        {\r\n            id: 16,\r\n            name: 'Олександр'\r\n        },\r\n        {\r\n            id: 17,\r\n            name: 'Валерій'\r\n        },\r\n        {\r\n            id: 18,\r\n            name: 'Святослав'\r\n        },\r\n        {\r\n            id: 19,\r\n            name: 'Петро'\r\n        }\r\n    ],\r\n    dialogsMessages: [{\r\n            id: 0,\r\n            messages: [{\r\n                id: 1,\r\n                name: 'вело-радник',\r\n                messagesText: 'Виберіть діалог зі списку контактів щоби почати спілкування.'\r\n            }]\r\n        },\r\n        {\r\n            id: 1,\r\n            messages: [{\r\n                    id: 1,\r\n                    name: 'Михайло',\r\n                    messagesText: 'Здаров! Вже замінив колесо?'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'Я',\r\n                    messagesText: 'Привіт.'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Я',\r\n                    messagesText: 'Так вже відремонтував і встановив нові катафоти!'\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name: 'Михайло',\r\n                    messagesText: 'Тоді завтра на 10:30 їдемо 20км по маршруту Б.'\r\n                },\r\n                {\r\n                    id: 5,\r\n                    name: 'Я',\r\n                    messagesText: 'ОК'\r\n                },\r\n                {\r\n                    id: 6,\r\n                    name: 'Михайло',\r\n                    messagesText: 'До зустрічі.'\r\n                }\r\n            ],\r\n            newMessageText: \"\"\r\n        },\r\n        {\r\n            id: 2,\r\n            messages: [{\r\n                    id: 1,\r\n                    name: 'Віка',\r\n                    messagesText: 'Привіт! Коли їдемо на стадіон?'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'Я',\r\n                    messagesText: 'Привіт. Ще маю трохи повчити react, потім їдемо!'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Віка',\r\n                    messagesText: 'Добре, після дощу їдемо 10км по парку.'\r\n                }\r\n            ],\r\n            newMessageText: \"\"\r\n        },\r\n        {\r\n            id: 3,\r\n            messages: [{\r\n                    id: 1,\r\n                    name: 'Софія',\r\n                    messagesText: 'Привіт. А коли змагання на велотреку?'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'Я',\r\n                    messagesText: 'Здається в суботу.'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Я',\r\n                    messagesText: 'але треба перевірити..'\r\n                }\r\n            ],\r\n            newMessageText: \"\"\r\n        },\r\n        {\r\n            id: 4,\r\n            messages: [{\r\n                id: 1,\r\n                name: 'Іван',\r\n                messagesText: 'Друже, в тебе десь був запасний підшипник?'\r\n            }],\r\n            newMessageText: \"\"\r\n        }\r\n    ]\r\n\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_MESSAGE: {\r\n\r\n            let dialogsMessagesItemAvaileble = [...state.dialogsMessages.filter(dm => dm.id == action.dialogId)];\r\n            let id = +`${dialogsMessagesItemAvaileble[0].messages.length + 1}`;\r\n            // let id = +`${Math.max(dialogsMessagesItemAvaileble[0].messages.map( (p)=> p.id ))}`;\r\n\r\n            let newMessage = {\r\n                id: +id,\r\n                name: 'Я',\r\n                messagesText: action.newMessageText\r\n            };\r\n\r\n            let dialogsMessagesMockup = {\r\n                id: action.dialogId,\r\n                messages: [newMessage],\r\n                newMessageText: \"\"\r\n            };\r\n\r\n            if (dialogsMessagesItemAvaileble.length > 0) {\r\n                return {\r\n                    ...state,\r\n                    dialogsMessages: [...state.dialogsMessages.map((dm) => {\r\n                        return (\r\n                            dm.id == action.dialogId ? {\r\n                                ...dm,\r\n                                messages: [...dm.messages, newMessage],\r\n                            } :\r\n                            dm\r\n                        )\r\n                    })]\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    dialogsMessages: [\r\n                        ...state.dialogsMessages,\r\n                        dialogsMessagesMockup\r\n                    ]\r\n                };\r\n            }\r\n\r\n        }\r\n\r\n        case REFRESH_CURRENT_TEXT_OF_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                dialogsMessages: [...state.dialogsMessages.map((dm) => {\r\n                    return (\r\n                        dm.id == action.dialogId ? {\r\n                            ...dm,\r\n                            newMessageText: \"\",\r\n                        } :\r\n                        dm\r\n                    )\r\n                })]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_TEXT_OF_MESSAGE: {\r\n\r\n            let dialogsMessagesItemAvaileble = [...state.dialogsMessages.filter(dm => dm.id == action.dialogId)];\r\n\r\n            let dialogsMessagesMockup = {\r\n                id: action.dialogId,\r\n                messages: [],\r\n                newMessageText: action.currentTextOfMessage\r\n            };\r\n\r\n            if (dialogsMessagesItemAvaileble.length > 0) {\r\n                return {\r\n                    ...state,\r\n                    dialogsMessages: [...state.dialogsMessages.map((dm) => {\r\n                        return (\r\n                            dm.id == action.dialogId ? {\r\n                                ...dm,\r\n                                newMessageText: action.currentTextOfMessage,\r\n                            } :\r\n                            dm\r\n                        )\r\n                    })]\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    dialogsMessages: [\r\n                        ...state.dialogsMessages,\r\n                        dialogsMessagesMockup\r\n                    ]\r\n                };\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//AC\r\nexport const addMessage = (newMessageText, dialogId) => ({\r\n    type: ADD_MESSAGE,\r\n    newMessageText: newMessageText,\r\n    dialogId: dialogId\r\n});\r\n\r\nexport const refreshCurrentTextOfMessage = (dialogId) => ({\r\n    type: REFRESH_CURRENT_TEXT_OF_MESSAGE,\r\n    dialogId: dialogId\r\n})\r\n\r\nexport const setCurrentTextOfMessage = (currentTextOfMessage, dialogId) => ({\r\n    type: SET_CURRENT_TEXT_OF_MESSAGE,\r\n    currentTextOfMessage: currentTextOfMessage,\r\n    dialogId: dialogId\r\n})\r\n\r\n//TC\r\nexport const addNewMessage = (newMessageText, dialogId) => (dispatch) => {\r\n    if (newMessageText.length > 0) {\r\n        dispatch(addMessage(newMessageText, dialogId));\r\n        dispatch(refreshCurrentTextOfMessage(dialogId));\r\n        dispatch(reset('DialogsAddNewMessage'));\r\n    }\r\n};\r\n\r\nexport const resetNewMessageField = () => (dispatch) => {\r\n    dispatch(reset('DialogsAddNewMessage'));\r\n}\r\n\r\nexport default dialogsReducer;\r\n\r\n\r\n\r\n// //найти объект переписки из массива переписок\r\n// let dialogMessages = {\r\n//     ...state.dialogsMessages.filter(dm => dm.id === action.dialogId)\r\n// };\r\n\r\n// let id = +`${Math.max(...state.dialogsMessages\r\n//         .filter( messagesItems => messagesItems.id === action.dialogId)\r\n//         .map( (p)=> p.id ))+1}`;\r\n\r\n\r\n// const newProjects = projects.map(p =>\r\n//     p.value === 'jquery-ui' ?\r\n//     {\r\n//         ...p,\r\n//         desc: 'new description'\r\n//     } :\r\n//     p\r\n// );\r\n\r\n\r\n\r\n\r\n// return {\r\n//     ...state,\r\n//     dialogsMessages: [...state.dialogsMessages.map((dm) => {\r\n//         return (\r\n//             dm.id == action.dialogId ? {\r\n//                 ...dm,\r\n//                 messages: [...dm.messages, newMessage],\r\n//             } :\r\n//             dm\r\n//         )\r\n//     })]\r\n// };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo__Form\":\"ProfileDataForm_profileInfo__Form__j1yhs\",\"profileInfo__FormLeft\":\"ProfileDataForm_profileInfo__FormLeft__DEw8P\",\"profileInfo__Name\":\"ProfileDataForm_profileInfo__Name__2DQ7w\",\"profileInfo__Parametr\":\"ProfileDataForm_profileInfo__Parametr__ra9NW\",\"profileInfo__Checkbox\":\"ProfileDataForm_profileInfo__Checkbox__2E2WL\",\"profileInfo__CheckboxLabel\":\"ProfileDataForm_profileInfo__CheckboxLabel__WwIcz\",\"profileInfo__CheckboxInput\":\"ProfileDataForm_profileInfo__CheckboxInput__1Vz-F\",\"profileInfo__ParametrInput\":\"ProfileDataForm_profileInfo__ParametrInput__2eFks\",\"bold\":\"ProfileDataForm_bold__3VedU\",\"profileInfo__FormContacts\":\"ProfileDataForm_profileInfo__FormContacts__3ot3S\",\"profileInfo__ContactsTitle\":\"ProfileDataForm_profileInfo__ContactsTitle__UhJuq\",\"profileInfo__Contact\":\"ProfileDataForm_profileInfo__Contact__36MCj\",\"profileInfo__ContactTitle\":\"ProfileDataForm_profileInfo__ContactTitle__1SU6H\",\"profileInfo__ContactValue\":\"ProfileDataForm_profileInfo__ContactValue__2Fqz5\",\"profileInfo__button\":\"ProfileDataForm_profileInfo__button__hBBNS\",\"profileInfo__buttonSave\":\"ProfileDataForm_profileInfo__buttonSave__tJ4jX\",\"formCommonError\":\"ProfileDataForm_formCommonError__2r_5X\"};","import {\r\n    usersAPI\r\n} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    isFetching: false, //preloader\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            //возвращаем объект (новый state)\r\n            return {\r\n                //cкопировали state\r\n                ...state,\r\n                //в него пушим массив users \r\n                //(перезаписываем с изменениями исходный)\r\n                users: state.users.map(u => {\r\n                    //если id пользователя совпадает\r\n                    if (u.id === action.userId) {\r\n                        //копируем объект пользователя поверхностно\r\n                        //внутри него меняем флаг подписки\r\n                        //и возвращаем в новый массив\r\n                        return {\r\n                            ...u,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    //иначе возвращаем исходный элемент в новый массив users\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {\r\n                            ...u,\r\n                            followed: false\r\n                        }\r\n                    }\r\n\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                //добавляем новых юзеров из экшена (склеиваем два массива)\r\n                users: [...action.users]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n\r\n\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//AC\r\nexport const followSucces = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\n\r\nexport const unfollowSucces = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\n\r\nexport const setTotalUsersCount = (totalCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalCount\r\n});\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\n\r\nexport const toggleFollowingInProgress = (followingInProgress, userId) => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n    followingInProgress,\r\n    userId\r\n});\r\n\r\n\r\n//TC\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    //side-effect\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nexport const updateUsers = (pageNumber, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(pageNumber));\r\n\r\n    //side-effect\r\n    let data = await usersAPI.getUsers(pageNumber, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    //side-effect\r\n    let response = await usersAPI.unfollow(userId);\r\n\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(unfollowSucces(userId))\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    //side-effect\r\n    let response = await usersAPI.follow(userId);\r\n\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(followSucces(userId))\r\n    }\r\n};\r\n\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1OCxr\",\"navbar__items\":\"Navbar_navbar__items__1BDow\",\"navbar__item\":\"Navbar_navbar__item__1IK2I\",\"navbar__active\":\"Navbar_navbar__active__2uGOW\",\"navbar__settings\":\"Navbar_navbar__settings__3Wk5o\",\"navbar__friends\":\"Navbar_navbar__friends__TL258\",\"navbar__friendsTitle\":\"Navbar_navbar__friendsTitle__2tJ5n\",\"friends__items\":\"Navbar_friends__items__kd5UW\",\"friends__item\":\"Navbar_friends__item__36Vv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__aYX3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2eaG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__1dAnd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__IiANM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__JnV9O\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"18021664-8191-4731-8d37-bfc58504d56d\"\r\n    }\r\n});\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return (\r\n            instance.get(`auth/me`)\r\n        )\r\n    },\r\n    login(email, password, rememberMe, captcha=null) {\r\n        return (\r\n            instance.post(`auth/login`, {\r\n                email,\r\n                password,\r\n                rememberMe,\r\n                captcha\r\n            })\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            instance.delete(`auth/login`)\r\n        )\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl () {\r\n        return (\r\n            instance.get(`security/get-captcha-url`)\r\n        )\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return (\r\n            instance.get(`profile/${userId}`)\r\n        )\r\n    },\r\n    getStatus(userId) {\r\n        return (\r\n            instance.get(`profile/status/${userId}`)\r\n        )\r\n    },\r\n    updateStatus(status) {\r\n        return (\r\n            instance.put(`profile/status`, {\r\n                status: status\r\n            })\r\n        )\r\n    },\r\n    updatePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return (\r\n            instance.put(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n        )\r\n    },\r\n    saveProfile(profile) {\r\n        return (\r\n            instance.put(`profile`, profile)\r\n        )\r\n    }\r\n};\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    unfollow(id) {\r\n        return (\r\n            instance.delete(`follow/${id}`)\r\n        )\r\n    },\r\n    follow(id) {\r\n        return (\r\n            instance.post(`follow/${id}`)\r\n        )\r\n    }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__jCbh6\",\"post__constant\":\"Post_post__constant__2i1FS\",\"post__image\":\"Post_post__image__uNmv9\",\"post__text\":\"Post_post__text__ll9lV\",\"controls\":\"Post_controls__3K897\",\"controls__button\":\"Post_controls__button__1AxAz\",\"controls__buttonClose\":\"Post_controls__buttonClose__33so3\",\"post__update\":\"Post_post__update__uUJgD\",\"border\":\"Post_border__3JKfr\",\"post__textareaContainer\":\"Post_post__textareaContainer__2QAy0\",\"post__textarea\":\"Post_post__textarea__3hAgb\",\"warning__container\":\"Post_warning__container__2mQtP\",\"warning__title\":\"Post_warning__title__34hXG\",\"warning__buttons\":\"Post_warning__buttons__3gzc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo__Text\":\"ProfileData_profileInfo__Text__p2b6P\",\"profileInfo__TextLeft\":\"ProfileData_profileInfo__TextLeft__3_Kn9\",\"profileInfo__Name\":\"ProfileData_profileInfo__Name__313WZ\",\"profileInfo__Parametr\":\"ProfileData_profileInfo__Parametr__1SJjM\",\"bold\":\"ProfileData_bold__2oLR2\",\"profileInfo__Contacts\":\"ProfileData_profileInfo__Contacts__1rf8-\",\"profileInfo__ContactsTitle\":\"ProfileData_profileInfo__ContactsTitle__3aLZA\",\"profileInfo__Contact\":\"ProfileData_profileInfo__Contact__Mhz2q\",\"profileInfo__ContactTitle\":\"ProfileData_profileInfo__ContactTitle__ihaEQ\",\"profileInfo__ContactValue\":\"ProfileData_profileInfo__ContactValue__a_xcH\",\"profileInfo__button\":\"ProfileData_profileInfo__button__3YJNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"StarUsers_users__1QpMK\",\"users__item\":\"StarUsers_users__item__R3vZz\",\"users__img\":\"StarUsers_users__img__d3GoT\",\"users__button\":\"StarUsers_users__button__3ach0\",\"users__info\":\"StarUsers_users__info__2Yba7\",\"users__infoTop\":\"StarUsers_users__infoTop__15aTL\",\"users__name\":\"StarUsers_users__name__1R34U\",\"users__status\":\"StarUsers_users__status__k85pX\",\"users__infoBottom\":\"StarUsers_users__infoBottom__2vHTU\",\"users__city\":\"StarUsers_users__city__7eb4Z\",\"users__country\":\"StarUsers_users__country__1Eqxk\",\"users__button__follow\":\"StarUsers_users__button__follow__OIe6j\",\"users__button__unfollow\":\"StarUsers_users__button__unfollow__3H1W8\",\"active\":\"StarUsers_active__3H9i_\",\"hover\":\"StarUsers_hover__1xweK\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"login\"/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import {\r\n    reset,\r\n    stopSubmit\r\n} from \"redux-form\";\r\nimport {\r\n    profileAPI\r\n} from \"../api/api\";\r\nimport userPhotoDefault from '../assets/images/user_default.png';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'GET_USER_STATUS';\r\nconst UPDATE_PHOTO_SUCCESS = 'UPDATE_PHOTO_SUCCESS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst UPDATE_POST = 'UPDATE_POST';\r\nconst UPDATE_POST_MODE = 'UPDATE_POST_MODE';\r\n\r\nlet initialState = {\r\n    profileInfo: {\r\n        \"aboutMe\": \"про мене\",\r\n        \"contacts\": {\r\n            \"facebook\": null,\r\n            \"website\": null,\r\n            \"vk\": null,\r\n            \"twitter\": null,\r\n            \"instagram\": null,\r\n            \"youtube\": null,\r\n            \"github\": null,\r\n            \"mainLink\": null\r\n        },\r\n        \"lookingForAJob\": true,\r\n        \"lookingForAJobDescription\": \"js\",\r\n        \"fullName\": \"Им'я\",\r\n        \"userId\": \"myProfile\",\r\n        \"photos\": {\r\n            \"small\": userPhotoDefault,\r\n            \"large\": userPhotoDefault\r\n        }\r\n    },\r\n    status: \"Статус має бути тут\",\r\n    posts: [{\r\n            id: 0,\r\n            message: \"А настройки профиля отправляются на сервер после изменения, поэтому можно редактировать и перезагружать, всё должно сохраниться и обновиться.)\"\r\n        }, {\r\n            id: 1,\r\n            message: \"Все эти посты работают со стейтом Redux, но пока не написали API для их хранения на сервере и поэтому после полной перезагрузки странички они возвращаются по дефолту..\"\r\n        }, {\r\n            id: 2,\r\n            message: \"Дууууже довгий пост. Він показує що, слова переносяться автоматичооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооо, навіть якщо клавіша залипла:)\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"✅Привіт, хто хоче покататись?\"\r\n        },\r\n        {\r\n            id: 4,\r\n            message: \"🕝Сьогодні починаю нову програму! Поїхали!\"\r\n        }\r\n    ],\r\n    isUpdatePostMode: false\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: +`${Math.max(...state.posts.map( (p)=> p.id ))+1}`,\r\n                message: action.newPostText\r\n            };\r\n\r\n            console.log(newPost)\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profileInfo: action.profileInfo\r\n            }\r\n        }\r\n\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n\r\n        case UPDATE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profileInfo: {\r\n                    ...state.profileInfo,\r\n                    photos: action.photos\r\n                }\r\n            }\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts.filter((item, index) => index !== action.index)]\r\n            }\r\n        }\r\n\r\n        case UPDATE_POST: {\r\n            let updatePost = {\r\n                id: +`${state.posts[action.index].id}`,\r\n                message: action.message\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts.map((post, index) => {\r\n                    if (index === action.index) {\r\n                        return updatePost;\r\n                    }\r\n\r\n                    return post;\r\n                })],\r\n            };\r\n\r\n        }\r\n\r\n        case UPDATE_POST_MODE: {\r\n            return {\r\n                ...state,\r\n                isUpdatePostMode: action.flag\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//AC\r\nexport const addPost = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText: newPostText\r\n    }\r\n};\r\n\r\nexport const setUserProfile = (profileInfo) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profileInfo: profileInfo\r\n    }\r\n};\r\n\r\nexport const setUserStatus = (status) => {\r\n    return {\r\n        type: SET_USER_STATUS,\r\n        status: status\r\n    }\r\n};\r\n\r\nexport const updatePhotoSuccess = (photos) => {\r\n    return {\r\n        type: UPDATE_PHOTO_SUCCESS,\r\n        photos\r\n    }\r\n};\r\n\r\nexport const deletePostSuccess = (postIndex) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        index: postIndex\r\n    }\r\n};\r\n\r\nexport const updatePostSuccess = (postIndex, message) => {\r\n    return {\r\n        type: UPDATE_POST,\r\n        index: postIndex,\r\n        message: message\r\n    }\r\n};\r\n\r\nexport const updatePostMode = (flag) => {\r\n    // console.log(flag);\r\n    return {\r\n        type: UPDATE_POST_MODE,\r\n        flag: flag\r\n    }\r\n};\r\n\r\n\r\n//TC\r\nexport const addNewPost = (newPostText) => (dispatch) => {\r\n    dispatch(addPost(newPostText));\r\n    dispatch(reset('ProfileAddNewPost'));\r\n};\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId);\r\n\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    // debugger\r\n    const response = await profileAPI.getStatus(userId);\r\n\r\n    dispatch(setUserStatus(response.data));\r\n};\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n};\r\n\r\nexport const updatePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.updatePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(updatePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const response = await profileAPI.saveProfile(profile);\r\n    const userId = getState().auth.userId;\r\n    // console.log(response);\r\n    // console.log(response.data.messages[0]);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {\r\n            _error: response.data.messages[0]\r\n        }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n};\r\n\r\nexport const deletePost = (id) => (dispatch, getState) => {\r\n    const posts = getState().profilePage.posts;\r\n    let postIndex = posts.findIndex(element => element.id === id);\r\n\r\n    dispatch(deletePostSuccess(postIndex));\r\n    dispatch(updatePostMode(false));\r\n    // console.log(posts);\r\n};\r\n\r\nexport const updatePost = (id, message) => (dispatch, getState) => {\r\n    const posts = getState().profilePage.posts;\r\n    let postIndex = posts.findIndex(element => element.id === id);\r\n\r\n    dispatch(updatePostSuccess(postIndex, message));\r\n};\r\n\r\nexport default profileReducer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    usersAPI\r\n} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS_STARS = 'SET_USERS_STARS';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    isFetching: false, //preloader\r\n    followingInProgress: []\r\n};\r\n\r\nconst starUsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            //возвращаем объект (новый state)\r\n            return {\r\n                //cкопировали state\r\n                ...state,\r\n                //в него пушим массив users \r\n                //(перезаписываем с изменениями исходный)\r\n                users: state.users.map(u => {\r\n                    //если id пользователя совпадает\r\n                    if (u.id === action.userId) {\r\n                        //копируем объект пользователя поверхностно\r\n                        //внутри него меняем флаг подписки\r\n                        //и возвращаем в новый массив\r\n                        return {\r\n                            ...u,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    //иначе возвращаем исходный элемент в новый массив users\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {\r\n                            ...u,\r\n                            followed: false\r\n                        }\r\n                    }\r\n\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n\r\n        case SET_USERS_STARS: {\r\n            return {\r\n                ...state,\r\n                //добавляем новых юзеров из экшена (склеиваем два массива)\r\n                users: [...action.users]\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n\r\n\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//AC\r\nexport const followSucces = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\n\r\nexport const unfollowSucces = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\n\r\nexport const setUsersStars = (users) => ({\r\n    type: SET_USERS_STARS,\r\n    users\r\n});\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\n\r\nexport const toggleFollowingInProgress = (followingInProgress, userId) => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n    followingInProgress,\r\n    userId\r\n});\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    //side-effect\r\n    let response = true;\r\n\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n    if (response) {\r\n        dispatch(unfollowSucces(userId))\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    //side-effect\r\n    let response = true;\r\n\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n    if (response) {\r\n        dispatch(followSucces(userId))\r\n    }\r\n};\r\n\r\n\r\nexport default starUsersReducer;","import {\r\n    getAuthUserData\r\n} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//AC\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS\r\n});\r\n\r\n//TC\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    \r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n};\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\"\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport starUsersReducer from \"./star-users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    starUsersPage: starUsersReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.scss';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={`wrapper ${s.wrapper}`}>\r\n                <img className={s.header__img} src=\"https://i.pinimg.com/originals/b5/d2/f4/b5d2f4b06c0390c4dadb66da03ade490.png\" />\r\n\r\n                <div className={s.login}>\r\n                    {props.isAuth\r\n                        ?\r\n                        <div>\r\n                            <p className={s.loginName}>\r\n                                {props.login}\r\n                            </p>\r\n                            <button className={s.logoutButton} onClick={props.logout}>\r\n                                Вийти\r\n                            </button>\r\n                        </div>\r\n                        :\r\n                        <NavLink className={s.loginLink} to={'/login'}>\r\n                            Авторизуватись\r\n                        </NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header >\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout } from \"../../redux/auth-reducer\";\r\n\r\n\r\n//внутренний контейнер\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Header {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//внешний контейнер\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <aside className={s.navbar}>\r\n      <nav>\r\n        <ul className={s.navbar__items}>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.navbar__active}>\r\n              Моя сторінка\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/users\" activeClassName={s.navbar__active}>\r\n              Мої підписки\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/starusers\" activeClassName={s.navbar__active}>\r\n              Зірки спортсмени\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.navbar__active}>\r\n              Повідомлення\r\n            </NavLink>\r\n          </li>\r\n          {/* <li className={s.navbar__item}>\r\n            <NavLink to=\"/photos\" activeClassName={s.navbar__active}>\r\n              Фото з подорожей\r\n            </NavLink>\r\n          </li> */}\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/routes\" activeClassName={s.navbar__active}>\r\n              Веломаршрути\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/aboutproject\" activeClassName={s.navbar__active}>\r\n              Про цей проект\r\n            </NavLink>\r\n          </li>\r\n          {/* <li className={s.navbar__item}>\r\n            <NavLink to=\"/music\" activeClassName={s.navbar__active}>\r\n              Музика\r\n            </NavLink>\r\n          </li> */}\r\n          {/* <li className={` ${s.navbar__settings}`}>\r\n            <NavLink to=\"/settings\" activeClassName={s.navbar__active}>\r\n              Налаштування\r\n            </NavLink>\r\n          </li> */}\r\n        </ul>\r\n\r\n        <div className={s.navbar__friends}>\r\n          {props.isAuth && <NavbarFriends />}\r\n        </div>\r\n      </nav>\r\n    </aside>\r\n  );\r\n}\r\n\r\nconst NavbarFriends = () => {\r\n  return (\r\n    <div>\r\n      <NavLink to=\"/friends\" className={s.navbar__friendsTitle} activeClassName={s.navbar__active}>\r\n        Друзі\r\n          </NavLink>\r\n      <ul className={s.friends__items}>\r\n        <li className={s.friends__item}>\r\n          <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTo4h8hLgr_MYH_Ep7z769e--2l0dTU01wv9g&usqp=CAU\" alt=\"\" />\r\n          <p>Михайло</p>\r\n        </li>\r\n        <li className={s.friends__item}>\r\n          <img src=\"https://instagrammi.ru/wp-content/uploads/arnold-shvarcenegger.jpg\" alt=\"\" />\r\n          <p>Арнольд</p>\r\n        </li>\r\n        <li className={s.friends__item}>\r\n          <img src=\"https://kinoafisha.ua/upload/2020/05/news/n27/2c/73954/b_211kuvisyarkii-obraz-teilor-svift.jpg\" alt=\"\" />\r\n          <p>Тейлор</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from \"react\";\r\nimport { withAuthRedirect } from \"../../../../hoc/AuthRedirect\";\r\nimport s from './AboutProject.module.scss';\r\nimport cn from \"classnames\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst AboutProject = () => {\r\n    return (\r\n        <div className={s.aboutProject}>\r\n            {/* <p className={s.aboutProject__title}>\r\n                Всем привет, я Александр и это мой первый проект на React.\r\n            </p> */}\r\n            <p className={s.aboutProject__title}>\r\n                Використані наступні технології та бібліотеки:\r\n            </p>\r\n            <ul className={s.stack}>\r\n                <li className={s.stack__item}>\r\n                    <p className={s.stack__title}>\r\n                        UI:\r\n                    </p>\r\n                    <ul className={s.stack__list}>\r\n                        <li className={s.list__item}>\r\n                            <span>React</span>, React-Hooks, functional component, class component.\r\n                        </li>\r\n                        <li className={s.list__item}>\r\n                            React Router, Compose, React.memo.\r\n                        </li>\r\n                        <li className={s.list__item}>\r\n                            HOC: WithRouter, WithAuthRedirect.\r\n                        </li>\r\n                        <li className={s.list__item}>\r\n                            React.lazy, React.suspense\r\n                        </li>\r\n                        <li className={s.list__item}>\r\n                            SCSS, CSS Modules, classnames.\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li className={s.stack__item}>\r\n                    <p className={s.stack__title}>\r\n                        BLL:\r\n                    </p>\r\n                    <ul className={s.stack__list}>\r\n                        <li className={s.list__item}>\r\n                            <span>Redux</span>, react-redux, connect.\r\n                        </li>\r\n                        <li className={s.list__item}>\r\n                            FLUX-архітектура.\r\n                        </li>\r\n                        <li className={s.list__item}>\r\n                            Selectors, Reselect.\r\n                        </li>\r\n                        <li className={s.list__item}>\r\n                            Redux-form, validation.\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li className={s.stack__item}>\r\n                    <p className={s.stack__title}>\r\n                        DAL:\r\n                    </p>\r\n                    <ul className={s.stack__list}>\r\n                        <li className={s.list__item}>\r\n                            <span>REST API</span>, Axios.\r\n                        </li>\r\n                        <li className={s.list__item}>\r\n                            <span>Middleware: </span>Redux-thunk.\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n            <p className={s.aboutProject__title}>\r\n                Реалізовано:\r\n            </p>\r\n            <ul className={cn(s.stack__list, s.stack__listBottom)}>\r\n                <li className={s.list__item}>\r\n                    <span>Сторінка Авторизації</span>, валідація, captcha.\r\n                </li>\r\n                <li className={s.list__item}>\r\n                    <span>Сторінка Профілю:</span>\r\n                    <p> - можливість зміни фотографії, статуса та інформації  <span className={s.list__itemPink}>(працює з redux+сервер-API)</span>.</p>\r\n                    <p> - можливість додавання, редагування, видалення постів <span className={s.list__itemBlue}>(працює локально з redux)</span>.</p>\r\n                </li>\r\n                <li className={s.list__item}>\r\n                    <span>Сторінка \"Мої підписки\":</span>\r\n                    <p> - пагінація, preloader, можливість переходу на сторінку юзера <span className={s.list__itemPink}>(працює з redux+сервер-API)</span>.</p>\r\n                    <p> - можливість підписуватись на сторінки інших юзерів <span className={s.list__itemPink}>(працює з redux+сервер-API)</span>.</p>\r\n                </li>\r\n                <li className={s.list__item}>\r\n                    <span>Сторінка \"Повідомлення\":</span>\r\n                    <p> - можливість вибору діалогу та додавання нового повідомлення. <span className={s.list__itemBlue}>(працює локально з redux)</span></p>\r\n                    <p> - збереження чорнетки повідомлення для кожного діалогу. <span className={s.list__itemBlue}>(працює локально з redux)</span></p>\r\n                </li>\r\n                <li className={s.list__item}>\r\n                    <span>Авторський дизайн😉</span>\r\n                </li>\r\n            </ul>\r\n\r\n            <p className={cn(s.aboutProject__title, s.aboutProject__linkTitle)}>\r\n                Посилання на GitHub проєкту:\r\n            </p>\r\n            <ul className={cn(s.stack__list, s.stack__listBottom)}>\r\n                <li className={s.list__item}>\r\n                    <a className={s.aboutProject__link} target=\"_blank\"\r\n                     href=\"https://github.com/alexfuturist/velo-friends\">https://github.com/alexfuturist/velo-friends</a>\r\n                </li>\r\n            </ul>\r\n            <p className={cn(s.aboutProject__title, s.aboutProject__linkTitle)}>\r\n                Посилання на Server-API docs:\r\n            </p>\r\n            <ul className={cn(s.stack__list, s.stack__listBottom)}>\r\n                <li className={s.list__item}>\r\n                    <a className={s.aboutProject__link} target=\"_blank\"\r\n                     href=\"https://social-network.samuraijs.com/docs\">https://social-network.samuraijs.com/docs</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(AboutProject);","import React from \"react\";\r\nimport { withAuthRedirect } from \"../../../../hoc/AuthRedirect\";\r\n\r\nconst Friends = () => {\r\n    return (\r\n        <div>\r\n            в процессе написания, нужна API:\\\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Friends);","import React from \"react\";\r\nimport { withAuthRedirect } from \"../../../../hoc/AuthRedirect\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            в процессе написания, нужна API:\\\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Music);","import React from \"react\";\r\nimport { withAuthRedirect } from \"../../../../hoc/AuthRedirect\";\r\n\r\nconst Photos = () => {\r\n    return (\r\n        <div>\r\n            в процессе написания, нужна API:\\\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Photos);","import React, { useEffect, useState } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, minLengthCreator, required } from '../../../../../utils/validators/validators';\r\nimport s from './NewPost.module.scss';\r\n\r\n\r\nconst maxLength600 = maxLengthCreator(600);\r\nconst minLength1 = minLengthCreator(1);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"newPost\"></label>\r\n                <Field className={s.newPosts__text} component=\"textarea\"\r\n                    name=\"newPost\" id=\"newPost\" placeholder=\"моя новина..\"\r\n                    validate={[required]} maxLength=\"600\"\r\n                />\r\n            </div>\r\n            <button className={`button ${s.newPosts__button}`}>Опублікувати</button>\r\n        </form >\r\n    )\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n    form: 'ProfileAddNewPost'\r\n})(AddNewPostForm);\r\n\r\nconst AddNewPost = (props) => {\r\n    //колбэк функция \r\n    const onSubmit = (formData) => {\r\n        !props.isUpdatePostMode &&\r\n            props.addNewPost(formData.newPost); //вызываем функцию добавления нового поста\r\n    };\r\n\r\n    return (\r\n        <div className={s.newPosts}>\r\n            <p className={s.newPosts__title}>Новий пост</p>\r\n            <AddNewPostFormRedux onSubmit={onSubmit} initialValues={{ newPost: null }} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddNewPost;","import React, { useEffect, useState } from \"react\";\r\nimport userPhotoDefault from '../../../../../../assets/images/user_default.png';\r\nimport cn from \"classnames\";\r\nimport s from './Post.module.scss';\r\n\r\nconst Post = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [message, setMessage] = useState(props.massage);\r\n  let [warningMode, setWarningMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMessage(props.massage);\r\n  }, [props.massage]);\r\n\r\n  \r\n  const activateEditMode = () => {\r\n    if (!props.isUpdatePostMode) {\r\n      setEditMode(true);\r\n      props.updatePostMode(true)\r\n    }\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updatePostMode(false);\r\n    props.updatePost(props.id, message);\r\n  }\r\n\r\n  const onPostChange = (e) => {\r\n    setMessage(e.currentTarget.value);\r\n  }\r\n\r\n  const activateWarningMode = () => {\r\n    if (!props.isUpdatePostMode) {\r\n      setWarningMode(true);\r\n      props.updatePostMode(true);\r\n    }\r\n  }\r\n\r\n  const deactivateWarningMode = () => {\r\n    setWarningMode(false);\r\n    props.updatePostMode(false);\r\n  }\r\n\r\n  return (\r\n    <li className={s.post}>\r\n      { !editMode &&\r\n        <div className={s.post__constant}>\r\n          <img className={s.post__image} src={props.profileInfo.photos.small || userPhotoDefault} alt=\"\" />\r\n          <p className={s.post__text}>{props.massage}</p>\r\n          <div className={s.controls}>\r\n            <div className={s.controls__button} onClick={activateEditMode}>редагувати</div>\r\n            <div className={cn(s.controls__button, s.controls__buttonClose)} onClick={activateWarningMode}>видалити</div>\r\n\r\n            {warningMode &&\r\n              <div className={s.warning__container} onBlur={deactivateWarningMode} tabIndex=\"1\">\r\n                <p className={s.warning__title}>Точно видалити?</p>\r\n                <div className={s.warning__buttons}>\r\n                  <div onClick={() => props.deletePost(props.id)} >так</div>\r\n                  <div onClick={deactivateWarningMode} >ні</div>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n      { editMode &&\r\n        <div className={s.post__update}>\r\n          <img className={s.post__image} src={props.profileInfo.photos.small} alt=\"\" />\r\n          <div className={s.post__textareaContainer}>\r\n            {message}\r\n            <textarea className={s.post__textarea} onChange={onPostChange} maxLength=\"600\"\r\n              value={message} autoFocus={true}\r\n              onFocus={function (e) {\r\n                let val = e.target.value;\r\n                e.target.value = '';\r\n                e.target.value = val;\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={s.controls}>\r\n            <div onClick={deactivateEditMode}>зберегти</div>\r\n          </div>\r\n        </div>\r\n\r\n      }\r\n\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from './Post/Post';\r\nimport s from './Posts.module.scss';\r\n\r\nconst Posts = (props) => {\r\n  let postsElements = [...props.posts].reverse()\r\n    .map(p => <Post\r\n      profileInfo={props.profileInfo}\r\n      massage={p.message}\r\n      deletePost={props.deletePost}\r\n      updatePost={props.updatePost}\r\n      updatePostMode={props.updatePostMode}\r\n      isUpdatePostMode={props.isUpdatePostMode}\r\n      key={p.id}\r\n      id={p.id} />);\r\n\r\n  return (\r\n    <ul className={s.posts}>\r\n      {postsElements}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Posts;","import React, { useEffect, useState } from \"react\";\r\nimport s from './ProfileStatus.module.scss';\r\n\r\nconst ProfileStatusWithHooks = React.memo((props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        if (props.status !== undefined) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) {\r\n            setEditMode(true);\r\n        }\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    \r\n    return (\r\n        <div className={s.profileStatus}>\r\n            { !editMode &&\r\n                <p className={s.profileStatus__Description} onClick={activateEditMode}>{props.status}</p>\r\n            }\r\n            { editMode &&\r\n                <input onChange={onStatusChange} maxLength=\"25\" autoFocus={true} onBlur={deactivateEditMode}\r\n                    className={s.profileStatus__input} value={status} />\r\n            }\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport ProfileStatusWithHooks from '../ProfileStatus/ProfileStatusWithHooks';\r\nimport s from './ProfileData.module.scss';\r\n\r\n\r\nconst ProfileData = ({ profileInfo, status, isOwner, goToEditMode, getUserStatus, updateUserStatus }) => {\r\n    // debugger\r\n    return (\r\n        <div className={s.profileInfo__Text} >\r\n            <div className={s.profileInfo__TextLeft}>\r\n                <div className={s.profileInfo__Name}> {profileInfo.fullName} </div>\r\n\r\n                <ProfileStatusWithHooks className={s.profileInfo__Parametr} status={status}\r\n                    getUserStatus={getUserStatus} updateUserStatus={updateUserStatus} isOwner={isOwner} />\r\n\r\n                <div className={s.profileInfo__Parametr}>\r\n                    <span className={s.bold}>Шукаю роботу:&#160;</span>\r\n                    {profileInfo.lookingForAJob ? \"так\" : \"ні\"}\r\n                </div>\r\n\r\n                <div className={s.profileInfo__Parametr}>\r\n                    <p className={s.bold}>Мої навички:</p>\r\n                    {profileInfo.lookingForAJobDescription}\r\n                </div>\r\n\r\n                <div className={s.profileInfo__Parametr}>\r\n                    <p className={s.bold}>Про мене:</p>\r\n                    {profileInfo.aboutMe}\r\n                </div>\r\n\r\n                {isOwner\r\n                    &&\r\n                    <div>\r\n                        <button className={s.profileInfo__button} onClick={goToEditMode}>\r\n                            Редагувати профіль\r\n                            </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className={s.profileInfo__Contacts}>\r\n                <div className={s.profileInfo__ContactsTitle}>Контакти:</div>\r\n                {Object.keys(profileInfo.contacts)\r\n                    .map(key => {\r\n                        return (\r\n                            <Contact contactTitle={key}\r\n                                contactValue={profileInfo.contacts[key]}\r\n                                key={key}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return (\r\n        <div className={s.profileInfo__Contact}>\r\n            <span className={s.profileInfo__ContactTitle}>{contactTitle}:&#160;</span>\r\n            <span className={s.profileInfo__ContactValue}>\r\n                <a target=\"_blank\" href={contactValue}>{contactValue}</a>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const ProfileInfo = (props) => {\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className={s.profileCover}>\r\n//                 <img className={s.profileCover__img}\r\n//                  src=\"https://s1.1zoom.me/b5050/382/388402-svetik_1920x1080.jpg\" />\r\n//             </div>\r\n//             <div className={s.profileInfo}>\r\n//                 <img className={s.profileInfo__Avatar}\r\n//                  src=\"https://tengrinews.kz/userdata/images/u38/resized/35fcc7bea1f32a6437650758096b9f89.jpeg\" />\r\n//                 <div className={s.profileInfo__Text} >\r\n//                     <p className={s.profileInfo__Name}> Володимир Погребняк</p>\r\n//                     <p className={s.profileInfo__Parametr}>Вік: 36</p>\r\n//                     <p className={s.profileInfo__Parametr}>Освіта: КНУ</p>\r\n//                     <p className={s.profileInfo__Parametr}>Місто: Жмеринка</p>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default ProfileInfo;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport ProfileStatusWithHooks from '../ProfileStatus/ProfileStatusWithHooks';\r\nimport s from './ProfileDataForm.module.scss';\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profileInfo, status, error, isOwner, getUserStatus, updateUserStatus }) => {\r\n   \r\n    return (\r\n        <form className={s.profileInfo__Form} onSubmit={handleSubmit}>\r\n            <div className={s.profileInfo__FormLeft}>\r\n                <div>\r\n                    <Field className={s.profileInfo__Name} name=\"fullName\" placeholder=\"Моє ім'я\" component=\"input\" />\r\n                </div>\r\n\r\n                <ProfileStatusWithHooks className={s.profileInfo__Parametr} status={status}\r\n                    getUserStatus={getUserStatus} updateUserStatus={updateUserStatus} isOwner={isOwner} />\r\n\r\n                <div className={s.profileInfo__Checkbox}>\r\n                    <span className={s.bold}>Шукаю роботу:&#160;</span>\r\n                    <Field className={s.profileInfo__CheckboxInput}\r\n                        name=\"lookingForAJob\" component=\"input\" type=\"checkbox\" id=\"lookingForAJob\" />\r\n                    <label className={s.profileInfo__CheckboxLabel} htmlFor=\"lookingForAJob\"></label>\r\n                </div>\r\n\r\n                <div className={s.profileInfo__Parametr}>\r\n                    <div className={s.bold}>Мої навички:</div>\r\n                    <Field className={s.profileInfo__ParametrInput}\r\n                        name=\"lookingForAJobDescription\" component=\"input\" />\r\n                </div>\r\n\r\n                <div className={s.profileInfo__Parametr}>\r\n                    <div className={s.bold}>Про мене:</div>\r\n                    <Field className={s.profileInfo__ParametrInput}\r\n                        name=\"aboutMe\" component=\"input\" />\r\n                </div>\r\n\r\n                <div>\r\n                    <button type=\"submit\" className={`${s.profileInfo__button} ${s.profileInfo__buttonSave}`}>\r\n                        Зберегти зміни\r\n                    </button>\r\n                </div>\r\n\r\n                <div>\r\n                    {error &&\r\n                        <div className={s.formCommonError}>{error}</div>}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={s.profileInfo__FormContacts}>\r\n                <div className={s.profileInfo__ContactsTitle}>Контакти:</div>\r\n                {Object.keys(profileInfo.contacts)\r\n                    .map(key => {\r\n                        return (\r\n                            <div className={s.profileInfo__Contact}>\r\n                                <span className={s.profileInfo__ContactTitle}>{key}:&#160;</span>\r\n                                <Field className={s.profileInfo__ContactValue} name={`contacts.` + key}\r\n                                    placeholder={key} component=\"input\" key={key} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ProfileDataFormRedux = reduxForm({ form: `edit-profile` })(ProfileDataForm);\r\n\r\n\r\nexport default ProfileDataFormRedux;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const ProfileInfo = (props) => {\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className={s.profileCover}>\r\n//                 <img className={s.profileCover__img}\r\n//                  src=\"https://s1.1zoom.me/b5050/382/388402-svetik_1920x1080.jpg\" />\r\n//             </div>\r\n//             <div className={s.profileInfo}>\r\n//                 <img className={s.profileInfo__Avatar}\r\n//                  src=\"https://tengrinews.kz/userdata/images/u38/resized/35fcc7bea1f32a6437650758096b9f89.jpeg\" />\r\n//                 <div className={s.profileInfo__Text} >\r\n//                     <p className={s.profileInfo__Name}> Володимир Погребняк</p>\r\n//                     <p className={s.profileInfo__Parametr}>Вік: 36</p>\r\n//                     <p className={s.profileInfo__Parametr}>Освіта: КНУ</p>\r\n//                     <p className={s.profileInfo__Parametr}>Місто: Жмеринка</p>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default ProfileInfo;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.scss';\r\nimport userPhotoDefault from '../../../../../assets/images/user_default.png';\r\nimport ProfileData from './ProfileData/ProfileData';\r\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm';\r\nimport ProfileDataFormRedux from './ProfileDataForm/ProfileDataForm';\r\n\r\nconst ProfileInfo = React.memo((props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.updatePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.profileCover}>\r\n                <img className={s.profileCover__img}\r\n                    src=\"https://s1.1zoom.me/b5050/382/388402-svetik_1920x1080.jpg\" />\r\n            </div>\r\n            <div className={s.profileInfo}>\r\n                <div className={s.profileInfo__PhotoWrapper}>\r\n                    <img className={s.profileInfo__PhotoImage}\r\n                        src={props.profileInfo.photos.large || userPhotoDefault} />\r\n                    <div>\r\n                        {props.isOwner\r\n                            &&\r\n                            <div className={s.input__wrapper}>\r\n                                <input className={s.input__file} onChange={onMainPhotoSelected} type=\"file\" name=\"file\" id=\"input__file\" />\r\n                                <label className={s.input__fileButton} htmlFor=\"input__file\">\r\n                                    <span className={s.input__fileIcon}></span>\r\n                                    <span className={s.input__fileButtonText}>Оновити фото</span>\r\n                                </label>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {editMode\r\n                    ?\r\n                    <ProfileDataFormRedux\r\n                        {...props}\r\n                        getUserStatus={props.getUserStatus}\r\n                        updateUserStatus={props.updateUserStatus}\r\n                        onSubmit={onSubmit}\r\n                        initialValues={props.profileInfo}\r\n                    />\r\n                    :\r\n                    <ProfileData\r\n                        {...props}\r\n                        getUserStatus={props.getUserStatus}\r\n                        updateUserStatus={props.updateUserStatus}\r\n                        goToEditMode={() => { setEditMode(true) }}\r\n                    />\r\n                }\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default ProfileInfo;","import React, { useEffect } from 'react';\r\nimport s from './Profile.module.css';\r\n\r\nimport AddNewPost from './NewPost/NewPost';\r\nimport Posts from './Posts/Posts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n  useEffect( () => {props.updatePostMode(false)}, [] )\r\n\r\n  return (\r\n    <section className={s.profile}>\r\n      <ProfileInfo\r\n        profileInfo={props.profileInfo}\r\n        status={props.status}\r\n        getUserStatus={props.getUserStatus}\r\n        updateUserStatus={props.updateUserStatus}\r\n        isOwner={props.isOwner}\r\n        updatePhoto={props.updatePhoto}\r\n        saveProfile={props.saveProfile} />\r\n      {props.isOwner &&\r\n        <div>\r\n          <AddNewPost\r\n            addNewPost={props.addNewPost}\r\n            updatePostMode={props.profileInfo.updatePostMode}\r\n            isUpdatePostMode={props.isUpdatePostMode}\r\n          />\r\n          <Posts\r\n            posts={props.posts}\r\n            profileInfo={props.profileInfo}\r\n            deletePost={props.deletePost}\r\n            updatePost={props.updatePost}\r\n            updatePostMode={props.updatePostMode}\r\n            isUpdatePostMode={props.isUpdatePostMode}\r\n          />\r\n        </div>\r\n      }\r\n\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  addNewPost,\r\n  setUserProfile,\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  updatePhoto,\r\n  saveProfile,\r\n  deletePost,\r\n  updatePost,\r\n  updatePostMode\r\n} from '../../../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n//внутренний контейнер\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    // debugger\r\n\r\n    let userId = this.props.match.params.userId;\r\n\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} isOwner={!this.props.match.params.userId} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profileInfo: state.profilePage.profileInfo,\r\n    status: state.profilePage.status,\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    isUpdatePostMode: state.profilePage.isUpdatePostMode\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,\r\n    {\r\n      addNewPost,\r\n      setUserProfile,\r\n      getUserProfile,\r\n      getUserStatus,\r\n      updateUserStatus,\r\n      updatePhoto,\r\n      saveProfile,\r\n      deletePost,\r\n      updatePost,\r\n      updatePostMode\r\n    }\r\n  ),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);","import React from \"react\";\r\nimport { withAuthRedirect } from \"../../../../hoc/AuthRedirect\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <div>\r\n            в процессе написания, нужна API:\\\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Routes);","import React from \"react\";\r\nimport { withAuthRedirect } from \"../../../../hoc/AuthRedirect\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            в процессе написания, нужна API:\\\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Settings);","import React, { useEffect } from 'react';\r\nimport s from './StarUsers.module.scss';\r\n\r\nconst StarUsers = (props) => {\r\n\r\n  useEffect(() => setUsersStars(), [])\r\n \r\n  let setUsersStars = () => {\r\n    if (props.users.length === 0) {\r\n      props.setUsersStars([\r\n        {\r\n          id: 1,\r\n          followed: true,\r\n          avatar: 'https://glavcom.ua/img/article/6194/8_main.jpg',\r\n          fullName: 'Олег',\r\n          status: 'Відпочиваю після концерту. Вовчиці дали вогню..)',\r\n          location: {\r\n            city: 'Київ',\r\n            country: 'Україна'\r\n          },\r\n        }, {\r\n          id: 2,\r\n          followed: false,\r\n          avatar: 'https://fdlx.com/wp-content/uploads/donald-tramp-uxodit-v-otpusk-dlya-uchastiya-v-otborochnyx-igrax-po-golfu.jpg',\r\n          fullName: 'Donald',\r\n          status: \"I'd better go play golf ..\",\r\n          location: {\r\n            city: 'Нью-Йорк',\r\n            country: 'США'\r\n          },\r\n        }, {\r\n          id: 3,\r\n          followed: false,\r\n          avatar: 'https://cdn.livesport.ru/l/hockey/2019/03/01/lukashenko/picture.jpg?1551464140',\r\n          fullName: 'Александр',\r\n          status: 'Я очень люблю спорт — это самое лучшее мое качество.',\r\n          location: {\r\n            city: 'Мінськ',\r\n            country: 'Білорусь'\r\n          },\r\n        }, {\r\n          id: 4,\r\n          followed: true,\r\n          avatar: 'https://delo.ua/files/news/images/3624/99/picture2_klichko-pronik-v-_362499_p0.jpg',\r\n          fullName: 'Віталій',\r\n          status: 'Дайте мне точку опоры! И я обопрусь.',\r\n          location: {\r\n            city: 'Київ',\r\n            country: 'Україна'\r\n          },\r\n        }\r\n      ])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className={s.users}>\r\n      <div>\r\n        {\r\n          props.users.map(u => <div key={u.id} className={s.users__item}>\r\n            <div className={s.users__img}>\r\n              <img src={u.avatar} alt=\"\" />\r\n              <div>\r\n                {u.followed\r\n                  ? <button onClick={() => { props.unfollow(u.id) }} className={`${s.users__button__unfollow} ${s.users__button} button`}>\r\n                    <span className={s.active}>Слідкую</span>\r\n                    <span className={s.hover}>Відписатись</span>\r\n                  </button>\r\n                  : <button onClick={() => { props.follow(u.id) }} className={`${s.users__button__follow} ${s.users__button} button`}>\r\n                    Підписатись\r\n                  </button>\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n            <div className={s.users__info}>\r\n              <div className={s.users__infoTop}>\r\n                <p className={s.users__name}>{u.fullName}</p>\r\n                <p className={s.users__city}>{u.location.city},</p>\r\n\r\n              </div>\r\n              <div className={s.users__infoBottom}>\r\n                <p className={s.users__status}>{u.status}</p>\r\n                <p className={s.users__country}>{u.location.country}</p>\r\n              </div>\r\n            </div>\r\n          </div >)\r\n        }\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default StarUsers;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../../hoc/AuthRedirect';\r\nimport {\r\n  followSucces,\r\n  unfollowSucces,\r\n  toggleFollowingInProgress,\r\n  unfollow,\r\n  follow,\r\n  setUsersStars\r\n} from '../../../../redux/star-users-reducer';\r\nimport {\r\n  getStars,\r\n  getIsFetchingStars,\r\n  getFollowingInProgressStars\r\n} from '../../../../redux/users-selectors';\r\nimport Preloader from '../../../Common/Preloader/Preloader';\r\nimport StarUsers from './StarUsers';\r\n\r\n\r\n//внутренний контейнер\r\nclass StarUsersContainer extends React.Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <StarUsers\r\n          users={this.props.users}\r\n          unfollowSucces={this.props.unfollowSucces}\r\n          followSucces={this.props.followSucces}\r\n          followingInProgress={this.props.followingInProgress}\r\n          unfollow={this.props.unfollow}\r\n          follow={this.props.follow}\r\n          setUsersStars={this.props.setUsersStars}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n};\r\n\r\n\r\n//внешний контейнер\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getStars(state),\r\n    isFetching: getIsFetchingStars(state),\r\n    followingInProgress: getFollowingInProgressStars(state)\r\n  }\r\n};\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,\r\n    {\r\n      followSucces,\r\n      unfollowSucces,\r\n      toggleFollowingInProgress,\r\n      unfollow,\r\n      follow,\r\n      setUsersStars\r\n    }\r\n  ),\r\n  withAuthRedirect\r\n)(StarUsersContainer);","import React, { Suspense } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport AboutProject from './AboutProject/AboutProject';\r\n\r\nimport s from './Content.module.css';\r\n\r\nimport Friends from './Friends/Friends';\r\nimport Music from './Music/Music';\r\nimport Photos from './Photos/Photos';\r\nimport ProfileContainer from './Profile/ProfileContainer';\r\nimport Routes from './Routes/Routes';\r\nimport Settings from './Settings/Settings';\r\nimport StarUsersContainer from './StarUsers/StarUsersContainer';\r\n\r\n// import DialogsContainer from './Dialogs/DialogsContainer';\r\n// import UsersContainer from './Users/UsersContainer';\r\n// import Login from '../../Login/Login';\r\nconst DialogsContainer = React.lazy(() => import('./Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./Users/UsersContainer'));\r\nconst Login = React.lazy(() => import('../../Login/Login'));\r\n\r\n\r\nconst Content = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n\r\n      <Suspense fallback={<div>Завантаження...</div>}>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Redirect to=\"/profile\" />} />\r\n          <Route path=\"/login\" render={() => <Login />} />\r\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n          <Route path=\"/dialogs/:dialogId?\" render={() => <DialogsContainer />} />\r\n          <Route path=\"/users\" render={() => <UsersContainer />} />\r\n          <Route path=\"/starusers\" render={() => <StarUsersContainer />} />\r\n          <Route path=\"/photos\" render={() => <Photos />} />\r\n          <Route path=\"/routes\" render={() => <Routes />} />\r\n          <Route path=\"/aboutproject\" render={() => <AboutProject />} />\r\n          <Route path=\"/music\" render={() => <Music />} />\r\n          <Route path=\"/settings\" render={() => <Settings />} />\r\n          <Route path=\"/friends\" render={() => <Friends />} />;\r\n          <Route path=\"*\" render={() => <div>404 NotFound</div>} />\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport Navbar from './Navbar/Navbar';\r\nimport Content from './Content/Content';\r\nimport s from './Main.module.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst Main = (props) => {\r\n  return (\r\n    <div className={`${s.main} wrapper`}>\r\n      <Navbar />\r\n      <Content />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React, {\n  Component\n} from 'react';\n\nimport './components/Common/_normalize.css'\nimport './components/Common/_nullstyle.css'\nimport './components/Common/__scrollbar.scss'\nimport './App.scss';\n\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Main from './components/Main/Main';\nimport { initializeApp } from './../src/redux/app-reducer';\nimport { connect } from 'react-redux';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n      <div className=\"app\">\n      <HeaderContainer />\n      <Main />\n    </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default compose(\n  withRouter,\n  connect (mapStateToProps, {initializeApp} )\n)  (App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link,\n  HashRouter\n} from \"react-router-dom\";\nimport {store} from './redux/redux-store';\nimport {Provider} from 'react-redux';\nimport App from './App';\n\nimport './index.scss';\n\n\n//функция отрисовки (перерисовки) UI\nlet renderEntireTree = ()=> {\n    ReactDOM.render(\n        <React.StrictMode>\n          <HashRouter>\n            <Provider store={store}>\n              <App/>\n            </Provider>\n          </HashRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n      );\n      \n      // If you want to start measuring performance in your app, pass a function\n      // to log results (for example: reportWebVitals(console.log))\n      // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n      reportWebVitals();\n}\n\n//первичная отрисовка\nrenderEntireTree();\n\n//подписка на события изменения\n//переписывает метод _renderEntireTree() в state\nstore.subscribe( () => {\n  renderEntireTree();\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCover\":\"ProfileInfo_profileCover__3-yGo\",\"profileCover__img\":\"ProfileInfo_profileCover__img__1NA-w\",\"profileInfo\":\"ProfileInfo_profileInfo__3weOg\",\"profileInfo__PhotoWrapper\":\"ProfileInfo_profileInfo__PhotoWrapper__1K1AW\",\"profileInfo__PhotoImage\":\"ProfileInfo_profileInfo__PhotoImage__33HFj\",\"input__wrapper\":\"ProfileInfo_input__wrapper__2FprL\",\"input__file\":\"ProfileInfo_input__file__1uKKg\",\"input__fileButton\":\"ProfileInfo_input__fileButton__1N3_1\",\"input__fileIcon\":\"ProfileInfo_input__fileIcon__1udn2\",\"input__fileButtonText\":\"ProfileInfo_input__fileButtonText__2-1-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3qz9G\",\"wrapper\":\"Header_wrapper__3UylV\",\"header__img\":\"Header_header__img__1d354\",\"login\":\"Header_login__1FCbm\",\"loginName\":\"Header_loginName__1Lw_5\",\"logoutButton\":\"Header_logoutButton__2yFXW\",\"loginLink\":\"Header_loginLink__1YazE\"};","export default __webpack_public_path__ + \"static/media/user_default.883504fe.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutProject\":\"AboutProject_aboutProject__3108x\",\"aboutProject__title\":\"AboutProject_aboutProject__title__1nDr4\",\"stack\":\"AboutProject_stack__266qZ\",\"stack__item\":\"AboutProject_stack__item__2wazi\",\"stack__title\":\"AboutProject_stack__title__dWcY6\",\"list__item\":\"AboutProject_list__item__B8hhI\",\"stack__listBottom\":\"AboutProject_stack__listBottom__2cYOM\",\"list__itemBlue\":\"AboutProject_list__itemBlue__R1JHc\",\"list__itemPink\":\"AboutProject_list__itemPink__3bFei\",\"aboutProject__linkTitle\":\"AboutProject_aboutProject__linkTitle__HMllL\",\"aboutProject__link\":\"AboutProject_aboutProject__link__1j4re\"};","import {\r\n    stopSubmit\r\n} from \"redux-form\";\r\nimport {\r\n    authAPI,\r\n    securityAPI\r\n} from \"../api/api\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//AC\r\nexport const setAuthUserData = (userId, email, login, isAuth = true, captchaUrl = null) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth,\r\n        captchaUrl\r\n    }\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {\r\n        captchaUrl\r\n    }\r\n});\r\n\r\n//TC\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    // debugger\r\n    const response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {\r\n            id,\r\n            email,\r\n            login,\r\n        } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n        getCaptchaUrlSuccess(null);\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ?\r\n            response.data.messages[0] :\r\n            \"some error\";\r\n\r\n        dispatch(stopSubmit(\"login\", {\r\n            _error: message\r\n        }));\r\n\r\n        // console.log(response.data.resultCode);\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n\r\n    // console.log(`каптча с сервера:` + captchaUrl);\r\n\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n\r\n};\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPosts\":\"NewPost_newPosts__3p6ZS\",\"newPosts__title\":\"NewPost_newPosts__title__y93Wa\",\"newPosts__text\":\"NewPost_newPosts__text__IO62E\",\"newPosts__button\":\"NewPost_newPosts__button__3TNCU\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value.length < minLength) {\r\n        return `Min length is ${minLength} symbols`\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    }\r\n    return undefined;\r\n}\r\n","import React from 'react';\r\n\r\nimport s from './Preloader.module.scss';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};\r\n\r\n//\r\nexport const getStars = (state) => {\r\n    return state.starUsersPage.users\r\n};\r\n\r\nexport const getIsFetchingStars = (state) => {\r\n    return state.starUsersPage.isFetching\r\n};\r\n\r\nexport const getFollowingInProgressStars = (state) => {\r\n    return state.starUsersPage.followingInProgress\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatus\":\"ProfileStatus_profileStatus__21WzX\",\"profileStatus__Description\":\"ProfileStatus_profileStatus__Description__mqL0z\",\"profileStatus__input\":\"ProfileStatus_profileStatus__input__3kq_G\"};"],"sourceRoot":""}