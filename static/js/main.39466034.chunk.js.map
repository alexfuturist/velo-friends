{"version":3,"sources":["redux/users-reducer.js","components/Common/FormControls/FormControls.js","components/Common/Preloader/Preloader.jsx","components/Main/Content/Content.module.css","components/Main/Content/Profile/Profile.module.css","components/Main/Content/Profile/Posts/Post/Post.module.css","components/Main/Content/Profile/Posts/Posts.module.css","components/Main/Main.module.css","components/Common/Preloader/Preloader.module.scss","api/api.js","components/Main/Content/Profile/ProfileInfo/ProfileInfo.module.scss","reportWebVitals.js","redux/profile-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Main/Navbar/Navbar.jsx","components/Main/Content/Profile/NewPost/NewPost.jsx","components/Main/Content/Profile/Posts/Post/Post.jsx","components/Main/Content/Profile/Posts/Posts.jsx","components/Main/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Main/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Main/Content/Profile/ProfileInfo/ProfileInfo.jsx","components/Main/Content/Profile/Profile.jsx","components/Main/Content/Profile/ProfileContainer.jsx","components/Main/Content/Content.jsx","components/Main/Main.jsx","App.js","index.js","components/Header/Header.module.scss","redux/auth-reducer.js","components/Main/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss","components/Main/Content/Profile/NewPost/NewPost.module.scss","utils/validators/validators.js","components/Main/Navbar/Navbar.module.css","components/Common/FormControls/FormControls.module.scss","hoc/AuthRedirect.jsx","redux/dialogs-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_IN_PROGRESS","initialState","users","pageSize","currentPage","totalUsersCount","isFetching","followingInProgress","followSucces","userId","type","unfollowSucces","setUsers","toggleIsFetching","toggleFollowingInProgress","requestUsers","dispatch","a","usersAPI","getUsers","data","items","totalCount","updateUsers","pageNumber","unfollow","response","resultCode","follow","usersReducer","state","action","map","u","id","followed","filter","Element","input","meta","props","hasError","touched","error","className","s","formControl","Preloader","preloader","module","exports","instance","axios","withCredentials","baseURL","headers","authAPI","me","get","login","email","password","rememberMe","post","logout","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","then","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","profileInfo","posts","message","setUserProfile","setUserStatus","profileReducer","newPost","newPostText","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","dialogsReducer","usersPage","auth","authReducer","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","console","log","header","wrapper","header__img","src","isAuth","loginName","logoutButton","onClick","loginLink","to","HeaderContainer","this","React","Component","connect","Navbar","navbar","navbar__items","navbar__item","activeClassName","navbar__active","navbar__settings","navbar__friends","navbar__friendsTitle","friends__items","friends__item","alt","maxLength20","maxLengthCreator","Textarea","AddNewPostFormRedux","reduxForm","onSubmit","handleSubmit","htmlFor","Field","newPosts__text","component","name","placeholder","validate","required","newPosts__button","AddNewPost","newPosts","newPosts__title","formData","addPost","Post","massage","Posts","postsElements","p","key","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","profileStatus","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","profileStatus__input","ProfileInfo","profileCover","profileCover__img","profileInfo__Avatar","photos","large","profileInfo__Text","profileInfo__Name","fullName","profileInfo__Parametr","aboutMe","profileInfo__Status","getUserStatus","Profile","profile","ProfileContainer","match","params","authorizedUserId","getUserProfile","withRouter","withAuthRedirect","DialogsContainer","lazy","UsersContainer","Login","Content","content","path","render","fallback","Main","main","App","initializeApp","promise","getAuthUserData","Promise","all","renderEntireTree","ReactDOM","StrictMode","document","getElementById","subscribe","SET_AUTH_USER_DATA","setAuthUserData","messages","length","stopSubmit","_error","minLengthCreator","minLength","maxLength","mapStateToPropsForRedirect","RedirectComponent","ADD_MESSAGE","dialogs","messagesText","addMessage","newMessageText","newMessage"],"mappings":"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","file":"static/js/main.39466034.chunk.js","sourcesContent":["import {\r\n    usersAPI\r\n} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    isFetching: false, //preloader\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            //возвращаем объект (новый state)\r\n            return {\r\n                //cкопировали state\r\n                ...state,\r\n                //в него пушим массив users \r\n                //(перезаписываем с изменениями исходный)\r\n                users: state.users.map(u => {\r\n                    //если id пользователя совпадает\r\n                    if (u.id === action.userId) {\r\n                        //копируем объект пользователя поверхностно\r\n                        //внутри него меняем флаг подписки\r\n                        //и возвращаем в новый массив\r\n                        return {\r\n                            ...u,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    //иначе возвращаем исходный элемент в новый массив users\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {\r\n                            ...u,\r\n                            followed: false\r\n                        }\r\n                    }\r\n\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                //добавляем новых юзеров из экшена (склеиваем два массива)\r\n                users: [...action.users]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n\r\n\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//AC\r\nexport const followSucces = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\n\r\nexport const unfollowSucces = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\n\r\nexport const setTotalUsersCount = (totalCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalCount\r\n});\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\n\r\nexport const toggleFollowingInProgress = (followingInProgress, userId) => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n    followingInProgress,\r\n    userId\r\n});\r\n\r\n\r\n//TC\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    //side-effect\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nexport const updateUsers = (pageNumber, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(pageNumber));\r\n\r\n    //side-effect\r\n    let data = await usersAPI.getUsers(pageNumber, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    //side-effect\r\n    let response = await usersAPI.unfollow(userId);\r\n\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(unfollowSucces(userId))\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    //side-effect\r\n    let response = await usersAPI.follow(userId);\r\n\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(followSucces(userId))\r\n    }\r\n};\r\n\r\n\r\nexport default usersReducer;","import React from \"react\";\r\nimport s from \"./FormControls.module.scss\";\r\n\r\nexport const Element = (Element) => ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \" \")}>\r\n            <div>\r\n               <Element {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport s from './Preloader.module.scss';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__aYX3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2eaG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__7Jsss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__STBF5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__JnV9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__IiANM\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"18021664-8191-4731-8d37-bfc58504d56d\"\r\n    }\r\n});\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return (\r\n            instance.get(`auth/me`)\r\n        )\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return (\r\n            instance.post(`auth/login`, {\r\n                email,\r\n                password,\r\n                rememberMe\r\n            })\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            instance.delete(`auth/login`)\r\n        )\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return (\r\n            instance.get(`profile/${userId}`)\r\n        )\r\n    },\r\n    getStatus(userId) {\r\n        return (\r\n            instance.get(`profile/status/${userId}`)\r\n        )\r\n    },\r\n    updateStatus(status) {\r\n        return (\r\n            instance.put(`profile/status`, {\r\n                status: status\r\n            })\r\n        )\r\n    }\r\n};\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    unfollow(id) {\r\n        return (\r\n            instance.delete(`follow/${id}`)\r\n        )\r\n    },\r\n    follow(id) {\r\n        return (\r\n            instance.post(`follow/${id}`)\r\n        )\r\n    }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCover\":\"ProfileInfo_profileCover__3-yGo\",\"profileCover__img\":\"ProfileInfo_profileCover__img__1NA-w\",\"profileInfo\":\"ProfileInfo_profileInfo__3weOg\",\"profileInfo__Avatar\":\"ProfileInfo_profileInfo__Avatar__BX1al\",\"profileInfo__Name\":\"ProfileInfo_profileInfo__Name__2WYEv\",\"profileInfo__Parametr\":\"ProfileInfo_profileInfo__Parametr__2WMhQ\",\"profileInfo__Status\":\"ProfileInfo_profileInfo__Status__1i2aJ\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    profileAPI\r\n} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'GET_USER_STATUS';\r\n\r\nlet initialState = {\r\n    profileInfo: {\r\n        \"aboutMe\": \"я круто чувак 1001%\",\r\n        \"contacts\": {\r\n            \"facebook\": \"facebook.com\",\r\n            \"website\": null,\r\n            \"vk\": null,\r\n            \"twitter\": null,\r\n            \"instagram\": \"instagra.com/v\",\r\n            \"youtube\": null,\r\n            \"github\": \"github.com\",\r\n            \"mainLink\": null\r\n        },\r\n        \"lookingForAJob\": true,\r\n        \"lookingForAJobDescription\": \"работаю, а катаюсь по выходным\",\r\n        \"fullName\": \"Володимир Погребняк\",\r\n        \"userId\": \"myProfile\",\r\n        \"photos\": {\r\n            \"small\": \"https://tengrinews.kz/userdata/images/u38/resized/35fcc7bea1f32a6437650758096b9f89.jpeg\",\r\n            \"large\": \"https://tengrinews.kz/userdata/images/u38/resized/35fcc7bea1f32a6437650758096b9f89.jpeg\"\r\n        },\r\n        \"status\": \"Status must be here\",\r\n    },\r\n    posts: [{\r\n            id: 1,\r\n            message: \"Привіт, хто хоче покататись?\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Починаю нову програму! Поїхали!\"\r\n        }\r\n    ]\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profileInfo: action.profileInfo\r\n            }\r\n        }\r\n\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                profileInfo: {\r\n                    ...state.profileInfo,\r\n                    status: action.status\r\n                }\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//AC\r\nexport const addPost = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText: newPostText\r\n    }\r\n};\r\n\r\nexport const setUserProfile = (profileInfo) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profileInfo: profileInfo\r\n    }\r\n};\r\n\r\nexport const setUserStatus = (status) => {\r\n    return {\r\n        type: SET_USER_STATUS,\r\n        status: status\r\n    }\r\n};\r\n\r\n\r\n//TC\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    // if (!userId) {\r\n    //     userId = 2;\r\n    // }\r\n\r\n    let response = await profileAPI.getProfile(userId);\r\n\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n\r\n    dispatch(setUserStatus(response.data));\r\n};\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default profileReducer;","import {\r\n    getAuthUserData\r\n} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//AC\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS\r\n});\r\n\r\n//TC\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    \r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n};\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\"\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.scss';\r\n\r\nconst Header = (props) => {\r\n    { console.log(props) }\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={`wrapper ${s.wrapper}`}>\r\n                <img className={s.header__img} src=\"https://i.pinimg.com/originals/b5/d2/f4/b5d2f4b06c0390c4dadb66da03ade490.png\" />\r\n\r\n                <div className={s.login}>\r\n                    {props.isAuth\r\n                        ?\r\n                        <div>\r\n                            <p className={s.loginName}>\r\n                                {props.login}\r\n                            </p>\r\n                            <button className={s.logoutButton} onClick={props.logout}>\r\n                                Вийти\r\n                            </button>\r\n                        </div>\r\n                        :\r\n                        <NavLink className={s.loginLink} to={'/login'}>\r\n                            Авторизуватись\r\n                        </NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header >\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout } from \"../../redux/auth-reducer\";\r\n\r\n\r\n//внутренний контейнер\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Header {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//внешний контейнер\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <aside className={s.navbar}>\r\n      <nav>\r\n        <ul className={s.navbar__items}>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.navbar__active}>\r\n              Моя сторінка\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.navbar__active}>\r\n              Повідомлення\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/photos\" activeClassName={s.navbar__active}>\r\n              Фото з подорожей\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/routes\" activeClassName={s.navbar__active}>\r\n              Маршрути\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/music\" activeClassName={s.navbar__active}>\r\n              Музика\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/users\" activeClassName={s.navbar__active}>\r\n              Мої підписки\r\n            </NavLink>\r\n          </li>\r\n          <li className={` ${s.navbar__settings}`}>\r\n            <NavLink to=\"/settings\" activeClassName={s.navbar__active}>\r\n              Налаштування\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n        <p className={s.navbar__friends}>\r\n          <NavLink to=\"/friends\" className={s.navbar__friendsTitle} activeClassName={s.navbar__active}>\r\n            Друзі\r\n          </NavLink>\r\n          <ul className={s.friends__items}>\r\n            <li className={s.friends__item}>\r\n              <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTo4h8hLgr_MYH_Ep7z769e--2l0dTU01wv9g&usqp=CAU\" alt=\"\"/>\r\n              <p>Михайло</p>\r\n            </li>\r\n            <li className={s.friends__item}>\r\n              <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTo4h8hLgr_MYH_Ep7z769e--2l0dTU01wv9g&usqp=CAU\" alt=\"\"/>\r\n              <p>Михайло</p>\r\n            </li>\r\n            <li className={s.friends__item}>\r\n              <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTo4h8hLgr_MYH_Ep7z769e--2l0dTU01wv9g&usqp=CAU\" alt=\"\"/>\r\n              <p>Михайло</p>\r\n            </li>\r\n          </ul>\r\n        </p>\r\n      </nav>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../../../utils/validators/validators';\r\nimport { Element } from '../../../../Common/FormControls/FormControls';\r\nimport s from './NewPost.module.scss'\r\n\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"newPost\"></label>\r\n                <Field className={s.newPosts__text} component={Textarea} name=\"newPost\"\r\n                    placeholder=\"моя новина..\" validate={[required, maxLength20]} />\r\n            </div>\r\n            <button className={`button ${s.newPosts__button}`}>Опубліковати</button>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n    form: 'ProfileAddNewPost'\r\n})(AddNewPostForm);\r\n\r\n\r\nconst AddNewPost = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n    }\r\n\r\n    //колбэк функция \r\n    const onAddPost = (formData) => {\r\n        props.addPost(formData.newPost); //вызываем функцию добавления нового поста\r\n    };\r\n\r\n    return (\r\n        <div className={s.newPosts}>\r\n            <p className={s.newPosts__title}>Новий пост</p>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddNewPost;","import React from \"react\";\r\n\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n      <li className={s.post}>\r\n        {props.massage}\r\n      </li>\r\n    );\r\n  }\r\n  \r\n  export default Post;","import React from \"react\";\r\nimport Post from './Post/Post';\r\nimport s from './Posts.module.css';\r\n\r\nconst Posts = (props) => {\r\n\r\n  let postsElements = props.posts.map(p => <Post massage={p.message} key={p.id} id={p.id} />);\r\n\r\n  return (\r\n    <ul className={s.posts}>\r\n      {postsElements}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport s from './ProfileStatus.module.scss';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateUserStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // console.log(\"componentDidUpdate\");\r\n        if ( prevProps.status !== this.props.status ) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"render\");\r\n        return (\r\n            <div className={s.profileStatus}>\r\n                { !this.state.editMode &&\r\n                    <div>\r\n                        <span onClick={this.activateEditMode}>{this.props.status}</span>\r\n                    </div>\r\n                }\r\n                { this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                            className={s.profileStatus__input} value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, { useEffect, useState } from \"react\";\r\nimport s from './ProfileStatus.module.scss';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let[editMode,setEditMode] = useState(false);\r\n    let[status,setStatus] = useState(props.status);\r\n\r\n    useEffect( ()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileStatus}>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onClick={activateEditMode}>{props.status}</span>\r\n                </div>\r\n            }\r\n            { editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                        className={s.profileStatus__input} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport s from './ProfileInfo.module.scss';\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.profileCover}>\r\n                <img className={s.profileCover__img}\r\n                    src=\"https://s1.1zoom.me/b5050/382/388402-svetik_1920x1080.jpg\" />\r\n            </div>\r\n            <div className={s.profileInfo}>\r\n                <img className={s.profileInfo__Avatar}\r\n                    src={props.profileInfo.photos.large} />\r\n                <div className={s.profileInfo__Text} >\r\n                    <p className={s.profileInfo__Name}> {props.profileInfo.fullName} </p>\r\n                    <p className={s.profileInfo__Parametr}>Вік: 36</p>\r\n                    <p className={s.profileInfo__Parametr}>Освіта: КНУ</p>\r\n                    <p className={s.profileInfo__Parametr}>Місто: Жмеринка</p>\r\n                    <p className={s.profileInfo__Parametr}>Про мене: {props.profileInfo.aboutMe}</p>\r\n                </div>\r\n                <div className={s.profileInfo__Status}><ProfileStatusWithHooks status={props.profileInfo.status}\r\n                    getUserStatus={props.getUserStatus} updateUserStatus={props.updateUserStatus} /></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const ProfileInfo = (props) => {\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className={s.profileCover}>\r\n//                 <img className={s.profileCover__img}\r\n//                  src=\"https://s1.1zoom.me/b5050/382/388402-svetik_1920x1080.jpg\" />\r\n//             </div>\r\n//             <div className={s.profileInfo}>\r\n//                 <img className={s.profileInfo__Avatar}\r\n//                  src=\"https://tengrinews.kz/userdata/images/u38/resized/35fcc7bea1f32a6437650758096b9f89.jpeg\" />\r\n//                 <div className={s.profileInfo__Text} >\r\n//                     <p className={s.profileInfo__Name}> Володимир Погребняк</p>\r\n//                     <p className={s.profileInfo__Parametr}>Вік: 36</p>\r\n//                     <p className={s.profileInfo__Parametr}>Освіта: КНУ</p>\r\n//                     <p className={s.profileInfo__Parametr}>Місто: Жмеринка</p>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\n\r\nimport AddNewPost from './NewPost/NewPost';\r\nimport Posts from './Posts/Posts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <section className={s.profile}>\r\n      <ProfileInfo profileInfo={props.profileInfo} getUserStatus={props.getUserStatus} updateUserStatus={props.updateUserStatus}/>\r\n      <AddNewPost addPost={props.addPost} newPostText={props.newPostText} />\r\n      <Posts posts={props.posts} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPost, setUserProfile, getUserProfile, getUserStatus, updateUserStatus } from '../../../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n//внутренний контейнер\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    console.log(userId);\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    console.log(userId);\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//наиболее внешний контейнер\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profileInfo: state.profilePage.profileInfo,\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n};\r\n\r\n\r\nexport default compose (\r\n  connect(mapStateToProps,\r\n    {\r\n      addPost,\r\n      setUserProfile,\r\n      getUserProfile,\r\n      getUserStatus,\r\n      updateUserStatus\r\n    }\r\n  ),\r\n  withRouter,\r\n  withAuthRedirect\r\n) (ProfileContainer);","import React, { Suspense } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport s from './Content.module.css';\r\n\r\nimport ProfileContainer from './Profile/ProfileContainer';\r\n// import DialogsContainer from './Dialogs/DialogsContainer';\r\n// import UsersContainer from './Users/UsersContainer';\r\n// import Login from '../../Login/Login';\r\nconst DialogsContainer = React.lazy(() => import('./Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./Users/UsersContainer'));\r\nconst Login = React.lazy(() => import('../../Login/Login'));\r\n\r\n\r\nconst Content = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n      <Suspense fallback={<div>Завантаження...</div>}>\r\n        <Route path=\"/login\" render={() => <Login />} />\r\n        <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\r\n        <Route path=\"/users\" render={() => <UsersContainer />} />\r\n        {/* <Route path=\"/friends\" component={Friends} />\r\n      <Route path=\"/photos\" component={Photos} />\r\n      <Route path=\"/routes\" component={Routes} /> */}\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport Navbar from './Navbar/Navbar';\r\nimport Content from './Content/Content';\r\nimport s from './Main.module.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst Main = (props) => {\r\n  return (\r\n    <div className={`${s.main} wrapper`}>\r\n      <Navbar />\r\n      <Content />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React, {\n  Component\n} from 'react';\n\nimport './components/Common/_normalize.css'\nimport './components/Common/_nullstyle.css'\nimport './components/Common/__scrollbar.scss'\nimport './App.scss';\n\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Main from './components/Main/Main';\nimport { initializeApp } from './../src/redux/app-reducer';\nimport { connect } from 'react-redux';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n      <div className=\"app\">\n      <HeaderContainer />\n      <Main />\n    </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default compose(\n  withRouter,\n  connect (mapStateToProps, {initializeApp} )\n)  (App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link,\n  HashRouter\n} from \"react-router-dom\";\nimport {store} from './redux/redux-store';\nimport {Provider} from 'react-redux';\nimport App from './App';\n\nimport './index.scss';\n\n\n//функция отрисовки (перерисовки) UI\nlet renderEntireTree = ()=> {\n    ReactDOM.render(\n        <React.StrictMode>\n          <HashRouter>\n            <Provider store={store}>\n              <App/>\n            </Provider>\n          </HashRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n      );\n      \n      // If you want to start measuring performance in your app, pass a function\n      // to log results (for example: reportWebVitals(console.log))\n      // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n      reportWebVitals();\n}\n\n//первичная отрисовка\nrenderEntireTree();\n\n//подписка на события изменения\n//переписывает метод _renderEntireTree() в state\nstore.subscribe( () => {\n  renderEntireTree();\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3qz9G\",\"wrapper\":\"Header_wrapper__3UylV\",\"header__img\":\"Header_header__img__1d354\",\"login\":\"Header_login__1FCbm\",\"loginName\":\"Header_loginName__1Lw_5\",\"logoutButton\":\"Header_logoutButton__2yFXW\",\"loginLink\":\"Header_loginLink__1YazE\"};","import {\r\n    stopSubmit\r\n} from \"redux-form\";\r\nimport {\r\n    authAPI\r\n} from \"../api/api\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//AC\r\nexport const setAuthUserData = (userId, email, login, isAuth = true) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    data: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth\r\n    }\r\n});\r\n\r\n//TC\r\nexport const getAuthUserData = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.me();\r\n        // console.log(response);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let {\r\n                id,\r\n                email,\r\n                login\r\n            } = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login));\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ?\r\n                response.data.messages[0] :\r\n                \"some error\";\r\n\r\n            dispatch(stopSubmit(\"login\", {\r\n                _error: message\r\n            }));\r\n        }\r\n    }\r\n};\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    }\r\n};\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatus\":\"ProfileStatus_profileStatus__21WzX\",\"profileStatus__input\":\"ProfileStatus_profileStatus__input__3kq_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPosts\":\"NewPost_newPosts__3p6ZS\",\"newPosts__title\":\"NewPost_newPosts__title__y93Wa\",\"newPosts__text\":\"NewPost_newPosts__text__IO62E\",\"newPosts__button\":\"NewPost_newPosts__button__3TNCU\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value.length < minLength) {\r\n        return `Min length is ${minLength} symbols`\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    }\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1OCxr\",\"navbar__items\":\"Navbar_navbar__items__1BDow\",\"navbar__item\":\"Navbar_navbar__item__1IK2I\",\"navbar__active\":\"Navbar_navbar__active__2uGOW\",\"navbar__settings\":\"Navbar_navbar__settings__3Wk5o\",\"navbar__friends\":\"Navbar_navbar__friends__TL258\",\"navbar__friendsTitle\":\"Navbar_navbar__friendsTitle__2tJ5n\",\"friends__items\":\"Navbar_friends__items__kd5UW\",\"friends__item\":\"Navbar_friends__item__36Vv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__c4fDl\",\"error\":\"FormControls_error__2DM7V\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"login\"/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [{\r\n            id: 1,\r\n            name: 'Михайло'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        }\r\n    ],\r\n    messages: [{\r\n            id: 1,\r\n            name: 'Ізабела',\r\n            messagesText: 'Привіт! Вже замінив колесо?'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Я',\r\n            messagesText: 'Привіт. Так вже відремонтував і встановив нові катафоти!'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Ізабела',\r\n            messagesText: 'Тоді завтра на 10:30 їдемо 20км по маршруту Б.'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Я',\r\n            messagesText: 'ОК'\r\n        }\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: 5,\r\n                name: 'Я',\r\n                messagesText: action.newMessageText\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//AC\r\nexport const addMessage = (newMessageText) => ({\r\n    type: ADD_MESSAGE,\r\n    newMessageText: newMessageText\r\n});\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}