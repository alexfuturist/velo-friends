{"version":3,"sources":["components/Main/Content/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.module.scss","redux/dialogs-reducer.js","redux/users-reducer.js","components/Main/Navbar/Navbar.module.css","assets/images/user_default.png","components/Main/Content/Content.module.css","components/Main/Content/Profile/Profile.module.css","components/Main/Content/Profile/Posts/Posts.module.scss","components/Common/Preloader/Preloader.module.scss","components/Main/Main.module.css","api/api.js","components/Main/Content/Profile/Posts/Post/Post.module.scss","components/Main/Content/Profile/ProfileInfo/ProfileData/ProfileData.module.scss","components/Main/Content/StarUsers/StarUsers.module.scss","hoc/AuthRedirect.jsx","components/Main/Content/Profile/ProfileInfo/ProfileInfo.module.scss","reportWebVitals.js","redux/profile-reducer.js","redux/star-users-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Main/Navbar/Navbar.jsx","components/Main/Content/Friends/Friends.jsx","components/Main/Content/Music/Music.jsx","components/Main/Content/Photos/Photos.jsx","components/Main/Content/Profile/NewPost/NewPost.jsx","components/Main/Content/Profile/Posts/Post/Post.jsx","components/Main/Content/Profile/Posts/Posts.jsx","components/Main/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Main/Content/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Main/Content/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Main/Content/Profile/ProfileInfo/ProfileInfo.jsx","components/Main/Content/Profile/Profile.jsx","components/Main/Content/Profile/ProfileContainer.jsx","components/Main/Content/Routes/Routes.jsx","components/Main/Content/Settings/Settings.jsx","components/Main/Content/StarUsers/StarUsers.jsx","components/Main/Content/StarUsers/StarUsersContainer.jsx","components/Main/Content/Content.jsx","components/Main/Main.jsx","App.js","index.js","components/Header/Header.module.scss","redux/auth-reducer.js","components/Main/Content/Profile/NewPost/NewPost.module.scss","components/Common/Preloader/Preloader.jsx","utils/validators/validators.js","redux/users-selectors.js","components/Main/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss"],"names":["module","exports","ADD_MESSAGE","initialState","dialogs","id","name","dialogsMessages","messages","messagesText","addMessage","newMessageText","type","dialogsReducer","state","action","newMessage","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_IN_PROGRESS","users","pageSize","currentPage","totalUsersCount","isFetching","followingInProgress","followSucces","userId","unfollowSucces","setUsers","toggleIsFetching","toggleFollowingInProgress","requestUsers","dispatch","a","usersAPI","getUsers","data","items","totalCount","updateUsers","pageNumber","unfollow","response","resultCode","follow","usersReducer","map","u","followed","filter","instance","axios","withCredentials","baseURL","headers","authAPI","me","get","login","email","password","rememberMe","captcha","post","logout","delete","securityAPI","getCaptchaUrl","profileAPI","getProfile","getStatus","updateStatus","status","put","updatePhoto","photoFile","formData","FormData","append","saveProfile","profile","then","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","UPDATE_PHOTO_SUCCESS","DELETE_POST","UPDATE_POST","UPDATE_POST_MODE","profileInfo","posts","message","isUpdatePostMode","setUserProfile","setUserStatus","getUserProfile","profileReducer","newPost","Math","max","p","newPostText","console","log","photos","item","index","updatePost","flag","SET_USERS_STARS","starUsersReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","authReducer","form","formReducer","app","starUsersPage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","className","s","header","wrapper","header__img","src","loginName","logoutButton","onClick","loginLink","HeaderContainer","NavbarFriends","navbar__friendsTitle","activeClassName","navbar__active","friends__items","friends__item","alt","navbar","navbar__items","navbar__item","navbar__friends","AddNewPostFormRedux","maxLengthCreator","minLengthCreator","reduxForm","onSubmit","handleSubmit","htmlFor","Field","newPosts__text","component","placeholder","validate","required","maxLength","newPosts__button","AddNewPost","newPosts","newPosts__title","addNewPost","initialValues","Post","useState","editMode","setEditMode","massage","setMessage","warningMode","setWarningMode","useEffect","deactivateWarningMode","updatePostMode","post__constant","post__image","small","post__text","controls","controls__button","cn","controls__buttonClose","warning__container","onBlur","tabIndex","warning__title","warning__buttons","deletePost","post__update","post__textareaContainer","post__textarea","onChange","e","currentTarget","value","autoFocus","onFocus","val","target","Posts","postsElements","reverse","key","ProfileStatusWithHooks","memo","setStatus","undefined","profileStatus","profileStatus__Description","isOwner","updateUserStatus","profileStatus__input","Contact","contactTitle","contactValue","profileInfo__Contact","profileInfo__ContactTitle","profileInfo__ContactValue","href","ProfileData","goToEditMode","getUserStatus","profileInfo__Text","profileInfo__TextLeft","profileInfo__Name","fullName","profileInfo__Parametr","bold","lookingForAJob","lookingForAJobDescription","aboutMe","profileInfo__button","profileInfo__Contacts","profileInfo__ContactsTitle","Object","keys","contacts","ProfileDataFormRedux","error","profileInfo__Form","profileInfo__FormLeft","profileInfo__Checkbox","profileInfo__CheckboxInput","profileInfo__CheckboxLabel","for","profileInfo__ParametrInput","profileInfo__buttonSave","formCommonError","profileInfo__FormContacts","ProfileInfo","profileCover","profileCover__img","profileInfo__PhotoWrapper","profileInfo__PhotoImage","large","userPhotoDefault","input__wrapper","input__file","files","length","input__fileButton","input__fileIcon","input__fileButtonText","Profile","ProfileContainer","match","params","authorizedUserId","refreshProfile","prevProps","addPost","reset","file","getState","stopSubmit","_error","Promise","reject","postIndex","deletePostSuccess","findIndex","element","updatePostSuccess","withRouter","StarUsers","setUsersStars","avatar","location","city","country","users__item","users__img","users__button__unfollow","users__button","active","hover","users__button__follow","users__info","users__infoTop","users__name","users__city","users__infoBottom","users__status","users__country","StarUsersContainer","Preloader","getStars","getIsFetchingStars","getFollowingInProgressStars","DialogsContainer","lazy","UsersContainer","Login","Content","content","fallback","exact","path","render","Main","main","App","initializeApp","promise","getAuthUserData","all","renderEntireTree","ReactDOM","StrictMode","document","getElementById","subscribe","SET_AUTH_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","url","preloader","minLength","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress"],"mappings":"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","file":"static/js/main.a1950081.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo__Form\":\"ProfileDataForm_profileInfo__Form__j1yhs\",\"profileInfo__FormLeft\":\"ProfileDataForm_profileInfo__FormLeft__DEw8P\",\"profileInfo__Name\":\"ProfileDataForm_profileInfo__Name__2DQ7w\",\"profileInfo__Parametr\":\"ProfileDataForm_profileInfo__Parametr__ra9NW\",\"profileInfo__Checkbox\":\"ProfileDataForm_profileInfo__Checkbox__2E2WL\",\"profileInfo__CheckboxLabel\":\"ProfileDataForm_profileInfo__CheckboxLabel__WwIcz\",\"profileInfo__CheckboxInput\":\"ProfileDataForm_profileInfo__CheckboxInput__1Vz-F\",\"profileInfo__ParametrInput\":\"ProfileDataForm_profileInfo__ParametrInput__2eFks\",\"bold\":\"ProfileDataForm_bold__3VedU\",\"profileInfo__FormContacts\":\"ProfileDataForm_profileInfo__FormContacts__3ot3S\",\"profileInfo__ContactsTitle\":\"ProfileDataForm_profileInfo__ContactsTitle__UhJuq\",\"profileInfo__Contact\":\"ProfileDataForm_profileInfo__Contact__36MCj\",\"profileInfo__ContactTitle\":\"ProfileDataForm_profileInfo__ContactTitle__1SU6H\",\"profileInfo__ContactValue\":\"ProfileDataForm_profileInfo__ContactValue__2Fqz5\",\"profileInfo__button\":\"ProfileDataForm_profileInfo__button__hBBNS\",\"profileInfo__buttonSave\":\"ProfileDataForm_profileInfo__buttonSave__tJ4jX\",\"formCommonError\":\"ProfileDataForm_formCommonError__2r_5X\"};","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [{\r\n            id: 1,\r\n            name: 'Михайло'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Віка'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Іван'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Клара'\r\n        },\r\n        {\r\n            id: 6,\r\n            name: 'Христина'\r\n        },\r\n        {\r\n            id: 7,\r\n            name: 'Давид'\r\n        },\r\n        {\r\n            id: 8,\r\n            name: 'Ігор'\r\n        },\r\n        {\r\n            id: 9,\r\n            name: 'Інна'\r\n        },\r\n        {\r\n            id: 10,\r\n            name: 'Аліна'\r\n        },\r\n        {\r\n            id: 11,\r\n            name: 'Наталя'\r\n        },\r\n        {\r\n            id: 12,\r\n            name: 'Ірина'\r\n        },\r\n        {\r\n            id: 13,\r\n            name: 'Тетяна'\r\n        },\r\n        {\r\n            id: 14,\r\n            name: 'Володимир'\r\n        },\r\n        {\r\n            id: 15,\r\n            name: 'Віталій'\r\n        },\r\n        {\r\n            id: 16,\r\n            name: 'Олександр'\r\n        },\r\n        {\r\n            id: 17,\r\n            name: 'Валерій'\r\n        },\r\n        {\r\n            id: 18,\r\n            name: 'Святослав'\r\n        },\r\n        {\r\n            id: 19,\r\n            name: 'Петро'\r\n        }\r\n    ],\r\n    dialogsMessages: [{\r\n            id: 0,\r\n            messages: [{\r\n                    id: 1,\r\n                    name: 'вело-радник',\r\n                    messagesText: 'Виберіть діалог зі списку контактів щоби почати спілкування.'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 1,\r\n            messages: [{\r\n                    id: 1,\r\n                    name: 'Михайло',\r\n                    messagesText: 'Здаров! Вже замінив колесо?'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'Я',\r\n                    messagesText: 'Привіт. Так вже відремонтував і встановив нові катафоти!'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Михайло',\r\n                    messagesText: 'Тоді завтра на 10:30 їдемо 20км по маршруту Б.'\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name: 'Я',\r\n                    messagesText: 'ОК'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 2,\r\n            messages: [{\r\n                    id: 1,\r\n                    name: 'Віка',\r\n                    messagesText: 'Привіт! Коли їдемо на стадіон?'\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'Я',\r\n                    messagesText: 'Привіт. Ще маю трохи повчити react, потім їдемо!'\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Віка',\r\n                    messagesText: 'Добре, після дощу їдемо 10км по парку.'\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name: 'Я',\r\n                    messagesText: 'Домовились)'\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: 5,\r\n                name: 'Я',\r\n                messagesText: action.newMessageText\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//AC\r\nexport const addMessage = (newMessageText) => ({\r\n    type: ADD_MESSAGE,\r\n    newMessageText: newMessageText\r\n});\r\n\r\nexport default dialogsReducer;","import {\r\n    usersAPI\r\n} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    isFetching: false, //preloader\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            //возвращаем объект (новый state)\r\n            return {\r\n                //cкопировали state\r\n                ...state,\r\n                //в него пушим массив users \r\n                //(перезаписываем с изменениями исходный)\r\n                users: state.users.map(u => {\r\n                    //если id пользователя совпадает\r\n                    if (u.id === action.userId) {\r\n                        //копируем объект пользователя поверхностно\r\n                        //внутри него меняем флаг подписки\r\n                        //и возвращаем в новый массив\r\n                        return {\r\n                            ...u,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    //иначе возвращаем исходный элемент в новый массив users\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {\r\n                            ...u,\r\n                            followed: false\r\n                        }\r\n                    }\r\n\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                //добавляем новых юзеров из экшена (склеиваем два массива)\r\n                users: [...action.users]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n\r\n\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//AC\r\nexport const followSucces = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\n\r\nexport const unfollowSucces = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\n\r\nexport const setTotalUsersCount = (totalCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalCount\r\n});\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\n\r\nexport const toggleFollowingInProgress = (followingInProgress, userId) => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n    followingInProgress,\r\n    userId\r\n});\r\n\r\n\r\n//TC\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    //side-effect\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nexport const updateUsers = (pageNumber, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(pageNumber));\r\n\r\n    //side-effect\r\n    let data = await usersAPI.getUsers(pageNumber, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    //side-effect\r\n    let response = await usersAPI.unfollow(userId);\r\n\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(unfollowSucces(userId))\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    //side-effect\r\n    let response = await usersAPI.follow(userId);\r\n\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(followSucces(userId))\r\n    }\r\n};\r\n\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1OCxr\",\"navbar__items\":\"Navbar_navbar__items__1BDow\",\"navbar__item\":\"Navbar_navbar__item__1IK2I\",\"navbar__active\":\"Navbar_navbar__active__2uGOW\",\"navbar__settings\":\"Navbar_navbar__settings__3Wk5o\",\"navbar__friends\":\"Navbar_navbar__friends__TL258\",\"navbar__friendsTitle\":\"Navbar_navbar__friendsTitle__2tJ5n\",\"friends__items\":\"Navbar_friends__items__kd5UW\",\"friends__item\":\"Navbar_friends__item__36Vv8\"};","export default __webpack_public_path__ + \"static/media/user_default.883504fe.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__aYX3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2eaG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__1dAnd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__IiANM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__JnV9O\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"18021664-8191-4731-8d37-bfc58504d56d\"\r\n    }\r\n});\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return (\r\n            instance.get(`auth/me`)\r\n        )\r\n    },\r\n    login(email, password, rememberMe, captcha=null) {\r\n        return (\r\n            instance.post(`auth/login`, {\r\n                email,\r\n                password,\r\n                rememberMe,\r\n                captcha\r\n            })\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            instance.delete(`auth/login`)\r\n        )\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl () {\r\n        return (\r\n            instance.get(`security/get-captcha-url`)\r\n        )\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return (\r\n            instance.get(`profile/${userId}`)\r\n        )\r\n    },\r\n    getStatus(userId) {\r\n        return (\r\n            instance.get(`profile/status/${userId}`)\r\n        )\r\n    },\r\n    updateStatus(status) {\r\n        return (\r\n            instance.put(`profile/status`, {\r\n                status: status\r\n            })\r\n        )\r\n    },\r\n    updatePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return (\r\n            instance.put(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n        )\r\n    },\r\n    saveProfile(profile) {\r\n        return (\r\n            instance.put(`profile`, profile)\r\n        )\r\n    }\r\n};\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    unfollow(id) {\r\n        return (\r\n            instance.delete(`follow/${id}`)\r\n        )\r\n    },\r\n    follow(id) {\r\n        return (\r\n            instance.post(`follow/${id}`)\r\n        )\r\n    }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__jCbh6\",\"post__constant\":\"Post_post__constant__2i1FS\",\"post__image\":\"Post_post__image__uNmv9\",\"post__text\":\"Post_post__text__ll9lV\",\"controls\":\"Post_controls__3K897\",\"controls__button\":\"Post_controls__button__1AxAz\",\"controls__buttonClose\":\"Post_controls__buttonClose__33so3\",\"post__update\":\"Post_post__update__uUJgD\",\"border\":\"Post_border__3JKfr\",\"post__textareaContainer\":\"Post_post__textareaContainer__2QAy0\",\"post__textarea\":\"Post_post__textarea__3hAgb\",\"warning__container\":\"Post_warning__container__2mQtP\",\"warning__title\":\"Post_warning__title__34hXG\",\"warning__buttons\":\"Post_warning__buttons__3gzc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo__Text\":\"ProfileData_profileInfo__Text__p2b6P\",\"profileInfo__TextLeft\":\"ProfileData_profileInfo__TextLeft__3_Kn9\",\"profileInfo__Name\":\"ProfileData_profileInfo__Name__313WZ\",\"profileInfo__Parametr\":\"ProfileData_profileInfo__Parametr__1SJjM\",\"bold\":\"ProfileData_bold__2oLR2\",\"profileInfo__Contacts\":\"ProfileData_profileInfo__Contacts__1rf8-\",\"profileInfo__ContactsTitle\":\"ProfileData_profileInfo__ContactsTitle__3aLZA\",\"profileInfo__Contact\":\"ProfileData_profileInfo__Contact__Mhz2q\",\"profileInfo__ContactTitle\":\"ProfileData_profileInfo__ContactTitle__ihaEQ\",\"profileInfo__ContactValue\":\"ProfileData_profileInfo__ContactValue__a_xcH\",\"profileInfo__button\":\"ProfileData_profileInfo__button__3YJNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"StarUsers_users__1QpMK\",\"users__item\":\"StarUsers_users__item__R3vZz\",\"users__img\":\"StarUsers_users__img__d3GoT\",\"users__button\":\"StarUsers_users__button__3ach0\",\"users__info\":\"StarUsers_users__info__2Yba7\",\"users__infoTop\":\"StarUsers_users__infoTop__15aTL\",\"users__name\":\"StarUsers_users__name__1R34U\",\"users__status\":\"StarUsers_users__status__k85pX\",\"users__infoBottom\":\"StarUsers_users__infoBottom__2vHTU\",\"users__city\":\"StarUsers_users__city__7eb4Z\",\"users__country\":\"StarUsers_users__country__1Eqxk\",\"users__button__follow\":\"StarUsers_users__button__follow__OIe6j\",\"users__button__unfollow\":\"StarUsers_users__button__unfollow__3H1W8\",\"active\":\"StarUsers_active__3H9i_\",\"hover\":\"StarUsers_hover__1xweK\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"login\"/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCover\":\"ProfileInfo_profileCover__3-yGo\",\"profileCover__img\":\"ProfileInfo_profileCover__img__1NA-w\",\"profileInfo\":\"ProfileInfo_profileInfo__3weOg\",\"profileInfo__PhotoWrapper\":\"ProfileInfo_profileInfo__PhotoWrapper__1K1AW\",\"profileInfo__PhotoImage\":\"ProfileInfo_profileInfo__PhotoImage__33HFj\",\"input__wrapper\":\"ProfileInfo_input__wrapper__2FprL\",\"input__file\":\"ProfileInfo_input__file__1uKKg\",\"input__fileButton\":\"ProfileInfo_input__fileButton__1N3_1\",\"input__fileIcon\":\"ProfileInfo_input__fileIcon__1udn2\",\"input__fileButtonText\":\"ProfileInfo_input__fileButtonText__2-1-2\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    reset,\r\n    stopSubmit\r\n} from \"redux-form\";\r\nimport {\r\n    profileAPI\r\n} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'GET_USER_STATUS';\r\nconst UPDATE_PHOTO_SUCCESS = 'UPDATE_PHOTO_SUCCESS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst UPDATE_POST = 'UPDATE_POST';\r\nconst UPDATE_POST_MODE = 'UPDATE_POST_MODE';\r\n\r\nlet initialState = {\r\n    profileInfo: {\r\n        \"aboutMe\": \"я круто чувак 1001%\",\r\n        \"contacts\": {\r\n            \"facebook\": \"facebook.com\",\r\n            \"website\": null,\r\n            \"vk\": null,\r\n            \"twitter\": null,\r\n            \"instagram\": \"instagra.com/v\",\r\n            \"youtube\": null,\r\n            \"github\": \"github.com\",\r\n            \"mainLink\": null\r\n        },\r\n        \"lookingForAJob\": true,\r\n        \"lookingForAJobDescription\": \"работаю, а катаюсь по выходным\",\r\n        \"fullName\": \"Володимир Погребняк\",\r\n        \"userId\": \"myProfile\",\r\n        \"photos\": {\r\n            \"small\": \"https://tengrinews.kz/userdata/images/u38/resized/35fcc7bea1f32a6437650758096b9f89.jpeg\",\r\n            \"large\": \"https://tengrinews.kz/userdata/images/u38/resized/35fcc7bea1f32a6437650758096b9f89.jpeg\"\r\n        },\r\n        \"status\": \"Status must be here\",\r\n    },\r\n    posts: [{\r\n            id: 0,\r\n            message: \"А настройки профиля отправляются на сервер после изменения, поэтому можно редактировать и перезагружать, всё должно сохраниться и обновиться.)\"\r\n        }, {\r\n            id: 1,\r\n            message: \"Все эти посты работают со стейтом Redux, но пока не написали API для их хранения на сервере и поэтому после полной перезагрузки странички они возвращаются по дефолту..\"\r\n        }, {\r\n            id: 2,\r\n            message: \"Дууууже довгий пост. Він показує що, слова переносяться автоматичооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооооо, навіть якщо клавіша залипла:)\"\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"✅Привіт, хто хоче покататись?\"\r\n        },\r\n        {\r\n            id: 4,\r\n            message: \"🕝Сьогодні починаю нову програму! Поїхали!\"\r\n        }\r\n    ],\r\n    isUpdatePostMode: false\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: +`${Math.max(...state.posts.map( (p)=> p.id ))+1}`,\r\n                message: action.newPostText\r\n            };\r\n\r\n            console.log (newPost)\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profileInfo: action.profileInfo\r\n            }\r\n        }\r\n\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                profileInfo: {\r\n                    ...state.profileInfo,\r\n                    status: action.status\r\n                }\r\n            }\r\n        }\r\n\r\n        case UPDATE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profileInfo: {\r\n                    ...state.profileInfo,\r\n                    photos: action.photos\r\n                }\r\n            }\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts.filter((item, index) => index !== action.index)]\r\n            }\r\n        }\r\n\r\n        case UPDATE_POST: {\r\n            let updatePost = {\r\n                id: +`${state.posts[action.index].id}`,\r\n                message: action.message\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts.map((post, index) => {\r\n                    if (index === action.index) {\r\n                        return updatePost;\r\n                    }\r\n\r\n                    return post;\r\n                })],\r\n            };\r\n\r\n        }\r\n\r\n        case UPDATE_POST_MODE: {\r\n            return {\r\n                ...state,\r\n                isUpdatePostMode: action.flag\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//AC\r\nexport const addPost = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText: newPostText\r\n    }\r\n};\r\n\r\nexport const setUserProfile = (profileInfo) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profileInfo: profileInfo\r\n    }\r\n};\r\n\r\nexport const setUserStatus = (status) => {\r\n    return {\r\n        type: SET_USER_STATUS,\r\n        status: status\r\n    }\r\n};\r\n\r\nexport const updatePhotoSuccess = (photos) => {\r\n    return {\r\n        type: UPDATE_PHOTO_SUCCESS,\r\n        photos\r\n    }\r\n};\r\n\r\nexport const deletePostSuccess = (postIndex) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        index: postIndex\r\n    }\r\n};\r\n\r\nexport const updatePostSuccess = (postIndex, message) => {\r\n    return {\r\n        type: UPDATE_POST,\r\n        index: postIndex,\r\n        message: message\r\n    }\r\n};\r\n\r\nexport const updatePostMode = (flag) => {\r\n    console.log(flag);\r\n\r\n    return {\r\n        type: UPDATE_POST_MODE,\r\n        flag: flag\r\n    }\r\n};\r\n\r\n\r\n//TC\r\nexport const addNewPost = (newPostText) => (dispatch) => {\r\n    dispatch(addPost(newPostText));\r\n    dispatch(reset('ProfileAddNewPost'));\r\n};\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getProfile(userId);\r\n\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n\r\n    dispatch(setUserStatus(response.data));\r\n};\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n};\r\n\r\nexport const updatePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.updatePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(updatePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const response = await profileAPI.saveProfile(profile);\r\n    const userId = getState().auth.userId;\r\n    console.log(response);\r\n    console.log(response.data.messages[0]);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {\r\n            _error: response.data.messages[0]\r\n        }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n};\r\n\r\nexport const deletePost = (id) => (dispatch, getState) => {\r\n    const posts = getState().profilePage.posts;\r\n    let postIndex = posts.findIndex(element => element.id === id);\r\n\r\n    dispatch(deletePostSuccess(postIndex));\r\n    // console.log(posts);\r\n};\r\n\r\nexport const updatePost = (id, message) => (dispatch, getState) => {\r\n    const posts = getState().profilePage.posts;\r\n    let postIndex = posts.findIndex(element => element.id === id);\r\n\r\n    dispatch(updatePostSuccess(postIndex, message));\r\n};\r\n\r\nexport default profileReducer;","import {\r\n    usersAPI\r\n} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS_STARS = 'SET_USERS_STARS';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    isFetching: false, //preloader\r\n    followingInProgress: []\r\n};\r\n\r\nconst starUsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            //возвращаем объект (новый state)\r\n            return {\r\n                //cкопировали state\r\n                ...state,\r\n                //в него пушим массив users \r\n                //(перезаписываем с изменениями исходный)\r\n                users: state.users.map(u => {\r\n                    //если id пользователя совпадает\r\n                    if (u.id === action.userId) {\r\n                        //копируем объект пользователя поверхностно\r\n                        //внутри него меняем флаг подписки\r\n                        //и возвращаем в новый массив\r\n                        return {\r\n                            ...u,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    //иначе возвращаем исходный элемент в новый массив users\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {\r\n                            ...u,\r\n                            followed: false\r\n                        }\r\n                    }\r\n\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n\r\n        case SET_USERS_STARS: {\r\n            return {\r\n                ...state,\r\n                //добавляем новых юзеров из экшена (склеиваем два массива)\r\n                users: [...action.users]\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n\r\n\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//AC\r\nexport const followSucces = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\n\r\nexport const unfollowSucces = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\n\r\nexport const setUsersStars = (users) => ({\r\n    type: SET_USERS_STARS,\r\n    users\r\n});\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\n\r\nexport const toggleFollowingInProgress = (followingInProgress, userId) => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n    followingInProgress,\r\n    userId\r\n});\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    //side-effect\r\n    let response = true;\r\n\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n    if (response) {\r\n        dispatch(unfollowSucces(userId))\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    //side-effect\r\n    let response = true;\r\n\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n    if (response) {\r\n        dispatch(followSucces(userId))\r\n    }\r\n};\r\n\r\n\r\nexport default starUsersReducer;","import {\r\n    getAuthUserData\r\n} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//AC\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS\r\n});\r\n\r\n//TC\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    \r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n};\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\"\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport starUsersReducer from \"./star-users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    starUsersPage: starUsersReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.scss';\r\n\r\nconst Header = (props) => {\r\n    { console.log(props) }\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={`wrapper ${s.wrapper}`}>\r\n                <img className={s.header__img} src=\"https://i.pinimg.com/originals/b5/d2/f4/b5d2f4b06c0390c4dadb66da03ade490.png\" />\r\n\r\n                <div className={s.login}>\r\n                    {props.isAuth\r\n                        ?\r\n                        <div>\r\n                            <p className={s.loginName}>\r\n                                {props.login}\r\n                            </p>\r\n                            <button className={s.logoutButton} onClick={props.logout}>\r\n                                Вийти\r\n                            </button>\r\n                        </div>\r\n                        :\r\n                        <NavLink className={s.loginLink} to={'/login'}>\r\n                            Авторизуватись\r\n                        </NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header >\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout } from \"../../redux/auth-reducer\";\r\n\r\n\r\n//внутренний контейнер\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Header {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//внешний контейнер\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n    <aside className={s.navbar}>\r\n      <nav>\r\n        <ul className={s.navbar__items}>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.navbar__active}>\r\n              Моя сторінка\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/users\" activeClassName={s.navbar__active}>\r\n              Мої підписки\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/starusers\" activeClassName={s.navbar__active}>\r\n              Зірки спортсмени\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.navbar__active}>\r\n              Повідомлення\r\n            </NavLink>\r\n          </li>\r\n          {/* <li className={s.navbar__item}>\r\n            <NavLink to=\"/photos\" activeClassName={s.navbar__active}>\r\n              Фото з подорожей\r\n            </NavLink>\r\n          </li> */}\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/routes\" activeClassName={s.navbar__active}>\r\n              Веломаршрути\r\n            </NavLink>\r\n          </li>\r\n          {/* <li className={s.navbar__item}>\r\n            <NavLink to=\"/music\" activeClassName={s.navbar__active}>\r\n              Музика\r\n            </NavLink>\r\n          </li> */}\r\n          {/* <li className={` ${s.navbar__settings}`}>\r\n            <NavLink to=\"/settings\" activeClassName={s.navbar__active}>\r\n              Налаштування\r\n            </NavLink>\r\n          </li> */}\r\n        </ul>\r\n\r\n        <p className={s.navbar__friends}>\r\n          {props.isAuth && <NavbarFriends />}\r\n        </p>\r\n      </nav>\r\n    </aside>\r\n  );\r\n}\r\n\r\nconst NavbarFriends = () => {\r\n  return (\r\n    <div>\r\n      <NavLink to=\"/friends\" className={s.navbar__friendsTitle} activeClassName={s.navbar__active}>\r\n        Друзі\r\n          </NavLink>\r\n      <ul className={s.friends__items}>\r\n        <li className={s.friends__item}>\r\n          <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTo4h8hLgr_MYH_Ep7z769e--2l0dTU01wv9g&usqp=CAU\" alt=\"\" />\r\n          <p>Михайло</p>\r\n        </li>\r\n        <li className={s.friends__item}>\r\n          <img src=\"https://instagrammi.ru/wp-content/uploads/arnold-shvarcenegger.jpg\" alt=\"\" />\r\n          <p>Арнольд</p>\r\n        </li>\r\n        <li className={s.friends__item}>\r\n          <img src=\"https://kinoafisha.ua/upload/2020/05/news/n27/2c/73954/b_211kuvisyarkii-obraz-teilor-svift.jpg\" alt=\"\" />\r\n          <p>Тейлор</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from \"react\";\r\nimport { withAuthRedirect } from \"../../../../hoc/AuthRedirect\";\r\n\r\nconst Friends = () => {\r\n    return (\r\n        <div>\r\n            в процессе написания, нужна API:\\\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Friends);","import React from \"react\";\r\nimport { withAuthRedirect } from \"../../../../hoc/AuthRedirect\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            в процессе написания, нужна API:\\\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Music);","import React from \"react\";\r\nimport { withAuthRedirect } from \"../../../../hoc/AuthRedirect\";\r\n\r\nconst Photos = () => {\r\n    return (\r\n        <div>\r\n            в процессе написания, нужна API:\\\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Photos);","import React, { useEffect, useState } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, minLengthCreator, required } from '../../../../../utils/validators/validators';\r\nimport s from './NewPost.module.scss';\r\n\r\n\r\nconst maxLength600 = maxLengthCreator(600);\r\nconst minLength1 = minLengthCreator(1);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"newPost\"></label>\r\n                <Field className={s.newPosts__text} component=\"textarea\"\r\n                    name=\"newPost\" id=\"newPost\" placeholder=\"моя новина..\"\r\n                    validate={[required]} maxLength=\"600\"\r\n                />\r\n            </div>\r\n            <button className={`button ${s.newPosts__button}`}>Опублікувати</button>\r\n        </form >\r\n    )\r\n};\r\n\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n    form: 'ProfileAddNewPost'\r\n})(AddNewPostForm);\r\n\r\n\r\nconst AddNewPost = (props) => {\r\n    //колбэк функция \r\n    const onSubmit = (formData) => {\r\n        !props.isUpdatePostMode &&\r\n            props.addNewPost(formData.newPost); //вызываем функцию добавления нового поста\r\n    };\r\n\r\n    return (\r\n        <div className={s.newPosts}>\r\n            <p className={s.newPosts__title}>Новий пост</p>\r\n            <AddNewPostFormRedux onSubmit={onSubmit} initialValues={{ newPost: null }} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddNewPost;","import React, { useEffect, useState } from \"react\";\r\n// import userPhotoDefault from '../../../../../../assets/images/user_default.png';\r\nimport cn from \"classnames\";\r\nimport s from './Post.module.scss';\r\n\r\nconst Post = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [message, setMessage] = useState(props.massage);\r\n  let [warningMode, setWarningMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMessage(props.massage);\r\n  }, [props.massage]);\r\n\r\n  // useEffect(() => {\r\n  //   setMessage(props.massage);\r\n  // }, [props.massage]);\r\n\r\n  const activateEditMode = () => {\r\n\r\n    if (!props.isUpdatePostMode) {\r\n      setEditMode(true);\r\n      props.updatePostMode(true)\r\n    }\r\n\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updatePostMode(false);\r\n    props.updatePost(props.id, message);\r\n  }\r\n\r\n  const onPostChange = (e) => {\r\n    setMessage(e.currentTarget.value);\r\n  }\r\n\r\n  const activateWarningMode = () => {\r\n    if (!props.isUpdatePostMode) {\r\n      setWarningMode(true);\r\n      props.updatePostMode(true);\r\n    }\r\n  }\r\n\r\n  const deactivateWarningMode = () => {\r\n    setWarningMode(false);\r\n    props.updatePostMode(false);\r\n  }\r\n\r\n  return (\r\n    <li className={s.post}>\r\n      { !editMode &&\r\n        <div className={s.post__constant}>\r\n          <img className={s.post__image} src={props.profileInfo.photos.small} alt=\"\" />\r\n          <p className={s.post__text}>{props.massage}</p>\r\n          <div className={s.controls}>\r\n            <div className={s.controls__button} onClick={activateEditMode}>редагувати</div>\r\n            <div className={cn(s.controls__button, s.controls__buttonClose)} onClick={activateWarningMode}>видалити</div>\r\n\r\n            {warningMode &&\r\n              <div className={s.warning__container} onBlur={deactivateWarningMode} tabIndex=\"1\">\r\n                <p className={s.warning__title}>Точно видалити?</p>\r\n                <div className={s.warning__buttons}>\r\n                  <div onClick={() => props.deletePost(props.id)} >так</div>\r\n                  <div onClick={deactivateWarningMode} >ні</div>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n      { editMode &&\r\n        <div className={s.post__update}>\r\n          <img className={s.post__image} src={props.profileInfo.photos.small} alt=\"\" />\r\n          <div className={s.post__textareaContainer}>\r\n            {message}\r\n            <textarea className={s.post__textarea} onChange={onPostChange} maxLength=\"600\"\r\n              value={message} autoFocus={true}\r\n              onFocus={function (e) {\r\n                let val = e.target.value;\r\n                e.target.value = '';\r\n                e.target.value = val;\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={s.controls}>\r\n            <div onClick={deactivateEditMode}>зберегти</div>\r\n          </div>\r\n        </div>\r\n\r\n      }\r\n\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from './Post/Post';\r\nimport s from './Posts.module.scss';\r\n\r\nconst Posts = (props) => {\r\n  let postsElements = [...props.posts].reverse()\r\n    .map(p => <Post\r\n      profileInfo={props.profileInfo}\r\n      massage={p.message}\r\n      deletePost={props.deletePost}\r\n      updatePost={props.updatePost}\r\n      updatePostMode={props.updatePostMode}\r\n      isUpdatePostMode={props.isUpdatePostMode}\r\n      key={p.id}\r\n      id={p.id} />);\r\n\r\n  return (\r\n    <ul className={s.posts}>\r\n      {postsElements}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Posts;","import React, { useEffect, useState } from \"react\";\r\nimport s from './ProfileStatus.module.scss';\r\n\r\nconst ProfileStatusWithHooks = React.memo((props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    console.log(`cтатус локальный:` + status);\r\n\r\n    useEffect(() => {\r\n        console.log('effect satus profile');\r\n        // setStatus(props.status);\r\n        if (props.status !== undefined) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status]);\r\n    \r\n\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) {\r\n            setEditMode(true);\r\n        }\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    console.log(`cтатус из пропс:` + props.status);\r\n    return (\r\n        <div className={s.profileStatus}>\r\n            { !editMode &&\r\n                <p className={s.profileStatus__Description} onClick={activateEditMode}>{props.status}</p>\r\n            }\r\n            { editMode &&\r\n                <input onChange={onStatusChange} maxLength=\"25\" autoFocus={true} onBlur={deactivateEditMode}\r\n                    className={s.profileStatus__input} value={status} />\r\n            }\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport ProfileStatusWithHooks from '../ProfileStatus/ProfileStatusWithHooks';\r\nimport s from './ProfileData.module.scss';\r\n\r\n\r\nconst ProfileData = ({ profileInfo, isOwner, goToEditMode, getUserStatus, updateUserStatus }) => {\r\n\r\n    return (\r\n        <div className={s.profileInfo__Text} >\r\n            <div className={s.profileInfo__TextLeft}>\r\n                <p className={s.profileInfo__Name}> {profileInfo.fullName} </p>\r\n                \r\n                <ProfileStatusWithHooks className={s.profileInfo__Parametr} status={profileInfo.status}\r\n                    getUserStatus={getUserStatus} updateUserStatus={updateUserStatus} isOwner={isOwner} />\r\n                \r\n                <p className={s.profileInfo__Parametr}>\r\n                    <span className={s.bold}>Шукаю роботу:&#160;</span>\r\n                    {profileInfo.lookingForAJob ? \"так\" : \"ні\"}\r\n                </p>\r\n               \r\n                <p className={s.profileInfo__Parametr}>\r\n                    <p className={s.bold}>Мої навички:</p>\r\n                    {profileInfo.lookingForAJobDescription}\r\n                </p>\r\n                \r\n                <p className={s.profileInfo__Parametr}>\r\n                    <p className={s.bold}>Про мене:</p>\r\n                    {profileInfo.aboutMe}\r\n                </p>\r\n\r\n                {isOwner\r\n                    &&\r\n                    <div>\r\n                        <button className={s.profileInfo__button} onClick={goToEditMode}>\r\n                            Редагувати профіль\r\n                            </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <p className={s.profileInfo__Contacts}>\r\n                <p className={s.profileInfo__ContactsTitle}>Контакти:</p>\r\n                {Object.keys(profileInfo.contacts)\r\n                    .map(key => {\r\n                        return (\r\n                            <Contact contactTitle={key}\r\n                                contactValue={profileInfo.contacts[key]}\r\n                                key={key}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return (\r\n        <div className={s.profileInfo__Contact}>\r\n            <span className={s.profileInfo__ContactTitle}>{contactTitle}:&#160;</span>\r\n            <span className={s.profileInfo__ContactValue}>\r\n                <a target=\"_blank\" href={contactValue}>{contactValue}</a>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const ProfileInfo = (props) => {\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className={s.profileCover}>\r\n//                 <img className={s.profileCover__img}\r\n//                  src=\"https://s1.1zoom.me/b5050/382/388402-svetik_1920x1080.jpg\" />\r\n//             </div>\r\n//             <div className={s.profileInfo}>\r\n//                 <img className={s.profileInfo__Avatar}\r\n//                  src=\"https://tengrinews.kz/userdata/images/u38/resized/35fcc7bea1f32a6437650758096b9f89.jpeg\" />\r\n//                 <div className={s.profileInfo__Text} >\r\n//                     <p className={s.profileInfo__Name}> Володимир Погребняк</p>\r\n//                     <p className={s.profileInfo__Parametr}>Вік: 36</p>\r\n//                     <p className={s.profileInfo__Parametr}>Освіта: КНУ</p>\r\n//                     <p className={s.profileInfo__Parametr}>Місто: Жмеринка</p>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default ProfileInfo;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport ProfileStatusWithHooks from '../ProfileStatus/ProfileStatusWithHooks';\r\nimport s from './ProfileDataForm.module.scss';\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profileInfo, error, isOwner, getUserStatus, updateUserStatus }) => {\r\n   \r\n    return (\r\n        <form className={s.profileInfo__Form} onSubmit={handleSubmit}>\r\n            <div className={s.profileInfo__FormLeft}>\r\n                <p>\r\n                    <Field className={s.profileInfo__Name} name=\"fullName\" placeholder=\"Моє ім'я\" component=\"input\" />\r\n                </p>\r\n\r\n                <ProfileStatusWithHooks className={s.profileInfo__Parametr} status={profileInfo.status}\r\n                    getUserStatus={getUserStatus} updateUserStatus={updateUserStatus} isOwner={isOwner} />\r\n\r\n                <p className={s.profileInfo__Checkbox}>\r\n                    <span className={s.bold}>Шукаю роботу:&#160;</span>\r\n                    <Field className={s.profileInfo__CheckboxInput}\r\n                        name=\"lookingForAJob\" component=\"input\" type=\"checkbox\" id=\"lookingForAJob\" />\r\n                    <label className={s.profileInfo__CheckboxLabel} for=\"lookingForAJob\"></label>\r\n                </p>\r\n\r\n                <p className={s.profileInfo__Parametr}>\r\n                    <p className={s.bold}>Мої навички:</p>\r\n                    <Field className={s.profileInfo__ParametrInput}\r\n                        name=\"lookingForAJobDescription\" component=\"input\" />\r\n                </p>\r\n\r\n                <p className={s.profileInfo__Parametr}>\r\n                    <p className={s.bold}>Про мене:</p>\r\n                    <Field className={s.profileInfo__ParametrInput}\r\n                        name=\"aboutMe\" component=\"input\" />\r\n                </p>\r\n\r\n                <div>\r\n                    <button type=\"submit\" className={`${s.profileInfo__button} ${s.profileInfo__buttonSave}`}>\r\n                        Зберегти зміни\r\n                    </button>\r\n                </div>\r\n\r\n                <div>\r\n                    {error &&\r\n                        <div className={s.formCommonError}>{error}</div>}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <p className={s.profileInfo__FormContacts}>\r\n                <p className={s.profileInfo__ContactsTitle}>Контакти:</p>\r\n                {Object.keys(profileInfo.contacts)\r\n                    .map(key => {\r\n                        return (\r\n                            <div className={s.profileInfo__Contact}>\r\n                                <span className={s.profileInfo__ContactTitle}>{key}:&#160;</span>\r\n                                <Field className={s.profileInfo__ContactValue} name={`contacts.` + key}\r\n                                    placeholder={key} component=\"input\" key={key} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </p>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ProfileDataFormRedux = reduxForm({ form: `edit-profile` })(ProfileDataForm);\r\n\r\n\r\nexport default ProfileDataFormRedux;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const ProfileInfo = (props) => {\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className={s.profileCover}>\r\n//                 <img className={s.profileCover__img}\r\n//                  src=\"https://s1.1zoom.me/b5050/382/388402-svetik_1920x1080.jpg\" />\r\n//             </div>\r\n//             <div className={s.profileInfo}>\r\n//                 <img className={s.profileInfo__Avatar}\r\n//                  src=\"https://tengrinews.kz/userdata/images/u38/resized/35fcc7bea1f32a6437650758096b9f89.jpeg\" />\r\n//                 <div className={s.profileInfo__Text} >\r\n//                     <p className={s.profileInfo__Name}> Володимир Погребняк</p>\r\n//                     <p className={s.profileInfo__Parametr}>Вік: 36</p>\r\n//                     <p className={s.profileInfo__Parametr}>Освіта: КНУ</p>\r\n//                     <p className={s.profileInfo__Parametr}>Місто: Жмеринка</p>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default ProfileInfo;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.scss';\r\nimport userPhotoDefault from '../../../../../assets/images/user_default.png';\r\nimport ProfileData from './ProfileData/ProfileData';\r\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm';\r\nimport ProfileDataFormRedux from './ProfileDataForm/ProfileDataForm';\r\n\r\nconst ProfileInfo = React.memo((props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.updatePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n                console.log('форма сохранена');\r\n            }\r\n        )\r\n        console.log(formData);\r\n    }\r\n\r\n    console.log('профайл инфо');\r\n    console.log(props.profileInfo);\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.profileCover}>\r\n                <img className={s.profileCover__img}\r\n                    src=\"https://s1.1zoom.me/b5050/382/388402-svetik_1920x1080.jpg\" />\r\n            </div>\r\n            <div className={s.profileInfo}>\r\n                <div className={s.profileInfo__PhotoWrapper}>\r\n                    <img className={s.profileInfo__PhotoImage}\r\n                        src={props.profileInfo.photos.large || userPhotoDefault} />\r\n                    <div>\r\n                        {props.isOwner\r\n                            &&\r\n                            <div className={s.input__wrapper}>\r\n                                <input className={s.input__file} onChange={onMainPhotoSelected} type=\"file\" name=\"file\" id=\"input__file\" />\r\n                                <label className={s.input__fileButton} for=\"input__file\">\r\n                                    <span className={s.input__fileIcon}></span>\r\n                                    <span className={s.input__fileButtonText}>Оновити фото</span>\r\n                                </label>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {editMode\r\n                    ?\r\n                    <ProfileDataFormRedux\r\n                        {...props}\r\n                        getUserStatus={props.getUserStatus}\r\n                        updateUserStatus={props.updateUserStatus}\r\n                        onSubmit={onSubmit}\r\n                        initialValues={props.profileInfo}\r\n                    />\r\n                    :\r\n                    <ProfileData\r\n                        {...props}\r\n                        getUserStatus={props.getUserStatus}\r\n                        updateUserStatus={props.updateUserStatus}\r\n                        goToEditMode={() => { setEditMode(true) }}\r\n                    />\r\n                }\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default ProfileInfo;","import React, { useEffect } from 'react';\r\nimport s from './Profile.module.css';\r\n\r\nimport AddNewPost from './NewPost/NewPost';\r\nimport Posts from './Posts/Posts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n  useEffect( () => {props.updatePostMode(false)}, [] )\r\n\r\n  return (\r\n    <section className={s.profile}>\r\n      <ProfileInfo\r\n        profileInfo={props.profileInfo}\r\n        getUserStatus={props.getUserStatus}\r\n        updateUserStatus={props.updateUserStatus}\r\n        isOwner={props.isOwner}\r\n        updatePhoto={props.updatePhoto}\r\n        saveProfile={props.saveProfile} />\r\n      {props.isOwner &&\r\n        <div>\r\n          <AddNewPost\r\n            addNewPost={props.addNewPost}\r\n            updatePostMode={props.profileInfo.updatePostMode}\r\n            isUpdatePostMode={props.isUpdatePostMode}\r\n          />\r\n          <Posts\r\n            posts={props.posts}\r\n            profileInfo={props.profileInfo}\r\n            deletePost={props.deletePost}\r\n            updatePost={props.updatePost}\r\n            updatePostMode={props.updatePostMode}\r\n            isUpdatePostMode={props.isUpdatePostMode}\r\n          />\r\n        </div>\r\n      }\r\n\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  addNewPost,\r\n  setUserProfile,\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus,\r\n  updatePhoto,\r\n  saveProfile,\r\n  deletePost,\r\n  updatePost,\r\n  updatePostMode\r\n} from '../../../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n//внутренний контейнер\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    console.log(userId);\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    console.log(userId);\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} isOwner={!this.props.match.params.userId} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profileInfo: state.profilePage.profileInfo,\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    isUpdatePostMode: state.profilePage.isUpdatePostMode\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,\r\n    {\r\n      addNewPost,\r\n      setUserProfile,\r\n      getUserProfile,\r\n      getUserStatus,\r\n      updateUserStatus,\r\n      updatePhoto,\r\n      saveProfile,\r\n      deletePost,\r\n      updatePost,\r\n      updatePostMode\r\n    }\r\n  ),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);","import React from \"react\";\r\nimport { withAuthRedirect } from \"../../../../hoc/AuthRedirect\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <div>\r\n            в процессе написания, нужна API:\\\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Routes);","import React from \"react\";\r\nimport { withAuthRedirect } from \"../../../../hoc/AuthRedirect\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            в процессе написания, нужна API:\\\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Settings);","import React from 'react';\r\nimport s from './StarUsers.module.scss';\r\n\r\nconst StarUsers = (props) => {\r\n\r\n  // debugger;\r\n  if (props.users.length === 0) {\r\n    props.setUsersStars([\r\n      {\r\n        id: 1,\r\n        followed: true,\r\n        avatar: 'https://glavcom.ua/img/article/6194/8_main.jpg',\r\n        fullName: 'Олег',\r\n        status: 'Відпочиваю після концерту. Вовчиці дали вогню..)',\r\n        location: {\r\n          city: 'Київ',\r\n          country: 'Україна'\r\n        },\r\n      }, {\r\n        id: 2,\r\n        followed: false,\r\n        avatar: 'https://fdlx.com/wp-content/uploads/donald-tramp-uxodit-v-otpusk-dlya-uchastiya-v-otborochnyx-igrax-po-golfu.jpg',\r\n        fullName: 'Donald',\r\n        status: \"I'd better go play golf ..\",\r\n        location: {\r\n          city: 'Нью-Йорк',\r\n          country: 'США'\r\n        },\r\n      }, {\r\n        id: 3,\r\n        followed: false,\r\n        avatar: 'https://cdn.livesport.ru/l/hockey/2019/03/01/lukashenko/picture.jpg?1551464140',\r\n        fullName: 'Александр',\r\n        status: 'Я очень люблю спорт — это самое лучшее мое качество.',\r\n        location: {\r\n          city: 'Мінськ',\r\n          country: 'Білорусь'\r\n        },\r\n      }, {\r\n        id: 4,\r\n        followed: true,\r\n        avatar: 'https://delo.ua/files/news/images/3624/99/picture2_klichko-pronik-v-_362499_p0.jpg',\r\n        fullName: 'Віталій',\r\n        status: 'Дайте мне точку опоры! И я обопрусь.',\r\n        location: {\r\n          city: 'Київ',\r\n          country: 'Україна'\r\n        },\r\n      }\r\n    ])\r\n  }\r\n\r\n  return (\r\n    <section className={s.users}>\r\n      <div>\r\n        {\r\n          props.users.map(u => <div key={u.id} className={s.users__item}>\r\n            <div className={s.users__img}>\r\n              <img src={u.avatar} alt=\"\" />\r\n              <div>\r\n                {u.followed\r\n                  ? <button onClick={() => { props.unfollow(u.id) }} className={`${s.users__button__unfollow} ${s.users__button} button`}>\r\n                    <span className={s.active}>Слідкую</span>\r\n                    <span className={s.hover}>Відписатись</span>\r\n                  </button>\r\n                  : <button onClick={() => { props.follow(u.id) }} className={`${s.users__button__follow} ${s.users__button} button`}>\r\n                    Підписатись\r\n                  </button>\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n            <div className={s.users__info}>\r\n              <div className={s.users__infoTop}>\r\n                <p className={s.users__name}>{u.fullName}</p>\r\n                <p className={s.users__city}>{u.location.city},</p>\r\n\r\n              </div>\r\n              <div className={s.users__infoBottom}>\r\n                <p className={s.users__status}>{u.status}</p>\r\n                <p className={s.users__country}>{u.location.country}</p>\r\n              </div>\r\n            </div>\r\n          </div >)\r\n        }\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default StarUsers;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../../hoc/AuthRedirect';\r\nimport {\r\n  followSucces,\r\n  unfollowSucces,\r\n  toggleFollowingInProgress,\r\n  unfollow,\r\n  follow,\r\n  setUsersStars\r\n} from '../../../../redux/star-users-reducer';\r\nimport {\r\n  getStars,\r\n  getIsFetchingStars,\r\n  getFollowingInProgressStars\r\n} from '../../../../redux/users-selectors';\r\nimport Preloader from '../../../Common/Preloader/Preloader';\r\nimport StarUsers from './StarUsers';\r\n\r\n\r\n//внутренний контейнер\r\nclass StarUsersContainer extends React.Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <StarUsers\r\n          users={this.props.users}\r\n          unfollowSucces={this.props.unfollowSucces}\r\n          followSucces={this.props.followSucces}\r\n          followingInProgress={this.props.followingInProgress}\r\n          unfollow={this.props.unfollow}\r\n          follow={this.props.follow}\r\n          setUsersStars={this.props.setUsersStars}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n};\r\n\r\n\r\n//внешний контейнер\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getStars(state),\r\n    isFetching: getIsFetchingStars(state),\r\n    followingInProgress: getFollowingInProgressStars(state)\r\n  }\r\n};\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,\r\n    {\r\n      followSucces,\r\n      unfollowSucces,\r\n      toggleFollowingInProgress,\r\n      unfollow,\r\n      follow,\r\n      setUsersStars\r\n    }\r\n  ),\r\n  withAuthRedirect\r\n)(StarUsersContainer);","import React, { Suspense } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport s from './Content.module.css';\r\n\r\nimport Friends from './Friends/Friends';\r\nimport Music from './Music/Music';\r\nimport Photos from './Photos/Photos';\r\nimport ProfileContainer from './Profile/ProfileContainer';\r\nimport Routes from './Routes/Routes';\r\nimport Settings from './Settings/Settings';\r\nimport StarUsersContainer from './StarUsers/StarUsersContainer';\r\n\r\n// import DialogsContainer from './Dialogs/DialogsContainer';\r\n// import UsersContainer from './Users/UsersContainer';\r\n// import Login from '../../Login/Login';\r\nconst DialogsContainer = React.lazy(() => import('./Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./Users/UsersContainer'));\r\nconst Login = React.lazy(() => import('../../Login/Login'));\r\n\r\n\r\nconst Content = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n\r\n      <Suspense fallback={<div>Завантаження...</div>}>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Redirect to=\"/profile\" />} />\r\n          <Route path=\"/login\" render={() => <Login />} />\r\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n          <Route path=\"/dialogs/:dialogId?\" render={() => <DialogsContainer />} />\r\n          <Route path=\"/users\" render={() => <UsersContainer />} />\r\n          <Route path=\"/starusers\" render={() => <StarUsersContainer />} />\r\n          <Route path=\"/photos\" render={() => <Photos />} />\r\n          <Route path=\"/routes\" render={() => <Routes />} />\r\n          <Route path=\"/music\" render={() => <Music />} />\r\n          <Route path=\"/settings\" render={() => <Settings />} />\r\n          <Route path=\"/friends\" render={() => <Friends />} />;\r\n          <Route path=\"*\" render={() => <div>404 NotFound</div>} />\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport Navbar from './Navbar/Navbar';\r\nimport Content from './Content/Content';\r\nimport s from './Main.module.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst Main = (props) => {\r\n  return (\r\n    <div className={`${s.main} wrapper`}>\r\n      <Navbar />\r\n      <Content />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React, {\n  Component\n} from 'react';\n\nimport './components/Common/_normalize.css'\nimport './components/Common/_nullstyle.css'\nimport './components/Common/__scrollbar.scss'\nimport './App.scss';\n\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Main from './components/Main/Main';\nimport { initializeApp } from './../src/redux/app-reducer';\nimport { connect } from 'react-redux';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n      <div className=\"app\">\n      <HeaderContainer />\n      <Main />\n    </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default compose(\n  withRouter,\n  connect (mapStateToProps, {initializeApp} )\n)  (App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link,\n  HashRouter\n} from \"react-router-dom\";\nimport {store} from './redux/redux-store';\nimport {Provider} from 'react-redux';\nimport App from './App';\n\nimport './index.scss';\n\n\n//функция отрисовки (перерисовки) UI\nlet renderEntireTree = ()=> {\n    ReactDOM.render(\n        <React.StrictMode>\n          <HashRouter>\n            <Provider store={store}>\n              <App/>\n            </Provider>\n          </HashRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n      );\n      \n      // If you want to start measuring performance in your app, pass a function\n      // to log results (for example: reportWebVitals(console.log))\n      // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n      reportWebVitals();\n}\n\n//первичная отрисовка\nrenderEntireTree();\n\n//подписка на события изменения\n//переписывает метод _renderEntireTree() в state\nstore.subscribe( () => {\n  renderEntireTree();\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3qz9G\",\"wrapper\":\"Header_wrapper__3UylV\",\"header__img\":\"Header_header__img__1d354\",\"login\":\"Header_login__1FCbm\",\"loginName\":\"Header_loginName__1Lw_5\",\"logoutButton\":\"Header_logoutButton__2yFXW\",\"loginLink\":\"Header_loginLink__1YazE\"};","import {\r\n    stopSubmit\r\n} from \"redux-form\";\r\nimport {\r\n    authAPI,\r\n    securityAPI\r\n} from \"../api/api\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//AC\r\nexport const setAuthUserData = (userId, email, login, isAuth = true, captchaUrl = null) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth,\r\n        captchaUrl\r\n    }\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {\r\n        captchaUrl\r\n    }\r\n});\r\n\r\n//TC\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {\r\n            id,\r\n            email,\r\n            login,\r\n        } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n        getCaptchaUrlSuccess(null);\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ?\r\n            response.data.messages[0] :\r\n            \"some error\";\r\n\r\n        dispatch(stopSubmit(\"login\", {\r\n            _error: message\r\n        }));\r\n\r\n        console.log(response.data.resultCode);\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n\r\n    console.log(`каптча с сервера:` + captchaUrl);\r\n\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n\r\n};\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPosts\":\"NewPost_newPosts__3p6ZS\",\"newPosts__title\":\"NewPost_newPosts__title__y93Wa\",\"newPosts__text\":\"NewPost_newPosts__text__IO62E\",\"newPosts__button\":\"NewPost_newPosts__button__3TNCU\"};","import React from 'react';\r\n\r\nimport s from './Preloader.module.scss';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value.length < minLength) {\r\n        return `Min length is ${minLength} symbols`\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    }\r\n    return undefined;\r\n}\r\n","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};\r\n\r\n//\r\nexport const getStars = (state) => {\r\n    return state.starUsersPage.users\r\n};\r\n\r\nexport const getIsFetchingStars = (state) => {\r\n    return state.starUsersPage.isFetching\r\n};\r\n\r\nexport const getFollowingInProgressStars = (state) => {\r\n    return state.starUsersPage.followingInProgress\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatus\":\"ProfileStatus_profileStatus__21WzX\",\"profileStatus__Description\":\"ProfileStatus_profileStatus__Description__mqL0z\",\"profileStatus__input\":\"ProfileStatus_profileStatus__input__3kq_G\"};"],"sourceRoot":""}