{"version":3,"sources":["components/Main/Content/Dialogs/Dialogs.module.scss","components/Main/Content/Dialogs/DialogsItems/DialogItem/DialogItem.module.scss","components/Main/Content/Dialogs/MessagesItems/MessagesItem/MessagesItem.module.scss","components/Main/Content/Dialogs/AddNewMessage/AddNewMessage.module.scss","components/Main/Content/Dialogs/DialogsItems/DialogItem/DialogItem.jsx","components/Main/Content/Dialogs/DialogsItems/DialogsItems.jsx","components/Main/Content/Dialogs/MessagesItems/MessagesItem/MessagesItem.jsx","components/Main/Content/Dialogs/MessagesItems/MessagesItems.jsx","components/Main/Content/Dialogs/AddNewMessage/AddNewMessage.jsx","components/Main/Content/Dialogs/Dialogs.jsx","components/Main/Content/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialogItem","to","id","NavLink","activeClassName","dialogItemActive","name","DialogsItems","dialogsItems","dialogs","map","d","key","MessagesItem","cn","messageWrapper","owner","messageAuthor","messageAuthorPhotoOwner","src","photos","userPhotoDefault","alt","messageAuthorName","messageTextOwner","messageText","messageAuthorPhoto","MessagesItems","scrollToBottom","messagesEnd","scrollIntoView","behavior","this","dialogId","messagesArray","dialogsMessages","filter","item","getDialogId","length","messages","m","messagesText","getMessagesItems","style","float","clear","ref","el","React","Component","AddNewMessageFormRedux","reduxForm","form","enableReinitialize","destroyOnUnmount","newPosts","onSubmit","handleSubmit","htmlFor","Field","newPosts__text","component","validate","required","placeholder","newPosts__button","AddNewMessage","useEffect","resetNewMessageField","newPosts__title","formData","addNewMessage","newMessage","console","log","onChange","setCurrentTextOfMessage","initialValues","undefined","newMessageText","Dialogs","dialogsTitle","dialogsContent","dialogsColumn","dialog","messagesColumn","messagesItems","DialogsContainer","userId","authorizedUserId","getUserProfile","match","params","compose","connect","state","dialogsPage","isAuth","auth","profilePage","profileInfo","small","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/4.673832ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Zbdx\",\"dialogsTitle\":\"Dialogs_dialogsTitle__QCU90\",\"dialogsContent\":\"Dialogs_dialogsContent__3MJab\",\"dialogsColumn\":\"Dialogs_dialogsColumn__1aQch\",\"messagesColumn\":\"Dialogs_messagesColumn__1Z03e\",\"messagesItems\":\"Dialogs_messagesItems__33bR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__3AjHK\",\"NavLink\":\"DialogItem_NavLink__28e6D\",\"dialogItemActive\":\"DialogItem_dialogItemActive__2MYNC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"MessagesItem_messageWrapper__3VskI\",\"owner\":\"MessagesItem_owner__W4GRb\",\"messageAuthor\":\"MessagesItem_messageAuthor__1JTqE\",\"messageAuthorPhoto\":\"MessagesItem_messageAuthorPhoto__1x4M2\",\"messageAuthorName\":\"MessagesItem_messageAuthorName__2tIuO\",\"messageText\":\"MessagesItem_messageText__1Cwle\",\"messageAuthorPhotoOwner\":\"MessagesItem_messageAuthorPhotoOwner__KdKRR\",\"messageTextOwner\":\"MessagesItem_messageTextOwner__3TQgC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPosts\":\"AddNewMessage_newPosts__3yqf4\",\"newPosts__title\":\"AddNewMessage_newPosts__title__1iZ4S\",\"newPosts__text\":\"AddNewMessage_newPosts__text__3GvE0\",\"newPosts__button\":\"AddNewMessage_newPosts__button__36opm\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './DialogItem.module.scss';\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n            <p className={s.dialogItem}>\r\n              <NavLink to={\"/dialogs/\" + props.id} className={s.NavLink} activeClassName={s.dialogItemActive}>{props.name}</NavLink>\r\n            </p>\r\n  );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\n\r\n\r\n\r\nexport const DialogsItems = (props) => {\r\n\r\n    // debugger\r\n    let dialogsItems = props.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n\r\n    return (\r\n        <div>\r\n            {dialogsItems}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogsItems;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userPhotoDefault from '../../../../../../assets/images/user_default.png';\r\nimport cn from 'classnames';\r\n\r\nimport s from './MessagesItem.module.scss';\r\n\r\nconst MessagesItem = (props) => {\r\n\r\n  // debugger\r\n  if (props.name == 'Ð¯') {\r\n    return (\r\n      <div className={cn(s.messageWrapper, s.owner)}>\r\n        <div className={s.messageAuthor}>\r\n          <div className={s.messageAuthorPhotoOwner}>\r\n            <img src={props.photos || userPhotoDefault} alt=\"\" />\r\n          </div>\r\n          <div className={s.messageAuthorName}>\r\n            {props.name}\r\n          </div>\r\n        </div>\r\n        <p className={s.messageTextOwner}>\r\n          {props.messageText}\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={s.messageWrapper}>\r\n        <div className={s.messageAuthor}>\r\n          <div className={s.messageAuthorPhoto}>\r\n\r\n          </div>\r\n          <div className={s.messageAuthorName}>\r\n            {props.name}\r\n          </div>\r\n        </div>\r\n        <p className={s.messageText}>\r\n          {props.messageText}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessagesItem;\r\n\r\n\r\n\r\n\r\n// <div className={s.messageWrapper}>\r\n//   <div className={s.messageAuthor}>\r\n//     <div className={s.messageAuthorPhoto}>\r\n\r\n//     </div>\r\n//     <div className={s.messageAuthorName}>\r\n//       {props.name}\r\n//     </div>\r\n//   </div>\r\n//   <p className={s.messageText}>\r\n//     {props.messageText}\r\n//   </p>\r\n// </div>","import React from 'react';\r\nimport MessagesItem from './MessagesItem/MessagesItem';\r\n\r\n\r\nclass MessagesItems extends React.Component {\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     this.scrollToBottom();\r\n    // }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    getDialogId() {\r\n        if (this.props.dialogId) {\r\n            return this.props.dialogId;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getMessagesItems() {\r\n        // debugger\r\n\r\n        let messagesArray = [...this.props.dialogsMessages.filter(item => item.id == (+this.getDialogId()))];\r\n\r\n        if (messagesArray.length > 0) {\r\n            let messagesItems = messagesArray[0].messages\r\n                .map(m =>\r\n                    <MessagesItem\r\n                        name={m.name}\r\n                        messageText={m.messagesText}\r\n                        key={m.id} id={m.id}\r\n                        photos={this.props.photos}\r\n                    />);\r\n            return messagesItems;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"toBottom\">\r\n                {this.getMessagesItems()}\r\n                <div style={{ float: \"left\", clear: \"both\" }}\r\n                    ref={(el) => { this.messagesEnd = el; }}>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessagesItems;","import React, { useEffect } from 'react';\r\nimport s from './AddNewMessage.module.scss';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required } from '../../../../../utils/validators/validators';\r\n\r\nconst AddNewMessageForm = (props) => {\r\n  return (\r\n    <form className={s.newPosts} onSubmit={props.handleSubmit}>\r\n      <label htmlFor=\"newMessage\"></label>\r\n      <Field className={s.newPosts__text} component=\"textarea\" name=\"newMessage\" validate={[required]} placeholder=\"Ð¼Ð¾Ñ Ð¿Ð¾Ð²ÑÐ´Ð¾Ð¼Ð»ÐµÐ½Ð½Ñ..\"></Field>\r\n      <button className={`button ${s.newPosts__button}`}>ÐÑÐ´Ð¿ÑÐ°Ð²Ð¸ÑÐ¸</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewMessageFormRedux = reduxForm({\r\n  form: 'DialogsAddNewMessage',\r\n  enableReinitialize: true,\r\n  destroyOnUnmount: false\r\n})(AddNewMessageForm);\r\n\r\nconst AddNewMessage = (props) => {\r\n\r\n  useEffect(() => { props.resetNewMessageField() }, [props.dialogId]);\r\n\r\n  let newMessageText = () => {\r\n    if (props.dialogsMessages.filter(item => item.id == (+props.dialogId))[0] != undefined) {\r\n      return props.dialogsMessages.filter(item => item.id == (+props.dialogId))[0].newMessageText;\r\n    } else {\r\n      return \"\"\r\n    }\r\n  };\r\n\r\n  let setCurrentTextOfMessage = (formData) => {\r\n    props.setCurrentTextOfMessage(formData.newMessage, props.dialogId);\r\n  };\r\n\r\n  //ÐºÐ¾Ð»Ð±ÑÐº ÑÑÐ½ÐºÑÐ¸Ñ \r\n  let addMessage = (formData) => {\r\n    props.addNewMessage(formData.newMessage, props.dialogId);\r\n    console.log(formData.newMessage);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <p className={s.newPosts__title}>ÐÐ¾Ð²Ðµ Ð¿Ð¾Ð²ÑÐ´Ð¾Ð¼Ð»ÐµÐ½Ð½Ñ</p>\r\n      <AddNewMessageFormRedux onSubmit={addMessage} onChange={setCurrentTextOfMessage}\r\n        initialValues={{ newMessage: newMessageText() }} />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default AddNewMessage;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.scss';\r\nimport DialogsItems from './DialogsItems/DialogsItems';\r\nimport MessagesItems from './MessagesItems/MessagesItems';\r\nimport { render } from '@testing-library/react';\r\nimport AddNewMessage from './AddNewMessage/AddNewMessage';\r\n\r\nclass Dialogs extends React.Component {\r\n  render() {\r\n    return (\r\n      <section className={s.dialogs}>\r\n\r\n        <p className={s.dialogsTitle}>ÐÐ¾Ð²ÑÐ´Ð¾Ð¼Ð»ÐµÐ½Ð½Ñ</p>\r\n\r\n        <div className={s.dialogsContent}>\r\n          <div className={s.dialogsColumn}>\r\n            <div className={s.dialog}>\r\n              <DialogsItems {...this.props} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={s.messagesColumn}>\r\n            <div className={s.messagesItems}>\r\n              <MessagesItems {...this.props} dialogId={this.props.dialogId} />\r\n            </div>\r\n\r\n            <AddNewMessage\r\n              addNewMessage={this.props.addNewMessage}\r\n              dialogId={this.props.dialogId}\r\n              resetNewMessageField={this.props.resetNewMessageField}\r\n              setCurrentTextOfMessage={this.props.setCurrentTextOfMessage}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../../hoc/AuthRedirect';\r\nimport { addNewMessage, resetNewMessageField, setCurrentTextOfMessage } from '../../../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs'\r\nimport { getUserProfile } from '../../../../redux/profile-reducer';\r\n\r\n\r\nclass DialogsContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.authorizedUserId;\r\n    this.props.getUserProfile(userId);\r\n  }\r\n\r\n  render() {\r\n    let dialogId = this.props.match.params.dialogId;\r\n\r\n    return (\r\n      <Dialogs {...this.props} dialogId={dialogId} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    dialogsMessages: state.dialogsPage.dialogsMessages,\r\n    // newMessageText: state.dialogsPage.newMessageText,\r\n    isAuth: state.auth.isAuth,\r\n    authorizedUserId: state.auth.userId,\r\n    photos: state.profilePage.profileInfo.photos.small,\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    addNewMessage,\r\n    getUserProfile,\r\n    resetNewMessageField,\r\n    setCurrentTextOfMessage\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(DialogsContainer);"],"sourceRoot":""}