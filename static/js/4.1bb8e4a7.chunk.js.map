{"version":3,"sources":["components/Main/Content/Dialogs/Dialogs.module.scss","components/Main/Content/Dialogs/DialogsItems/DialogItem/DialogItem.module.scss","components/Main/Content/Dialogs/MessagesItems/MessagesItem/MessagesItem.module.css","components/Main/Content/Dialogs/AddNewMessage/AddNewMessage.module.scss","components/Main/Content/Dialogs/DialogsItems/DialogItem/DialogItem.jsx","components/Main/Content/Dialogs/DialogsItems/DialogsItems.jsx","components/Main/Content/Dialogs/MessagesItems/MessagesItem/MessagesItem.jsx","components/Main/Content/Dialogs/MessagesItems/MessagesItems.jsx","components/Main/Content/Dialogs/AddNewMessage/AddNewMessage.jsx","components/Main/Content/Dialogs/Dialogs.jsx","components/Main/Content/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialogItem","to","id","NavLink","activeClassName","dialogItemActive","name","DialogsItems","dialogsItems","dialogs","map","d","key","MessagesItem","messageWrapper","messageAuthor","messageAuthorPhoto","messageAuthorName","messageText","MessagesItems","this","dialogId","messagesArray","dialogsMessages","filter","item","getDialogId","length","messages","m","messagesText","getMessagesItems","React","Component","AddNewMessageFormRedux","reduxForm","form","newPosts","onSubmit","handleSubmit","htmlFor","Field","newPosts__text","component","placeholder","newPosts__button","AddNewMessage","newPosts__title","formData","addMessage","newMessage","console","log","Dialogs","dialogsTitle","dialogsContent","dialogsColumn","dialog","messagesColumn","messagesItems","DialogsContainer","match","params","compose","connect","state","dialogsPage","newMessageText","isAuth","auth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/4.1bb8e4a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Zbdx\",\"dialogsTitle\":\"Dialogs_dialogsTitle__QCU90\",\"dialogsContent\":\"Dialogs_dialogsContent__3MJab\",\"dialogsColumn\":\"Dialogs_dialogsColumn__1aQch\",\"messagesColumn\":\"Dialogs_messagesColumn__1Z03e\",\"messagesItems\":\"Dialogs_messagesItems__33bR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__3AjHK\",\"NavLink\":\"DialogItem_NavLink__28e6D\",\"dialogItemActive\":\"DialogItem_dialogItemActive__2MYNC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"MessagesItem_messageWrapper__ZwdFI\",\"messageAuthor\":\"MessagesItem_messageAuthor__O6riN\",\"messageAuthorPhoto\":\"MessagesItem_messageAuthorPhoto__1i5F9\",\"messageAuthorName\":\"MessagesItem_messageAuthorName__DsgAx\",\"messageText\":\"MessagesItem_messageText__218i7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPosts\":\"AddNewMessage_newPosts__3yqf4\",\"newPosts__title\":\"AddNewMessage_newPosts__title__1iZ4S\",\"newPosts__text\":\"AddNewMessage_newPosts__text__3GvE0\",\"newPosts__button\":\"AddNewMessage_newPosts__button__36opm\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './DialogItem.module.scss';\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n            <p className={s.dialogItem}>\r\n              <NavLink to={\"/dialogs/\" + props.id} className={s.NavLink} activeClassName={s.dialogItemActive}>{props.name}</NavLink>\r\n            </p>\r\n  );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\n\r\n\r\n\r\nexport const DialogsItems = (props) => {\r\n\r\n    // debugger\r\n    let dialogsItems = props.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n\r\n    return (\r\n        <div>\r\n            {dialogsItems}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogsItems;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './MessagesItem.module.css';\r\n\r\nconst MessagesItem = (props) => {\r\n  return (\r\n    <div className={s.messageWrapper}>\r\n      <div className={s.messageAuthor}>\r\n        <div className={s.messageAuthorPhoto}>\r\n\r\n        </div>\r\n        <div className={s.messageAuthorName}>\r\n          {props.name}\r\n      </div>\r\n      </div>\r\n      <p className={s.messageText}>\r\n        {props.messageText}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessagesItem;","import React from 'react';\r\nimport MessagesItem from './MessagesItem/MessagesItem';\r\n\r\n\r\nclass MessagesItems extends React.Component {\r\n\r\n    getDialogId() {\r\n        if (this.props.dialogId) {\r\n            return this.props.dialogId;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getMessagesItems() {\r\n        // debugger\r\n\r\n        let messagesArray = [...this.props.dialogsMessages.filter(item => item.id == (+this.getDialogId()))];\r\n\r\n        if (messagesArray.length > 0) {\r\n            let messagesItems = messagesArray[0].messages\r\n                .map(m => <MessagesItem name={m.name} messageText={m.messagesText} key={m.id} id={m.id} />);\r\n            return messagesItems;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.getMessagesItems()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessagesItems;","import React from 'react';\r\nimport s from './AddNewMessage.module.scss';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst AddNewMessageForm = (props) => {\r\n  return (\r\n    <form className={s.newPosts} onSubmit={props.handleSubmit}>\r\n      <label htmlFor=\"newMessage\"></label>\r\n      <Field className={s.newPosts__text} component=\"textarea\" name=\"newMessage\" placeholder=\"моє повідомлення..\"></Field>\r\n      <button className={`button ${s.newPosts__button}`}>Відправити</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewMessageFormRedux = reduxForm({\r\n  form: 'DialogsAddNewMessage'\r\n})(AddNewMessageForm);\r\n\r\nconst AddNewMessage = (props) => {\r\n  //колбэк функция \r\n  let addMessage = (formData) => {\r\n    props.addMessage(formData.newMessage);\r\n    console.log(formData.newMessage);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className={s.newPosts__title}>Нове повідомлення</p>\r\n      <AddNewMessageFormRedux onSubmit={addMessage} />\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default AddNewMessage;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.scss';\r\nimport DialogsItems from './DialogsItems/DialogsItems';\r\nimport MessagesItems from './MessagesItems/MessagesItems';\r\nimport { render } from '@testing-library/react';\r\nimport AddNewMessage from './AddNewMessage/AddNewMessage';\r\n\r\nclass Dialogs extends React.Component {\r\n  render() {\r\n    return (\r\n      <section className={s.dialogs}>\r\n\r\n        <p className={s.dialogsTitle}>Повідомлення</p>\r\n\r\n        <div className={s.dialogsContent}>\r\n          <div className={s.dialogsColumn}>\r\n            <div className={s.dialog}>\r\n              <DialogsItems {...this.props} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={s.messagesColumn}>\r\n            <div className={s.messagesItems}>\r\n              <MessagesItems {...this.props} dialogId={this.props.dialogId}/>\r\n            </div>\r\n\r\n            <AddNewMessage addMessage={this.props.addMessage} />\r\n          </div>\r\n        </div>\r\n\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../../hoc/AuthRedirect';\r\nimport { addMessage } from '../../../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs'\r\n\r\n\r\nclass DialogsContainer extends React.Component {\r\n  render() {\r\n    let dialogId = this.props.match.params.dialogId;\r\n\r\n    return (\r\n      <Dialogs {...this.props} dialogId={dialogId} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    dialogsMessages: state.dialogsPage.dialogsMessages,\r\n    newMessageText: state.dialogsPage.newMessageText,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    addMessage\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(DialogsContainer);"],"sourceRoot":""}