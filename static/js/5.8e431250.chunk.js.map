{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/Common/FormControls/FormControls.module.scss","components/Login/Login.module.scss","components/Common/FormControls/FormControls.tsx","components/Login/Login.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","module","exports","Element","Input","input","meta","props","hasError","touched","error","className","s","formControl","maxLength15","maxLengthCreator","minLength4","minLengthCreator","LoginReduxForm","reduxForm","form","captchaUrl","getCaptchaUrl","handleSubmit","loginForm","onSubmit","htmlFor","Field","loginField","name","component","type","placeholder","validate","required","RememberMe","RememberMeInput","id","RememberMeLabel","formCommonError","CaptchaImageContainer","CaptchaImage","src","reloadDouble","onClick","autocomplete","loginButton","connect","state","auth","isAuth","login","to","loginTitle","formData","email","password","rememberMe","captcha"],"mappings":"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","file":"static/js/5.8e431250.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__c4fDl\",\"error\":\"FormControls_error__2DM7V\",\"formCommonError\":\"FormControls_formCommonError__3bSHw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2DqEy\",\"loginTitle\":\"Login_loginTitle__3JZKd\",\"loginForm\":\"Login_loginForm__3BjhM\",\"loginField\":\"Login_loginField__sUmQn\",\"RememberMe\":\"Login_RememberMe__wSdmn\",\"RememberMeLabel\":\"Login_RememberMeLabel__8I-Nk\",\"RememberMeInput\":\"Login_RememberMeInput__3oDuT\",\"CaptchaImageContainer\":\"Login_CaptchaImageContainer__2brGE\",\"reloadDouble\":\"Login_reloadDouble__1F7gG\",\"rotate\":\"Login_rotate__1ZK4p\",\"formCommonError\":\"Login_formCommonError__1fy5a\",\"loginButton\":\"Login_loginButton__3kiEU\"};","import React from \"react\";\r\nimport s from \"./FormControls.module.scss\";\r\n\r\nexport const Element = (Element: string) => ({input, meta, ...props} : {input: any, meta: any}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \" \")}>\r\n            <div>\r\n               <Element {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form'\r\nimport {\r\n    maxLengthCreator,\r\n    minLengthCreator,\r\n    required,\r\n} from '../../utils/validators/validators'\r\nimport { Element } from '../Common/FormControls/FormControls'\r\nimport { login, getCaptchaUrl } from '../../redux/auth-reducer'\r\nimport s from './Login.module.scss'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AppStateType } from '../../redux/redux-store'\r\n\r\n//1-LoginForm\r\nconst Input = Element('input')\r\nconst maxLength15 = maxLengthCreator(15)\r\nconst minLength4 = minLengthCreator(4)\r\n\r\ntype LoginOwnFormProps = {\r\n    captchaUrl: string | null\r\n    getCaptchaUrl: () => void\r\n}\r\n\r\nconst LoginForm: React.FC<\r\n    InjectedFormProps<LoginFormValuesType, LoginOwnFormProps> &\r\n        LoginOwnFormProps\r\n> = ({ error, captchaUrl, getCaptchaUrl, handleSubmit }) => {\r\n    return (\r\n        <form className={s.loginForm} onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"email\"></label>\r\n                <Field\r\n                    className={s.loginField}\r\n                    name=\"email\"\r\n                    component={Input}\r\n                    type=\"text\"\r\n                    placeholder={'login'}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"password\"></label>\r\n                <Field\r\n                    className={s.loginField}\r\n                    name=\"password\"\r\n                    component={Input}\r\n                    type=\"password\"\r\n                    placeholder={'password'}\r\n                    validate={[required, minLength4, maxLength15]}\r\n                />\r\n            </div>\r\n            <div className={s.RememberMe}>\r\n                <Field\r\n                    className={s.RememberMeInput}\r\n                    name=\"rememberMe\"\r\n                    id=\"rememberMe\"\r\n                    component=\"input\"\r\n                    type=\"checkbox\"\r\n                />\r\n                <label className={s.RememberMeLabel} htmlFor=\"rememberMe\">\r\n                    запам'ятати мене\r\n                </label>\r\n            </div>\r\n            <div>\r\n                {error && <div className={s.formCommonError}>{error}</div>}\r\n            </div>\r\n\r\n            {captchaUrl && (\r\n                <div className={s.CaptchaImageContainer}>\r\n                    <div>\r\n                        <div>\r\n                            <img className={s.CaptchaImage} src={captchaUrl} />\r\n                            <div\r\n                                className={s.reloadDouble}\r\n                                onClick={getCaptchaUrl}\r\n                            ></div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Field\r\n                            className={s.loginField}\r\n                            name=\"captcha\"\r\n                            autocomplete=\"off\"\r\n                            placeholder=\"введіть символи\"\r\n                            component={Input}\r\n                            validate={[required]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <button className={s.loginButton} type=\"submit\">\r\n                УВІЙТИ\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\n//2-Container ReduxForm\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginOwnFormProps>({\r\n    form: 'login',\r\n})(LoginForm)\r\n\r\n//3-Component Login\r\ntype MapStatePropsType = {\r\n    captchaUrl: string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    login: (\r\n        email: string,\r\n        password: string,\r\n        rememberMe: boolean,\r\n        captcha: string\r\n    ) => void\r\n    getCaptchaUrl: () => void\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\nconst Login: React.FC<PropsType> = ({\r\n    captchaUrl,\r\n    isAuth,\r\n    login,\r\n    getCaptchaUrl,\r\n}) => {\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        //TC\r\n        login(\r\n            formData.email,\r\n            formData.password,\r\n            formData.rememberMe,\r\n            formData.captcha\r\n        )\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            <h1 className={s.loginTitle}>Авторизація</h1>\r\n            <LoginReduxForm\r\n                onSubmit={onSubmit}\r\n                captchaUrl={captchaUrl}\r\n                getCaptchaUrl={getCaptchaUrl}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, getCaptchaUrl })(Login)\r\n"],"sourceRoot":""}