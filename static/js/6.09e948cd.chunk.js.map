{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/Common/FormControls/FormControls.module.scss","components/Login/Login.module.scss","components/Common/FormControls/FormControls.js","components/Login/Login.jsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","module","exports","Element","Input","input","meta","props","hasError","touched","error","className","s","formControl","maxLength15","maxLengthCreator","minLength4","minLengthCreator","LoginReduxForm","reduxForm","form","loginForm","onSubmit","handleSubmit","htmlFor","Field","loginField","name","component","type","placeholder","validate","required","RememberMe","RememberMeInput","id","RememberMeLabel","formCommonError","captchaUrl","CaptchaImageContainer","CaptchaImage","src","class","reloadDouble","onClick","getCaptchaUrl","autocomplete","loginButton","connect","state","isAuth","auth","login","to","loginTitle","formData","email","password","rememberMe","captcha"],"mappings":"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","file":"static/js/6.09e948cd.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__c4fDl\",\"error\":\"FormControls_error__2DM7V\",\"formCommonError\":\"FormControls_formCommonError__3bSHw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2DqEy\",\"loginTitle\":\"Login_loginTitle__3JZKd\",\"loginForm\":\"Login_loginForm__3BjhM\",\"loginField\":\"Login_loginField__sUmQn\",\"RememberMe\":\"Login_RememberMe__wSdmn\",\"RememberMeLabel\":\"Login_RememberMeLabel__8I-Nk\",\"RememberMeInput\":\"Login_RememberMeInput__3oDuT\",\"CaptchaImageContainer\":\"Login_CaptchaImageContainer__2brGE\",\"reloadDouble\":\"Login_reloadDouble__1F7gG\",\"rotate\":\"Login_rotate__1ZK4p\",\"formCommonError\":\"Login_formCommonError__1fy5a\",\"loginButton\":\"Login_loginButton__3kiEU\"};","import React from \"react\";\r\nimport s from \"./FormControls.module.scss\";\r\n\r\nexport const Element = (Element) => ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \" \")}>\r\n            <div>\r\n               <Element {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, minLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Element } from \"../Common/FormControls/FormControls\";\r\nimport { login, getCaptchaUrl } from \"../../redux/auth-reducer\";\r\nimport s from './Login.module.scss';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Input = Element(\"input\");\r\nconst maxLength15 = maxLengthCreator(15);\r\nconst minLength4 = minLengthCreator(4);\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form className={s.loginForm} onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"email\"></label>\r\n                <Field className={s.loginField} name=\"email\" component={Input} type=\"text\"\r\n                    placeholder={\"login\"} validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"password\"></label>\r\n                <Field className={s.loginField} name=\"password\" component={Input} type=\"password\"\r\n                    placeholder={\"password\"} validate={[required, minLength4, maxLength15]} />\r\n            </div>\r\n            <div className={s.RememberMe}>\r\n                <Field className={s.RememberMeInput} name=\"rememberMe\" id=\"rememberMe\" component=\"input\" type=\"checkbox\" />\r\n                <label className={s.RememberMeLabel} htmlFor=\"rememberMe\">запам'ятати мене</label>\r\n            </div>\r\n            <div>\r\n                {props.error &&\r\n                    <div className={s.formCommonError}>{props.error}</div>}\r\n            </div>\r\n\r\n\r\n            {props.captchaUrl &&\r\n                <div className={s.CaptchaImageContainer} >\r\n                    <div>\r\n                        <div>\r\n                            <img className={s.CaptchaImage} src={props.captchaUrl} />\r\n                            <div class={s.reloadDouble} onClick={props.getCaptchaUrl} ></div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <Field className={s.loginField} name=\"captcha\" autocomplete=\"off\"\r\n                            placeholder=\"введіть символи\" component={Input} validate={[required]} />\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            <button className={s.loginButton} type=\"submit\">УВІЙТИ</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n        // console.log(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            <h1 className={s.loginTitle}>Авторизація</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} getCaptchaUrl={props.getCaptchaUrl} />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n});\r\n\r\nexport default connect(mapStateToProps, { login, getCaptchaUrl })(Login);"],"sourceRoot":""}