{"version":3,"sources":["components/Main/Navbar/Navbar.module.css","redux/users-reducer.js","components/Main/Content/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.module.scss","components/Common/FormControls/FormControls.js","assets/images/user_default.png","components/Common/Preloader/Preloader.jsx","components/Main/Content/Profile/ProfileInfo/ProfileData/ProfileData.module.scss","components/Main/Content/Content.module.css","components/Main/Content/Profile/Profile.module.css","components/Main/Content/Profile/Posts/Post/Post.module.css","components/Main/Content/Profile/Posts/Posts.module.css","components/Main/Main.module.css","components/Common/Preloader/Preloader.module.scss","api/api.js","components/Main/Content/Profile/ProfileInfo/ProfileInfo.module.scss","reportWebVitals.js","redux/profile-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Main/Navbar/Navbar.jsx","components/Main/Content/Profile/NewPost/NewPost.jsx","components/Main/Content/Profile/Posts/Post/Post.jsx","components/Main/Content/Profile/Posts/Posts.jsx","components/Main/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Main/Content/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Main/Content/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Main/Content/Profile/ProfileInfo/ProfileInfo.jsx","components/Main/Content/Profile/Profile.jsx","components/Main/Content/Profile/ProfileContainer.jsx","components/Main/Content/Content.jsx","components/Main/Main.jsx","App.js","index.js","components/Header/Header.module.scss","redux/auth-reducer.js","components/Main/Content/Profile/NewPost/NewPost.module.scss","components/Main/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss","utils/validators/validators.js","components/Common/FormControls/FormControls.module.scss","hoc/AuthRedirect.jsx","redux/dialogs-reducer.js"],"names":["module","exports","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_IN_PROGRESS","initialState","users","pageSize","currentPage","totalUsersCount","isFetching","followingInProgress","followSucces","userId","type","unfollowSucces","setUsers","toggleIsFetching","toggleFollowingInProgress","requestUsers","dispatch","a","usersAPI","getUsers","data","items","totalCount","updateUsers","pageNumber","unfollow","response","resultCode","follow","usersReducer","state","action","map","u","id","followed","filter","Element","input","meta","props","hasError","touched","error","className","s","formControl","Preloader","preloader","instance","axios","withCredentials","baseURL","headers","authAPI","me","get","login","email","password","rememberMe","captcha","post","logout","delete","securityAPI","getCaptchaUrl","profileAPI","getProfile","getStatus","updateStatus","status","put","updatePhoto","photoFile","formData","FormData","append","saveProfile","profile","then","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","UPDATE_PHOTO_SUCCESS","profileInfo","posts","message","setUserProfile","setUserStatus","getUserProfile","profileReducer","newPost","newPostText","photos","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","dialogsReducer","usersPage","auth","authReducer","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","console","log","header","wrapper","header__img","src","isAuth","loginName","logoutButton","onClick","loginLink","to","HeaderContainer","this","React","Component","connect","Navbar","navbar","navbar__items","navbar__item","activeClassName","navbar__active","navbar__settings","navbar__friends","navbar__friendsTitle","friends__items","friends__item","alt","maxLength20","maxLengthCreator","Textarea","AddNewPostFormRedux","reduxForm","onSubmit","handleSubmit","htmlFor","Field","newPosts__text","component","name","placeholder","validate","required","newPosts__button","AddNewPost","newPosts","newPosts__title","addPost","Post","massage","Posts","postsElements","p","key","ProfileStatusWithHooks","memo","useState","editMode","setEditMode","setStatus","useEffect","undefined","profileStatus","profileStatus__Description","isOwner","onChange","e","currentTarget","value","maxLength","autoFocus","onBlur","updateUserStatus","profileStatus__input","Contact","contactTitle","contactValue","profileInfo__Contact","profileInfo__ContactTitle","profileInfo__ContactValue","target","href","ProfileData","goToEditMode","getUserStatus","profileInfo__Text","profileInfo__TextLeft","profileInfo__Name","fullName","profileInfo__Parametr","bold","lookingForAJob","lookingForAJobDescription","aboutMe","profileInfo__button","profileInfo__Contacts","profileInfo__ContactsTitle","Object","keys","contacts","ProfileDataFormRedux","profileInfo__Form","profileInfo__FormLeft","profileInfo__Checkbox","profileInfo__CheckboxInput","profileInfo__CheckboxLabel","for","profileInfo__ParametrInput","profileInfo__buttonSave","formCommonError","profileInfo__FormContacts","ProfileInfo","profileCover","profileCover__img","profileInfo__PhotoWrapper","profileInfo__PhotoImage","large","userPhotoDefault","input__wrapper","input__file","files","length","input__fileButton","input__fileIcon","input__fileButtonText","initialValues","Profile","ProfileContainer","match","params","authorizedUserId","refreshProfile","prevProps","file","getState","messages","stopSubmit","_error","Promise","reject","withRouter","withAuthRedirect","DialogsContainer","lazy","UsersContainer","Login","Content","content","fallback","path","render","Main","main","App","initializeApp","promise","getAuthUserData","all","renderEntireTree","ReactDOM","StrictMode","document","getElementById","subscribe","SET_AUTH_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","url","minLengthCreator","minLength","mapStateToPropsForRedirect","RedirectComponent","ADD_MESSAGE","dialogs","messagesText","addMessage","newMessageText","newMessage"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,cAAgB,8BAA8B,aAAe,6BAA6B,eAAiB,+BAA+B,iBAAmB,iCAAiC,gBAAkB,gCAAgC,qBAAuB,qCAAqC,eAAiB,+BAA+B,cAAgB,gC,kUCGxZC,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAA+B,+BAEjCC,EAAe,CACfC,MAAO,GACPC,SAAU,EACVC,YAAa,EACbC,gBAAiB,EACjBC,YAAY,EACZC,oBAAqB,IAwFZC,EAAe,SAACC,GAAD,MAAa,CACrCC,KAAMhB,EACNe,WAGSE,EAAiB,SAACF,GAAD,MAAa,CACvCC,KAAMf,EACNc,WAGSG,EAAW,SAACV,GAAD,MAAY,CAChCQ,KAAMd,EACNM,UAaSW,EAAmB,SAACP,GAAD,MAAiB,CAC7CI,KAAMX,EACNO,eAGSQ,EAA4B,SAACP,EAAqBE,GAAtB,MAAkC,CACvEC,KAAMV,EACNO,sBACAE,WAKSM,EAAe,SAACX,EAAaD,GAAd,8CAA2B,WAAOa,GAAP,eAAAC,EAAA,6DACnDD,EAASH,GAAiB,IADyB,SAIlCK,IAASC,SAASf,EAAaD,GAJG,OAI/CiB,EAJ+C,OAMnDJ,EAASH,GAAiB,IAC1BG,EAASJ,EAASQ,EAAKC,QACvBL,GA1B+BM,EA0BHF,EAAKE,WA1Bc,CAC/CZ,KAAMZ,EACNwB,gBAgBmD,iCAlBrB,IAACA,IAkBoB,OAA3B,uDAWfC,EAAc,SAACC,EAAYrB,GAAb,8CAA0B,WAAOa,GAAP,eAAAC,EAAA,6DACjDD,EAASH,GAAiB,IAC1BG,EApC4C,CAC5CN,KAAMb,EACNO,YAkCwBoB,IAFyB,SAKhCN,IAASC,SAASK,EAAYrB,GALE,OAK7CiB,EAL6C,OAOjDJ,EAASH,GAAiB,IAC1BG,EAASJ,EAASQ,EAAKC,QAR0B,2CAA1B,uDAWdI,EAAW,SAAChB,GAAD,8CAAY,WAAOO,GAAP,eAAAC,EAAA,6DAChCD,EAASF,GAA0B,EAAML,IADT,SAGXS,IAASO,SAAShB,GAHP,OAG5BiB,EAH4B,OAKhCV,EAASF,GAA0B,EAAOL,IACV,GAA5BiB,EAASN,KAAKO,YACdX,EAASL,EAAeF,IAPI,2CAAZ,uDAWXmB,EAAS,SAACnB,GAAD,8CAAY,WAAOO,GAAP,eAAAC,EAAA,6DAC9BD,EAASF,GAA0B,EAAML,IADX,SAGTS,IAASU,OAAOnB,GAHP,OAG1BiB,EAH0B,OAK9BV,EAASF,GAA0B,EAAOL,IACV,GAA5BiB,EAASN,KAAKO,YACdX,EAASR,EAAaC,IAPI,2CAAZ,uDAYPoB,IAxKM,WAAmC,IAAlCC,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCACnD,OAAQA,EAAOrB,MACX,KAAKhB,EAED,OAAO,2BAEAoC,GAFP,IAKI5B,MAAO4B,EAAM5B,MAAM8B,KAAI,SAAAC,GAEnB,OAAIA,EAAEC,KAAOH,EAAOtB,OAIT,2BACAwB,GADP,IAEIE,UAAU,IAIXF,OAKnB,KAAKtC,EACD,OAAO,2BACAmC,GADP,IAEI5B,MAAO4B,EAAM5B,MAAM8B,KAAI,SAAAC,GACnB,OAAIA,EAAEC,KAAOH,EAAOtB,OACT,2BACAwB,GADP,IAEIE,UAAU,IAIXF,OAKnB,KAAKrC,EACD,OAAO,2BACAkC,GADP,IAGI5B,MAAM,YAAK6B,EAAO7B,SAI1B,KAAKL,EACD,OAAO,2BACAiC,GADP,IAEI1B,YAAa2B,EAAO3B,cAI5B,KAAKN,EACD,OAAO,2BACAgC,GADP,IAEIzB,gBAAiB0B,EAAOT,aAIhC,KAAKvB,EACD,OAAO,2BACA+B,GADP,IAEIxB,WAAYyB,EAAOzB,aAK3B,KAAKN,EACD,OAAO,2BACA8B,GADP,IAEIvB,oBAAqBwB,EAAOxB,oBAAP,sBAAiCuB,EAAMvB,qBAAvC,CAA4DwB,EAAOtB,SAAUqB,EAAMvB,oBAAoB6B,QAAO,SAAAF,GAAE,OAAIA,GAAMH,EAAOtB,YAI9J,QACI,OAAOqB,K,mBCpGnBtC,EAAOC,QAAU,CAAC,kBAAoB,2CAA2C,sBAAwB,+CAA+C,kBAAoB,2CAA2C,sBAAwB,+CAA+C,sBAAwB,+CAA+C,2BAA6B,oDAAoD,2BAA6B,oDAAoD,2BAA6B,oDAAoD,KAAO,8BAA8B,0BAA4B,mDAAmD,2BAA6B,oDAAoD,qBAAuB,8CAA8C,0BAA4B,mDAAmD,0BAA4B,mDAAmD,oBAAsB,6CAA6C,wBAA0B,iDAAiD,gBAAkB,2C,gHCEnpC4C,EAAU,SAACA,GAAD,OAAa,YAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAEvDC,EAAWF,EAAKG,SAAWH,EAAKI,MAEtC,OACI,yBAAKC,UAAWC,IAAEC,YAAc,KAAOL,EAAWI,IAAEF,MAAQ,MACxD,6BACG,kBAAC,EAAD,iBAAaL,EAAWE,KAE1BC,GAAY,kCAAQF,EAAKI,MAAb,S,iCCZV,QAA0B,0C,iCCAzC,sCAYeI,IARG,SAACP,GACf,OACI,yBAAKI,UAAWC,IAAEG,WACd,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,8BAAW,iC,mBCNrIxD,EAAOC,QAAU,CAAC,kBAAoB,uCAAuC,sBAAwB,2CAA2C,kBAAoB,uCAAuC,sBAAwB,2CAA2C,KAAO,0BAA0B,sBAAwB,2CAA2C,2BAA6B,gDAAgD,qBAAuB,0CAA0C,0BAA4B,+CAA+C,0BAA4B,+CAA+C,oBAAsB,2C,oBCA5qBD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,oBCA1BD,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,UAAY,+B,gCCD9B,qJAEMwD,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAINC,EAAU,CACnBC,GADmB,WAEf,OACIN,EAASO,IAAT,YAGRC,MANmB,SAMbC,EAAOC,EAAUC,GAA2B,IAAfC,EAAc,uDAAN,KACvC,OACIZ,EAASa,KAAT,aAA4B,CACxBJ,QACAC,WACAC,aACAC,aAIZE,OAhBmB,WAiBf,OACId,EAASe,OAAT,gBAKCC,EAAc,CACvBC,cADuB,WAEnB,OACIjB,EAASO,IAAT,8BAKCW,EAAa,CACtBC,WADsB,SACX3D,GACP,OACIwC,EAASO,IAAT,kBAAwB/C,KAGhC4D,UANsB,SAMZ5D,GACN,OACIwC,EAASO,IAAT,yBAA+B/C,KAGvC6D,aAXsB,SAWTC,GACT,OACItB,EAASuB,IAAT,iBAA+B,CAC3BD,OAAQA,KAIpBE,YAlBsB,SAkBVC,GACR,IAAMC,EAAW,IAAIC,SAGrB,OAFAD,EAASE,OAAO,QAASH,GAGrBzB,EAASuB,IAAT,gBAA8BG,EAAU,CACpCtB,QAAS,CACL,eAAgB,0BAKhCyB,YA9BsB,SA8BVC,GACR,OACI9B,EAASuB,IAAT,UAAwBO,KAKvB7D,EAAW,CACpBC,SADoB,WACsB,IAAjCf,EAAgC,uDAAlB,EAAGD,EAAe,uDAAJ,GACjC,OACI8C,EAASO,IAAT,qBAA2BpD,EAA3B,kBAAgDD,IAC/C6E,MAAK,SAAAtD,GACF,OAAOA,EAASN,SAI5BK,SAToB,SASXS,GACL,OACIe,EAASe,OAAT,iBAA0B9B,KAGlCN,OAdoB,SAcbM,GACH,OACIe,EAASa,KAAT,iBAAwB5B,O,mBC7FpC1C,EAAOC,QAAU,CAAC,aAAe,kCAAkC,kBAAoB,uCAAuC,YAAc,iCAAiC,0BAA4B,+CAA+C,wBAA0B,6CAA6C,eAAiB,oCAAoC,YAAc,iCAAiC,kBAAoB,uCAAuC,gBAAkB,qCAAqC,sBAAwB,6C,2LCW9hBwF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBH,MAAK,YAAkD,IAA/CI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,8ECARO,EAAW,WACXC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAuB,uBAEzB3F,EAAe,CACf4F,YAAa,CACT,QAAW,6EACX,SAAY,CACR,SAAY,eACZ,QAAW,KACX,GAAM,KACN,QAAW,KACX,UAAa,iBACb,QAAW,KACX,OAAU,aACV,SAAY,MAEhB,gBAAkB,EAClB,0BAA6B,8JAC7B,SAAY,gHACZ,OAAU,YACV,OAAU,CACN,MAAS,0FACT,MAAS,2FAEb,OAAU,uBAEdC,MAAO,CAAC,CACA5D,GAAI,EACJ6D,QAAS,mJAEb,CACI7D,GAAI,EACJ6D,QAAS,uKA2DRC,EAAiB,SAACH,GAC3B,MAAO,CACHnF,KAAMgF,EACNG,YAAaA,IAIRI,EAAgB,SAAC1B,GAC1B,MAAO,CACH7D,KAAMiF,EACNpB,OAAQA,IAaH2B,EAAiB,SAACzF,GAAD,8CAAY,WAAOO,GAAP,eAAAC,EAAA,sEAKfkD,IAAWC,WAAW3D,GALP,OAKhCiB,EALgC,OAOtCV,EAASgF,EAAetE,EAASN,OAPK,2CAAZ,uDAiDf+E,EA9HQ,WAAmC,IAAlCrE,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCACrD,OAAQA,EAAOrB,MAEX,KAAK+E,EACD,IAAIW,EAAU,CACVlE,GAAI,EACJ6D,QAAShE,EAAOsE,aAGpB,OAAO,2BACAvE,GADP,IAEIgE,MAAM,GAAD,mBAAMhE,EAAMgE,OAAZ,CAAmBM,MAGhC,KAAKV,EACD,OAAO,2BACA5D,GADP,IAEI+D,YAAa9D,EAAO8D,cAI5B,KAAKF,EACD,OAAO,2BACA7D,GADP,IAEI+D,YAAY,2BACL/D,EAAM+D,aADF,IAEPtB,OAAQxC,EAAOwC,WAK3B,KAAKqB,EACD,OAAO,2BACA9D,GADP,IAEI+D,YAAY,2BACL/D,EAAM+D,aADF,IAEPS,OAAQvE,EAAOuE,WAK3B,QACI,OAAOxE,I,iBCpFbyE,EAAsB,sBAExBtG,EAAe,CACfuG,aAAa,GAiCFC,EA7BI,WAAmC,IAAlC3E,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCACjD,OAAQA,EAAOrB,MACX,KAAK6F,EACD,OAAO,2BACAzE,GADP,IAEI0E,aAAa,IAGrB,QACI,OAAO1E,I,kBCXf4E,EAAWC,YAAgB,CAC3BC,YAAaT,EACbU,YAAaC,IACbC,UAAWlF,IACXmF,KAAMC,IACNC,KAAMC,IACNC,IAAKX,IAIHY,EAAmBC,OAAOC,sCAAwCC,IAC3DC,EAAQC,YAAYhB,EAAUW,EAAiBM,YAAgBC,O,uFCa7DC,EA7BA,SAACrF,GAEZ,OADEsF,QAAQC,IAAIvF,GAEV,4BAAQI,UAAWC,IAAEmF,QACjB,yBAAKpF,UAAS,kBAAaC,IAAEoF,UACzB,yBAAKrF,UAAWC,IAAEqF,YAAaC,IAAI,iFAEnC,yBAAKvF,UAAWC,IAAEY,OACbjB,EAAM4F,OAEH,6BACI,uBAAGxF,UAAWC,IAAEwF,WACX7F,EAAMiB,OAEX,4BAAQb,UAAWC,IAAEyF,aAAcC,QAAS/F,EAAMuB,QAAlD,mCAKJ,kBAAC,IAAD,CAASnB,UAAWC,IAAE2F,UAAWC,GAAI,UAArC,4FChBlBC,E,uKAGF,OACE,kBAAC,EAAWC,KAAKnG,W,GAJOoG,IAAMC,WAkBrBC,eAPO,SAAChH,GACrB,MAAO,CACLsG,OAAQtG,EAAMkF,KAAKoB,OACnB3E,MAAO3B,EAAMkF,KAAKvD,SAIkB,CAAEM,YAA3B+E,CAAqCJ,G,iBC8CrCK,EAlEA,WACb,OACE,2BAAOnG,UAAWC,IAAEmG,QAClB,6BACE,wBAAIpG,UAAWC,IAAEoG,eACf,wBAAIrG,UAAWC,IAAEqG,cACf,kBAAC,IAAD,CAAST,GAAG,WAAWU,gBAAiBtG,IAAEuG,gBAA1C,wEAIF,wBAAIxG,UAAWC,IAAEqG,cACf,kBAAC,IAAD,CAAST,GAAG,WAAWU,gBAAiBtG,IAAEuG,gBAA1C,6EAIF,wBAAIxG,UAAWC,IAAEqG,cACf,kBAAC,IAAD,CAAST,GAAG,UAAUU,gBAAiBtG,IAAEuG,gBAAzC,2FAIF,wBAAIxG,UAAWC,IAAEqG,cACf,kBAAC,IAAD,CAAST,GAAG,UAAUU,gBAAiBtG,IAAEuG,gBAAzC,qDAIF,wBAAIxG,UAAWC,IAAEqG,cACf,kBAAC,IAAD,CAAST,GAAG,SAASU,gBAAiBtG,IAAEuG,gBAAxC,yCAIF,wBAAIxG,UAAWC,IAAEqG,cACf,kBAAC,IAAD,CAAST,GAAG,SAASU,gBAAiBtG,IAAEuG,gBAAxC,wEAIF,wBAAIxG,UAAS,WAAMC,IAAEwG,mBACnB,kBAAC,IAAD,CAASZ,GAAG,YAAYU,gBAAiBtG,IAAEuG,gBAA3C,8EAMJ,uBAAGxG,UAAWC,IAAEyG,iBACd,kBAAC,IAAD,CAASb,GAAG,WAAW7F,UAAWC,IAAE0G,qBAAsBJ,gBAAiBtG,IAAEuG,gBAA7E,kCAGA,wBAAIxG,UAAWC,IAAE2G,gBACf,wBAAI5G,UAAWC,IAAE4G,eACf,yBAAKtB,IAAI,wGAAwGuB,IAAI,KACrH,0EAEF,wBAAI9G,UAAWC,IAAE4G,eACf,yBAAKtB,IAAI,wGAAwGuB,IAAI,KACrH,0EAEF,wBAAI9G,UAAWC,IAAE4G,eACf,yBAAKtB,IAAI,wGAAwGuB,IAAI,KACrH,+E,wGCvDRC,GAAcC,aAAiB,IAC/BC,GAAWxH,aAAQ,YAgBnByH,GAAsBC,aAAU,CAClC7C,KAAM,qBADkB6C,EAdL,SAACvH,GACpB,OACI,0BAAMwH,SAAUxH,EAAMyH,cAClB,6BACI,2BAAOC,QAAQ,YACf,kBAACC,GAAA,EAAD,CAAOvH,UAAWC,KAAEuH,eAAgBC,UAAWR,GAAUS,KAAK,UAC1DC,YAAY,4DAAeC,SAAU,CAACC,KAAUd,OAExD,4BAAQ/G,UAAS,iBAAYC,KAAE6H,mBAA/B,gFA8BGC,GAnBI,SAACnI,GAWhB,OACI,yBAAKI,UAAWC,KAAE+H,UACd,uBAAGhI,UAAWC,KAAEgI,iBAAhB,2DACA,kBAACf,GAAD,CAAqBE,SAPX,SAACrF,GACfnC,EAAMsI,QAAQnG,EAASyB,c,qBCzBd2E,GARJ,SAACvI,GACV,OACE,wBAAII,UAAWC,KAAEiB,MACdtB,EAAMwI,U,qBCQAC,GAXD,SAACzI,GAEb,IAAI0I,EAAgB1I,EAAMsD,MAAM9D,KAAI,SAAAmJ,GAAC,OAAI,kBAAC,GAAD,CAAMH,QAASG,EAAEpF,QAASqF,IAAKD,EAAEjJ,GAAIA,GAAIiJ,EAAEjJ,QAEpF,OACE,wBAAIU,UAAWC,KAAEiD,OACdoF,I,2DCuCQG,GA9CgBzC,IAAM0C,MAAK,SAAC9I,GAAW,IAAD,EAEnB+I,oBAAS,GAFU,oBAE5CC,EAF4C,KAElCC,EAFkC,OAGvBF,mBAAS/I,EAAM+B,QAHQ,oBAG5CA,EAH4C,KAGpCmH,EAHoC,KAKjD5D,QAAQC,IAAI,0FAAsBxD,GAElCoH,qBAAU,WACN7D,QAAQC,IAAI,6BAES6D,IAAjBpJ,EAAM+B,QACNmH,EAAUlJ,EAAM+B,UAErB,CAAC/B,EAAM+B,SAmBV,OADAuD,QAAQC,IAAI,+EAAqBvF,EAAM+B,QAEnC,yBAAK3B,UAAWC,KAAEgJ,gBACXL,GACC,uBAAG5I,UAAWC,KAAEiJ,2BAA4BvD,QAnB/B,WACjB/F,EAAMuJ,SACNN,GAAY,KAiBgEjJ,EAAM+B,QAEhFiH,GACE,2BAAOQ,SAXI,SAACC,GACpBP,EAAUO,EAAEC,cAAcC,QAUeC,UAAU,KAAKC,WAAW,EAAMC,OAhBlD,WACvBb,GAAY,GACZjJ,EAAM+J,iBAAiBhI,IAeX3B,UAAWC,KAAE2J,qBAAsBL,MAAO5H,Q,oBCexDkI,GAAU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aAC7B,OACI,yBAAK/J,UAAWC,KAAE+J,sBACd,0BAAMhK,UAAWC,KAAEgK,2BAA4BH,EAA/C,SACA,0BAAM9J,UAAWC,KAAEiK,2BACf,uBAAGC,OAAO,SAASC,KAAML,GAAeA,MAMzCM,GA/DK,SAAC,GAA6E,IAA3EpH,EAA0E,EAA1EA,YAAakG,EAA6D,EAA7DA,QAASmB,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,cAAeZ,EAAuB,EAAvBA,iBAEtE,OACI,yBAAK3J,UAAWC,KAAEuK,mBACd,yBAAKxK,UAAWC,KAAEwK,uBACd,uBAAGzK,UAAWC,KAAEyK,mBAAhB,IAAqCzH,EAAY0H,SAAjD,KAEA,kBAAC,GAAD,CAAwB3K,UAAWC,KAAE2K,sBAAuBjJ,OAAQsB,EAAYtB,OAC5E4I,cAAeA,EAAeZ,iBAAkBA,EAAkBR,QAASA,IAE/E,uBAAGnJ,UAAWC,KAAE2K,uBACZ,0BAAM5K,UAAWC,KAAE4K,MAAnB,4EACC5H,EAAY6H,eAAiB,qBAAQ,gBAG1C,uBAAG9K,UAAWC,KAAE2K,uBACZ,uBAAG5K,UAAWC,KAAE4K,MAAhB,kEACC5H,EAAY8H,2BAGjB,uBAAG/K,UAAWC,KAAE2K,uBACZ,uBAAG5K,UAAWC,KAAE4K,MAAhB,gDACC5H,EAAY+H,SAGhB7B,GAEG,6BACI,4BAAQnJ,UAAWC,KAAEgL,oBAAqBtF,QAAS2E,GAAnD,6GAOZ,uBAAGtK,UAAWC,KAAEiL,uBACZ,uBAAGlL,UAAWC,KAAEkL,4BAAhB,qDACCC,OAAOC,KAAKpI,EAAYqI,UACpBlM,KAAI,SAAAoJ,GACD,OACI,kBAAC,GAAD,CAASsB,aAActB,EACnBuB,aAAc9G,EAAYqI,SAAS9C,GACnCA,IAAKA,U,oBCwBtB+C,GAHcpE,aAAU,CAAE7C,KAAK,gBAAjB6C,EA9DL,SAAC,GAAoF,IAAlFE,EAAiF,EAAjFA,aAAcpE,EAAmE,EAAnEA,YAAalD,EAAsD,EAAtDA,MAAOoJ,EAA+C,EAA/CA,QAASoB,EAAsC,EAAtCA,cAAeZ,EAAuB,EAAvBA,iBAEjF,OACI,0BAAM3J,UAAWC,KAAEuL,kBAAmBpE,SAAUC,GAC5C,yBAAKrH,UAAWC,KAAEwL,uBACd,2BACI,kBAAClE,GAAA,EAAD,CAAOvH,UAAWC,KAAEyK,kBAAmBhD,KAAK,WAAWC,YAAY,yCAAWF,UAAU,WAG5F,kBAAC,GAAD,CAAwBzH,UAAWC,KAAE2K,sBAAuBjJ,OAAQsB,EAAYtB,OAC5E4I,cAAeA,EAAeZ,iBAAkBA,EAAkBR,QAASA,IAE/E,uBAAGnJ,UAAWC,KAAEyL,uBACZ,0BAAM1L,UAAWC,KAAE4K,MAAnB,4EACA,kBAACtD,GAAA,EAAD,CAAOvH,UAAWC,KAAE0L,2BAChBjE,KAAK,iBAAiBD,UAAU,QAAQ3J,KAAK,WAAWwB,GAAG,mBAC/D,2BAAOU,UAAWC,KAAE2L,2BAA4BC,IAAI,oBAGxD,uBAAG7L,UAAWC,KAAE2K,uBACZ,uBAAG5K,UAAWC,KAAE4K,MAAhB,kEACA,kBAACtD,GAAA,EAAD,CAAOvH,UAAWC,KAAE6L,2BAChBpE,KAAK,4BAA4BD,UAAU,WAGnD,uBAAGzH,UAAWC,KAAE2K,uBACZ,uBAAG5K,UAAWC,KAAE4K,MAAhB,gDACA,kBAACtD,GAAA,EAAD,CAAOvH,UAAWC,KAAE6L,2BAChBpE,KAAK,UAAUD,UAAU,WAGjC,6BACI,4BAAQ3J,KAAK,SAASkC,UAAS,UAAKC,KAAEgL,oBAAP,YAA8BhL,KAAE8L,0BAA/D,oFAKJ,6BACKhM,GACG,yBAAKC,UAAWC,KAAE+L,iBAAkBjM,KAKhD,uBAAGC,UAAWC,KAAEgM,2BACZ,uBAAGjM,UAAWC,KAAEkL,4BAAhB,qDACCC,OAAOC,KAAKpI,EAAYqI,UACpBlM,KAAI,SAAAoJ,GACD,OACI,yBAAKxI,UAAWC,KAAE+J,sBACd,0BAAMhK,UAAWC,KAAEgK,2BAA4BzB,EAA/C,SACA,kBAACjB,GAAA,EAAD,CAAOvH,UAAWC,KAAEiK,0BAA2BxC,KAAM,YAAcc,EAC/Db,YAAaa,EAAKf,UAAU,QAAQe,IAAKA,aCoB9D0D,GAvEKlG,IAAM0C,MAAK,SAAC9I,GAAW,IAAD,EAER+I,oBAAS,GAFD,oBAEjCC,EAFiC,KAEvBC,EAFuB,KAuBtC,OAHA3D,QAAQC,IAAI,uEACZD,QAAQC,IAAIvF,EAAMqD,aAGd,6BACI,yBAAKjD,UAAWC,KAAEkM,cACd,yBAAKnM,UAAWC,KAAEmM,kBACd7G,IAAI,+DAEZ,yBAAKvF,UAAWC,KAAEgD,aACd,yBAAKjD,UAAWC,KAAEoM,2BACd,yBAAKrM,UAAWC,KAAEqM,wBACd/G,IAAK3F,EAAMqD,YAAYS,OAAO6I,OAASC,OAC3C,6BACK5M,EAAMuJ,SAEH,yBAAKnJ,UAAWC,KAAEwM,gBACd,2BAAOzM,UAAWC,KAAEyM,YAAatD,SAjCjC,SAACC,GACrBA,EAAEc,OAAOwC,MAAMC,QACfhN,EAAMiC,YAAYwH,EAAEc,OAAOwC,MAAM,KA+BmD7O,KAAK,OAAO4J,KAAK,OAAOpI,GAAG,gBAC3F,2BAAOU,UAAWC,KAAE4M,kBAAmBhB,IAAI,eACvC,0BAAM7L,UAAWC,KAAE6M,kBACnB,0BAAM9M,UAAWC,KAAE8M,uBAAnB,2EAOnBnE,EAEG,kBAAC,GAAD,iBACQhJ,EADR,CAEI2K,cAAe3K,EAAM2K,cACrBZ,iBAAkB/J,EAAM+J,iBACxBvC,SA3CH,SAACrF,GACdnC,EAAMsC,YAAYH,GAAUK,MACxB,WACIyG,GAAY,GACZ3D,QAAQC,IAAI,4FAGpBD,QAAQC,IAAIpD,IAqCIiL,cAAepN,EAAMqD,eAGzB,kBAAC,GAAD,iBACQrD,EADR,CAEI2K,cAAe3K,EAAM2K,cACrBZ,iBAAkB/J,EAAM+J,iBACxBW,aAAc,WAAQzB,GAAY,YC7C3CoE,GAfC,SAACrN,GACf,OACE,6BAASI,UAAWC,KAAEkC,SACpB,kBAAC,GAAD,CAAac,YAAarD,EAAMqD,YACnBsH,cAAe3K,EAAM2K,cACrBZ,iBAAkB/J,EAAM+J,iBACxBR,QAASvJ,EAAMuJ,QACftH,YAAajC,EAAMiC,YACnBK,YAAatC,EAAMsC,cAChC,kBAAC,GAAD,CAAYgG,QAAStI,EAAMsI,QAASzE,YAAa7D,EAAM6D,cACvD,kBAAC,GAAD,CAAOP,MAAOtD,EAAMsD,U,SCPpBgK,G,+KAGF,IAAIrP,EAASkI,KAAKnG,MAAMuN,MAAMC,OAAOvP,OACrCqH,QAAQC,IAAItH,GACPA,IACHA,EAASkI,KAAKnG,MAAMyN,kBAEtBnI,QAAQC,IAAItH,GAEZkI,KAAKnG,MAAM0D,eAAezF,GAC1BkI,KAAKnG,MAAM2K,cAAc1M,K,0CAIzBkI,KAAKuH,mB,yCAGYC,GACbxH,KAAKnG,MAAMuN,MAAMC,OAAOvP,QAAU0P,EAAUJ,MAAMC,OAAOvP,QAC3DkI,KAAKuH,mB,+BAKP,OACE,kBAAC,GAAD,iBAAavH,KAAKnG,MAAlB,CAAyBuJ,SAAUpD,KAAKnG,MAAMuN,MAAMC,OAAOvP,c,GA1BlCmI,IAAMC,WA4CtBrB,eACbsB,aAZoB,SAAChH,GACrB,MAAO,CACL+D,YAAa/D,EAAM8E,YAAYf,YAC/BC,MAAOhE,EAAM8E,YAAYd,MACzBO,YAAavE,EAAM8E,YAAYP,YAC/B4J,iBAAkBnO,EAAMkF,KAAKvG,OAC7B2H,OAAQtG,EAAMkF,KAAKoB,UAOnB,CACE0C,QdmCiB,SAACzE,GACpB,MAAO,CACH3F,KAAM+E,EACNY,YAAaA,IcrCfL,iBACAE,iBACAiH,cdwEuB,SAAC1M,GAAD,8CAAY,WAAOO,GAAP,eAAAC,EAAA,sEACdkD,IAAWE,UAAU5D,GADP,OAC/BiB,EAD+B,OAGrCV,EAASiF,EAAcvE,EAASN,OAHK,2CAAZ,uDcvEvBmL,iBd6E0B,SAAChI,GAAD,8CAAY,WAAOvD,GAAP,SAAAC,EAAA,sEACjBkD,IAAWG,aAAaC,GADP,OAGP,IAHO,OAG3BnD,KAAKO,YACdX,EAASiF,EAAc1B,IAJa,2CAAZ,uDc5E1BE,YdoFqB,SAAC2L,GAAD,8CAAU,WAAOpP,GAAP,eAAAC,EAAA,sEACVkD,IAAWM,YAAY2L,GADb,OAGA,KAF3B1O,EAD2B,QAGpBN,KAAKO,YACdX,GArC2BsF,EAqCC5E,EAASN,KAAKA,KAAKkF,OApC5C,CACH5F,KAAMkF,EACNU,YA8B6B,iCAjCH,IAACA,IAiCE,OAAV,uDcnFrBxB,Yd4FqB,SAACC,GAAD,8CAAa,WAAO/D,EAAUqP,GAAjB,iBAAApP,EAAA,sEACbkD,IAAWW,YAAYC,GADV,UAC9BrD,EAD8B,OAE9BjB,EAAS4P,IAAWrJ,KAAKvG,OAC/BqH,QAAQC,IAAIrG,GACZoG,QAAQC,IAAIrG,EAASN,KAAKkP,SAAS,IAEF,IAA7B5O,EAASN,KAAKO,WANkB,iBAOhCX,EAASkF,EAAezF,IAPQ,+BAShCO,EAASuP,YAAW,eAAgB,CAACC,OAAO9O,EAASN,KAAKkP,SAAS,MATnC,kBAUzBG,QAAQC,OAAOhP,EAASN,KAAKkP,SAAS,KAVb,4CAAb,2DczFzBK,IACAC,KAbapJ,CAcZsI,ICvDGe,GAAmBjI,IAAMkI,MAAK,kBAAM,iCACpCC,GAAiBnI,IAAMkI,MAAK,kBAAM,iCAClCE,GAAQpI,IAAMkI,MAAK,kBAAM,iCAoBhBG,GAjBC,SAACzO,GACf,OACE,yBAAKI,UAAWC,IAAEqO,SAEhB,kBAAC,WAAD,CAAUC,SAAU,6GAClB,kBAAC,IAAD,CAAOC,KAAK,SAASC,OAAQ,kBAAM,kBAACL,GAAD,SACnC,kBAAC,IAAD,CAAOI,KAAK,oBAAoBC,OAAQ,kBAAM,kBAAC,GAAD,SAC9C,kBAAC,IAAD,CAAOD,KAAK,WAAWC,OAAQ,kBAAM,kBAACR,GAAD,SACrC,kBAAC,IAAD,CAAOO,KAAK,SAASC,OAAQ,kBAAM,kBAACN,GAAD,Y,qBCL5BO,GATF,SAAC9O,GACZ,OACE,yBAAKI,UAAS,UAAKC,KAAE0O,KAAP,aACZ,kBAAC,EAAD,MACA,kBAAC,GAAD,Q,UCCAC,G,kLAGF7I,KAAKnG,MAAMiP,kB,+BAIX,OAAK9I,KAAKnG,MAAMgE,YAKd,yBAAK5D,UAAU,OACf,kBAAC,EAAD,MACA,kBAAC,GAAD,OANO,kBAACG,GAAA,EAAD,U,GARK8F,aAwBHrB,eACbmJ,IACA7H,aANsB,SAAChH,GAAD,MAAY,CAClC0E,YAAa1E,EAAMsF,IAAIZ,eAKG,CAACiL,chBdA,kBAAM,SAACzQ,GAChC,IAAI0Q,EAAU1Q,EAAS2Q,eAEvBlB,QAAQmB,IAAI,CAACF,IACR1M,MAAK,WACFhE,EAV6B,CACrCN,KAAM6F,WgBgBKiB,CAGXgK,IC3BAK,I,OAAmB,WACnBC,IAAST,OACL,kBAAC,IAAMU,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUtK,MAAOA,GACf,kBAAC,GAAD,SAINuK,SAASC,eAAe,SAM1BhN,MAIN4M,KAIApK,EAAMyK,WAAW,WACfL,S,mBCzCFrS,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,YAAc,4BAA4B,MAAQ,sBAAsB,UAAY,0BAA0B,aAAe,6BAA6B,UAAY,4B,2NCOpP0S,EAAqB,qBACrBC,EAA0B,0BAE5BnS,EAAe,CACfQ,OAAQ,KACRiD,MAAO,KACPD,MAAO,KACP2E,QAAQ,EACRiK,WAAY,MAkBHC,EAAkB,SAAC7R,EAAQiD,EAAOD,GAAhB,IAAuB2E,IAAvB,yDAAsCiK,EAAtC,uDAAmD,KAAnD,MAA6D,CACxF3R,KAAMyR,EACNI,QAAS,CACL9R,SACAiD,QACAD,QACA2E,SACAiK,gBAIKG,EAAuB,SAACH,GAAD,MAAiB,CACjD3R,KAAM0R,EACNG,QAAS,CACLF,gBAKKV,EAAkB,yDAAM,WAAO3Q,GAAP,uBAAAC,EAAA,sEACVqC,IAAQC,KADE,OAGA,KAF3B7B,EAD2B,QAGpBN,KAAKO,aAAmB,EAK7BD,EAASN,KAAKA,KAHdc,EAF4B,EAE5BA,GACAwB,EAH4B,EAG5BA,MACAD,EAJ4B,EAI5BA,MAEJzC,EAASsR,EAAgBpQ,EAAIwB,EAAOD,KATP,2CAAN,uDAalBA,EAAQ,SAACC,EAAOC,EAAUC,EAAYC,GAA9B,8CAA0C,WAAO7C,GAAP,iBAAAC,EAAA,sEACpCqC,IAAQG,MAAMC,EAAOC,EAAUC,EAAYC,GADP,OAG1B,KAF3BnC,EADqD,QAG9CN,KAAKO,YACdX,EAAS2Q,KACTa,EAAqB,QAEY,KAA7B9Q,EAASN,KAAKO,YACdX,EAASkD,KAGT6B,EAAUrE,EAASN,KAAKkP,SAASd,OAAS,EAC1C9N,EAASN,KAAKkP,SAAS,GACvB,aAEJtP,EAASuP,YAAW,QAAS,CACzBC,OAAQzK,KAGZ+B,QAAQC,IAAIrG,EAASN,KAAKO,aAnB6B,2CAA1C,uDAuBRoC,EAAS,yDAAM,WAAO/C,GAAP,SAAAC,EAAA,sEACDqC,IAAQS,SADP,OAGS,IAHT,OAGX3C,KAAKO,YACdX,EAASsR,EAAgB,KAAM,KAAM,MAAM,IAJvB,2CAAN,uDAQTpO,EAAgB,yDAAM,WAAOlD,GAAP,iBAAAC,EAAA,sEACRgD,IAAYC,gBADJ,OACzBxC,EADyB,OAEzB2Q,EAAa3Q,EAASN,KAAKqR,IAEjC3K,QAAQC,IAAI,0FAAsBsK,GAElCrR,EAASwR,EAAqBH,IANC,2CAAN,uDAUdpL,IAxFK,WAAmC,IAAlCnF,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCAClD,OAAQA,EAAOrB,MACX,KAAKyR,EACL,KAAKC,EACD,OAAO,2BACAtQ,GACAC,EAAOwQ,SAGlB,QACI,OAAOzQ,K,mBC5BnBtC,EAAOC,QAAU,CAAC,SAAW,0BAA0B,gBAAkB,iCAAiC,eAAiB,gCAAgC,iBAAmB,oC,mBCA9KD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,2BAA6B,kDAAkD,qBAAuB,8C,gCCD7K,sGAAO,IAAMgL,EAAW,SAAC0B,GACrB,IAAIA,EACJ,MAAO,qBAGEuG,EAAmB,SAACC,GAAD,OAAe,SAACxG,GAC5C,GAAIA,EAAMqD,OAASmD,EACf,MAAM,iBAAN,OAAwBA,EAAxB,cAKK/I,EAAmB,SAACwC,GAAD,OAAe,SAACD,GAC5C,GAAIA,EAAMqD,OAASpD,EACf,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCbR5M,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,gBAAkB,wC,sICIpHmT,EAA6B,SAAC9Q,GAAD,MAAY,CACzCsG,OAAQtG,EAAMkF,KAAKoB,SAGVwI,EAAmB,SAAC/H,GAAe,IACtCgK,EADqC,uKAGnC,OAAIlK,KAAKnG,MAAM4F,OAER,kBAACS,EAAcF,KAAKnG,OAFG,kBAAC,IAAD,CAAUiG,GAAG,cAHR,GACXG,IAAMC,WAUtC,OAFqCC,YAAS8J,EAAT9J,CAAsC+J,K,qFClBzEC,EAAc,cAEhB7S,EAAe,CACf8S,QAAS,CAAC,CACF7Q,GAAI,EACJoI,KAAM,8CAEV,CACIpI,GAAI,EACJoI,KAAM,8CAEV,CACIpI,GAAI,EACJoI,KAAM,kCAEV,CACIpI,GAAI,EACJoI,KAAM,8CAEV,CACIpI,GAAI,EACJoI,KAAM,kCAEV,CACIpI,GAAI,EACJoI,KAAM,8CAEV,CACIpI,GAAI,EACJoI,KAAM,kCAEV,CACIpI,GAAI,EACJoI,KAAM,8CAEV,CACIpI,GAAI,EACJoI,KAAM,kCAEV,CACIpI,GAAI,EACJoI,KAAM,8CAEV,CACIpI,GAAI,EACJoI,KAAM,kCAEV,CACIpI,GAAI,EACJoI,KAAM,8CAEV,CACIpI,GAAI,EACJoI,KAAM,kCAEV,CACIpI,GAAI,EACJoI,KAAM,8CAEV,CACIpI,GAAI,EACJoI,KAAM,kCAEV,CACIpI,GAAI,EACJoI,KAAM,8CAEV,CACIpI,GAAI,EACJoI,KAAM,kCAEV,CACIpI,GAAI,EACJoI,KAAM,8CAEV,CACIpI,GAAI,EACJoI,KAAM,mCAGdgG,SAAU,CAAC,CACHpO,GAAI,EACJoI,KAAM,6CACN0I,aAAc,6IAElB,CACI9Q,GAAI,EACJoI,KAAM,SACN0I,aAAc,uSAElB,CACI9Q,GAAI,EACJoI,KAAM,6CACN0I,aAAc,wMAElB,CACI9Q,GAAI,EACJoI,KAAM,SACN0I,aAAc,kBA0BbC,EAAa,SAACC,GAAD,MAAqB,CAC3CxS,KAAMoS,EACNI,eAAgBA,IAGLpM,IA1BQ,WAAmC,IAAlChF,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCACrD,OAAQA,EAAOrB,MAEX,KAAKoS,EACD,IAAIK,EAAa,CACbjR,GAAI,EACJoI,KAAM,SACN0I,aAAcjR,EAAOmR,gBAGzB,OAAO,2BACApR,GADP,IAEIwO,SAAS,GAAD,mBAAMxO,EAAMwO,UAAZ,CAAsB6C,MAGtC,QACI,OAAOrR,M","file":"static/js/main.578aa9c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1OCxr\",\"navbar__items\":\"Navbar_navbar__items__1BDow\",\"navbar__item\":\"Navbar_navbar__item__1IK2I\",\"navbar__active\":\"Navbar_navbar__active__2uGOW\",\"navbar__settings\":\"Navbar_navbar__settings__3Wk5o\",\"navbar__friends\":\"Navbar_navbar__friends__TL258\",\"navbar__friendsTitle\":\"Navbar_navbar__friendsTitle__2tJ5n\",\"friends__items\":\"Navbar_friends__items__kd5UW\",\"friends__item\":\"Navbar_friends__item__36Vv8\"};","import {\r\n    usersAPI\r\n} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    currentPage: 1,\r\n    totalUsersCount: 0,\r\n    isFetching: false, //preloader\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            //возвращаем объект (новый state)\r\n            return {\r\n                //cкопировали state\r\n                ...state,\r\n                //в него пушим массив users \r\n                //(перезаписываем с изменениями исходный)\r\n                users: state.users.map(u => {\r\n                    //если id пользователя совпадает\r\n                    if (u.id === action.userId) {\r\n                        //копируем объект пользователя поверхностно\r\n                        //внутри него меняем флаг подписки\r\n                        //и возвращаем в новый массив\r\n                        return {\r\n                            ...u,\r\n                            followed: true\r\n                        }\r\n                    }\r\n                    //иначе возвращаем исходный элемент в новый массив users\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {\r\n                            ...u,\r\n                            followed: false\r\n                        }\r\n                    }\r\n\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                //добавляем новых юзеров из экшена (склеиваем два массива)\r\n                users: [...action.users]\r\n            }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n\r\n\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//AC\r\nexport const followSucces = (userId) => ({\r\n    type: FOLLOW,\r\n    userId\r\n});\r\n\r\nexport const unfollowSucces = (userId) => ({\r\n    type: UNFOLLOW,\r\n    userId\r\n});\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n});\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n});\r\n\r\nexport const setTotalUsersCount = (totalCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalCount\r\n});\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n});\r\n\r\nexport const toggleFollowingInProgress = (followingInProgress, userId) => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n    followingInProgress,\r\n    userId\r\n});\r\n\r\n\r\n//TC\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    //side-effect\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n};\r\n\r\nexport const updateUsers = (pageNumber, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(pageNumber));\r\n\r\n    //side-effect\r\n    let data = await usersAPI.getUsers(pageNumber, pageSize);\r\n\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    //side-effect\r\n    let response = await usersAPI.unfollow(userId);\r\n\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(unfollowSucces(userId))\r\n    }\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    //side-effect\r\n    let response = await usersAPI.follow(userId);\r\n\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(followSucces(userId))\r\n    }\r\n};\r\n\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo__Form\":\"ProfileDataForm_profileInfo__Form__j1yhs\",\"profileInfo__FormLeft\":\"ProfileDataForm_profileInfo__FormLeft__DEw8P\",\"profileInfo__Name\":\"ProfileDataForm_profileInfo__Name__2DQ7w\",\"profileInfo__Parametr\":\"ProfileDataForm_profileInfo__Parametr__ra9NW\",\"profileInfo__Checkbox\":\"ProfileDataForm_profileInfo__Checkbox__2E2WL\",\"profileInfo__CheckboxLabel\":\"ProfileDataForm_profileInfo__CheckboxLabel__WwIcz\",\"profileInfo__CheckboxInput\":\"ProfileDataForm_profileInfo__CheckboxInput__1Vz-F\",\"profileInfo__ParametrInput\":\"ProfileDataForm_profileInfo__ParametrInput__2eFks\",\"bold\":\"ProfileDataForm_bold__3VedU\",\"profileInfo__FormContacts\":\"ProfileDataForm_profileInfo__FormContacts__3ot3S\",\"profileInfo__ContactsTitle\":\"ProfileDataForm_profileInfo__ContactsTitle__UhJuq\",\"profileInfo__Contact\":\"ProfileDataForm_profileInfo__Contact__36MCj\",\"profileInfo__ContactTitle\":\"ProfileDataForm_profileInfo__ContactTitle__1SU6H\",\"profileInfo__ContactValue\":\"ProfileDataForm_profileInfo__ContactValue__2Fqz5\",\"profileInfo__button\":\"ProfileDataForm_profileInfo__button__hBBNS\",\"profileInfo__buttonSave\":\"ProfileDataForm_profileInfo__buttonSave__tJ4jX\",\"formCommonError\":\"ProfileDataForm_formCommonError__2r_5X\"};","import React from \"react\";\r\nimport s from \"./FormControls.module.scss\";\r\n\r\nexport const Element = (Element) => ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \" \")}>\r\n            <div>\r\n               <Element {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/user_default.883504fe.png\";","import React from 'react';\r\n\r\nimport s from './Preloader.module.scss';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo__Text\":\"ProfileData_profileInfo__Text__p2b6P\",\"profileInfo__TextLeft\":\"ProfileData_profileInfo__TextLeft__3_Kn9\",\"profileInfo__Name\":\"ProfileData_profileInfo__Name__313WZ\",\"profileInfo__Parametr\":\"ProfileData_profileInfo__Parametr__1SJjM\",\"bold\":\"ProfileData_bold__2oLR2\",\"profileInfo__Contacts\":\"ProfileData_profileInfo__Contacts__1rf8-\",\"profileInfo__ContactsTitle\":\"ProfileData_profileInfo__ContactsTitle__3aLZA\",\"profileInfo__Contact\":\"ProfileData_profileInfo__Contact__Mhz2q\",\"profileInfo__ContactTitle\":\"ProfileData_profileInfo__ContactTitle__ihaEQ\",\"profileInfo__ContactValue\":\"ProfileData_profileInfo__ContactValue__a_xcH\",\"profileInfo__button\":\"ProfileData_profileInfo__button__3YJNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__aYX3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2eaG4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__7Jsss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__STBF5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__JnV9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__IiANM\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"18021664-8191-4731-8d37-bfc58504d56d\"\r\n    }\r\n});\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return (\r\n            instance.get(`auth/me`)\r\n        )\r\n    },\r\n    login(email, password, rememberMe, captcha=null) {\r\n        return (\r\n            instance.post(`auth/login`, {\r\n                email,\r\n                password,\r\n                rememberMe,\r\n                captcha\r\n            })\r\n        )\r\n    },\r\n    logout() {\r\n        return (\r\n            instance.delete(`auth/login`)\r\n        )\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl () {\r\n        return (\r\n            instance.get(`security/get-captcha-url`)\r\n        )\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return (\r\n            instance.get(`profile/${userId}`)\r\n        )\r\n    },\r\n    getStatus(userId) {\r\n        return (\r\n            instance.get(`profile/status/${userId}`)\r\n        )\r\n    },\r\n    updateStatus(status) {\r\n        return (\r\n            instance.put(`profile/status`, {\r\n                status: status\r\n            })\r\n        )\r\n    },\r\n    updatePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return (\r\n            instance.put(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n        )\r\n    },\r\n    saveProfile(profile) {\r\n        return (\r\n            instance.put(`profile`, profile)\r\n        )\r\n    }\r\n};\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return (\r\n            instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n        )\r\n    },\r\n    unfollow(id) {\r\n        return (\r\n            instance.delete(`follow/${id}`)\r\n        )\r\n    },\r\n    follow(id) {\r\n        return (\r\n            instance.post(`follow/${id}`)\r\n        )\r\n    }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileCover\":\"ProfileInfo_profileCover__3-yGo\",\"profileCover__img\":\"ProfileInfo_profileCover__img__1NA-w\",\"profileInfo\":\"ProfileInfo_profileInfo__3weOg\",\"profileInfo__PhotoWrapper\":\"ProfileInfo_profileInfo__PhotoWrapper__1K1AW\",\"profileInfo__PhotoImage\":\"ProfileInfo_profileInfo__PhotoImage__33HFj\",\"input__wrapper\":\"ProfileInfo_input__wrapper__2FprL\",\"input__file\":\"ProfileInfo_input__file__1uKKg\",\"input__fileButton\":\"ProfileInfo_input__fileButton__1N3_1\",\"input__fileIcon\":\"ProfileInfo_input__fileIcon__1udn2\",\"input__fileButtonText\":\"ProfileInfo_input__fileButtonText__2-1-2\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    stopSubmit\r\n} from \"redux-form\";\r\nimport {\r\n    profileAPI\r\n} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'GET_USER_STATUS';\r\nconst UPDATE_PHOTO_SUCCESS = 'UPDATE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    profileInfo: {\r\n        \"aboutMe\": \"я круто чувак 1001%\",\r\n        \"contacts\": {\r\n            \"facebook\": \"facebook.com\",\r\n            \"website\": null,\r\n            \"vk\": null,\r\n            \"twitter\": null,\r\n            \"instagram\": \"instagra.com/v\",\r\n            \"youtube\": null,\r\n            \"github\": \"github.com\",\r\n            \"mainLink\": null\r\n        },\r\n        \"lookingForAJob\": true,\r\n        \"lookingForAJobDescription\": \"работаю, а катаюсь по выходным\",\r\n        \"fullName\": \"Володимир Погребняк\",\r\n        \"userId\": \"myProfile\",\r\n        \"photos\": {\r\n            \"small\": \"https://tengrinews.kz/userdata/images/u38/resized/35fcc7bea1f32a6437650758096b9f89.jpeg\",\r\n            \"large\": \"https://tengrinews.kz/userdata/images/u38/resized/35fcc7bea1f32a6437650758096b9f89.jpeg\"\r\n        },\r\n        \"status\": \"Status must be here\",\r\n    },\r\n    posts: [{\r\n            id: 1,\r\n            message: \"Привіт, хто хоче покататись?\"\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Починаю нову програму! Поїхали!\"\r\n        }\r\n    ]\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profileInfo: action.profileInfo\r\n            }\r\n        }\r\n\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                profileInfo: {\r\n                    ...state.profileInfo,\r\n                    status: action.status\r\n                }\r\n            }\r\n        }\r\n\r\n        case UPDATE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profileInfo: {\r\n                    ...state.profileInfo,\r\n                    photos: action.photos\r\n                }\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//AC\r\nexport const addPost = (newPostText) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText: newPostText\r\n    }\r\n};\r\n\r\nexport const setUserProfile = (profileInfo) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profileInfo: profileInfo\r\n    }\r\n};\r\n\r\nexport const setUserStatus = (status) => {\r\n    return {\r\n        type: SET_USER_STATUS,\r\n        status: status\r\n    }\r\n};\r\n\r\nexport const updatePhotoSuccess = (photos) => {\r\n    return {\r\n        type: UPDATE_PHOTO_SUCCESS,\r\n        photos\r\n    }\r\n};\r\n\r\n\r\n//TC\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    // if (!userId) {\r\n    //     userId = 2;\r\n    // }\r\n\r\n    const response = await profileAPI.getProfile(userId);\r\n\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n\r\n    dispatch(setUserStatus(response.data));\r\n};\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n};\r\n\r\nexport const updatePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.updatePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(updatePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\n\r\ndebugger;\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const response = await profileAPI.saveProfile(profile);\r\n    const userId = getState().auth.userId;\r\n    console.log(response);\r\n    console.log(response.data.messages[0]);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error:response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default profileReducer;","import {\r\n    getAuthUserData\r\n} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//AC\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS\r\n});\r\n\r\n//TC\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    \r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n};\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\"\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.scss';\r\n\r\nconst Header = (props) => {\r\n    { console.log(props) }\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={`wrapper ${s.wrapper}`}>\r\n                <img className={s.header__img} src=\"https://i.pinimg.com/originals/b5/d2/f4/b5d2f4b06c0390c4dadb66da03ade490.png\" />\r\n\r\n                <div className={s.login}>\r\n                    {props.isAuth\r\n                        ?\r\n                        <div>\r\n                            <p className={s.loginName}>\r\n                                {props.login}\r\n                            </p>\r\n                            <button className={s.logoutButton} onClick={props.logout}>\r\n                                Вийти\r\n                            </button>\r\n                        </div>\r\n                        :\r\n                        <NavLink className={s.loginLink} to={'/login'}>\r\n                            Авторизуватись\r\n                        </NavLink>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header >\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logout } from \"../../redux/auth-reducer\";\r\n\r\n\r\n//внутренний контейнер\r\nclass HeaderContainer extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Header {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//внешний контейнер\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <aside className={s.navbar}>\r\n      <nav>\r\n        <ul className={s.navbar__items}>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.navbar__active}>\r\n              Моя сторінка\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.navbar__active}>\r\n              Повідомлення\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/photos\" activeClassName={s.navbar__active}>\r\n              Фото з подорожей\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/routes\" activeClassName={s.navbar__active}>\r\n              Маршрути\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/music\" activeClassName={s.navbar__active}>\r\n              Музика\r\n            </NavLink>\r\n          </li>\r\n          <li className={s.navbar__item}>\r\n            <NavLink to=\"/users\" activeClassName={s.navbar__active}>\r\n              Мої підписки\r\n            </NavLink>\r\n          </li>\r\n          <li className={` ${s.navbar__settings}`}>\r\n            <NavLink to=\"/settings\" activeClassName={s.navbar__active}>\r\n              Налаштування\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n        <p className={s.navbar__friends}>\r\n          <NavLink to=\"/friends\" className={s.navbar__friendsTitle} activeClassName={s.navbar__active}>\r\n            Друзі\r\n          </NavLink>\r\n          <ul className={s.friends__items}>\r\n            <li className={s.friends__item}>\r\n              <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTo4h8hLgr_MYH_Ep7z769e--2l0dTU01wv9g&usqp=CAU\" alt=\"\"/>\r\n              <p>Михайло</p>\r\n            </li>\r\n            <li className={s.friends__item}>\r\n              <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTo4h8hLgr_MYH_Ep7z769e--2l0dTU01wv9g&usqp=CAU\" alt=\"\"/>\r\n              <p>Михайло</p>\r\n            </li>\r\n            <li className={s.friends__item}>\r\n              <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTo4h8hLgr_MYH_Ep7z769e--2l0dTU01wv9g&usqp=CAU\" alt=\"\"/>\r\n              <p>Михайло</p>\r\n            </li>\r\n          </ul>\r\n        </p>\r\n      </nav>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../../../utils/validators/validators';\r\nimport { Element } from '../../../../Common/FormControls/FormControls';\r\nimport s from './NewPost.module.scss'\r\n\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"newPost\"></label>\r\n                <Field className={s.newPosts__text} component={Textarea} name=\"newPost\"\r\n                    placeholder=\"моя новина..\" validate={[required, maxLength20]} />\r\n            </div>\r\n            <button className={`button ${s.newPosts__button}`}>Опубліковати</button>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n    form: 'ProfileAddNewPost'\r\n})(AddNewPostForm);\r\n\r\n\r\nconst AddNewPost = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n    }\r\n\r\n    //колбэк функция \r\n    const onAddPost = (formData) => {\r\n        props.addPost(formData.newPost); //вызываем функцию добавления нового поста\r\n    };\r\n\r\n    return (\r\n        <div className={s.newPosts}>\r\n            <p className={s.newPosts__title}>Новий пост</p>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddNewPost;","import React from \"react\";\r\n\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n      <li className={s.post}>\r\n        {props.massage}\r\n      </li>\r\n    );\r\n  }\r\n  \r\n  export default Post;","import React from \"react\";\r\nimport Post from './Post/Post';\r\nimport s from './Posts.module.css';\r\n\r\nconst Posts = (props) => {\r\n\r\n  let postsElements = props.posts.map(p => <Post massage={p.message} key={p.id} id={p.id} />);\r\n\r\n  return (\r\n    <ul className={s.posts}>\r\n      {postsElements}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Posts;","import React, { useEffect, useState } from \"react\";\r\nimport s from './ProfileStatus.module.scss';\r\n\r\nconst ProfileStatusWithHooks = React.memo((props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    console.log(`cтатус локальный:` + status);\r\n\r\n    useEffect(() => {\r\n        console.log('effect satus profile');\r\n        // setStatus(props.status);\r\n        if (props.status !== undefined) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status]);\r\n    \r\n\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) {\r\n            setEditMode(true);\r\n        }\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    console.log(`cтатус из пропс:` + props.status);\r\n    return (\r\n        <div className={s.profileStatus}>\r\n            { !editMode &&\r\n                <p className={s.profileStatus__Description} onClick={activateEditMode}>{props.status}</p>\r\n            }\r\n            { editMode &&\r\n                <input onChange={onStatusChange} maxLength=\"25\" autoFocus={true} onBlur={deactivateEditMode}\r\n                    className={s.profileStatus__input} value={status} />\r\n            }\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport ProfileStatusWithHooks from '../ProfileStatus/ProfileStatusWithHooks';\r\nimport s from './ProfileData.module.scss';\r\n\r\n\r\nconst ProfileData = ({ profileInfo, isOwner, goToEditMode, getUserStatus, updateUserStatus }) => {\r\n\r\n    return (\r\n        <div className={s.profileInfo__Text} >\r\n            <div className={s.profileInfo__TextLeft}>\r\n                <p className={s.profileInfo__Name}> {profileInfo.fullName} </p>\r\n                \r\n                <ProfileStatusWithHooks className={s.profileInfo__Parametr} status={profileInfo.status}\r\n                    getUserStatus={getUserStatus} updateUserStatus={updateUserStatus} isOwner={isOwner} />\r\n                \r\n                <p className={s.profileInfo__Parametr}>\r\n                    <span className={s.bold}>Шукаю роботу:&#160;</span>\r\n                    {profileInfo.lookingForAJob ? \"так\" : \"ні\"}\r\n                </p>\r\n               \r\n                <p className={s.profileInfo__Parametr}>\r\n                    <p className={s.bold}>Мої навички:</p>\r\n                    {profileInfo.lookingForAJobDescription}\r\n                </p>\r\n                \r\n                <p className={s.profileInfo__Parametr}>\r\n                    <p className={s.bold}>Про мене:</p>\r\n                    {profileInfo.aboutMe}\r\n                </p>\r\n\r\n                {isOwner\r\n                    &&\r\n                    <div>\r\n                        <button className={s.profileInfo__button} onClick={goToEditMode}>\r\n                            Редагувати профіль\r\n                            </button>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <p className={s.profileInfo__Contacts}>\r\n                <p className={s.profileInfo__ContactsTitle}>Контакти:</p>\r\n                {Object.keys(profileInfo.contacts)\r\n                    .map(key => {\r\n                        return (\r\n                            <Contact contactTitle={key}\r\n                                contactValue={profileInfo.contacts[key]}\r\n                                key={key}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return (\r\n        <div className={s.profileInfo__Contact}>\r\n            <span className={s.profileInfo__ContactTitle}>{contactTitle}:&#160;</span>\r\n            <span className={s.profileInfo__ContactValue}>\r\n                <a target=\"_blank\" href={contactValue}>{contactValue}</a>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileData;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const ProfileInfo = (props) => {\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className={s.profileCover}>\r\n//                 <img className={s.profileCover__img}\r\n//                  src=\"https://s1.1zoom.me/b5050/382/388402-svetik_1920x1080.jpg\" />\r\n//             </div>\r\n//             <div className={s.profileInfo}>\r\n//                 <img className={s.profileInfo__Avatar}\r\n//                  src=\"https://tengrinews.kz/userdata/images/u38/resized/35fcc7bea1f32a6437650758096b9f89.jpeg\" />\r\n//                 <div className={s.profileInfo__Text} >\r\n//                     <p className={s.profileInfo__Name}> Володимир Погребняк</p>\r\n//                     <p className={s.profileInfo__Parametr}>Вік: 36</p>\r\n//                     <p className={s.profileInfo__Parametr}>Освіта: КНУ</p>\r\n//                     <p className={s.profileInfo__Parametr}>Місто: Жмеринка</p>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default ProfileInfo;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport ProfileStatusWithHooks from '../ProfileStatus/ProfileStatusWithHooks';\r\nimport s from './ProfileDataForm.module.scss';\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profileInfo, error, isOwner, getUserStatus, updateUserStatus }) => {\r\n   \r\n    return (\r\n        <form className={s.profileInfo__Form} onSubmit={handleSubmit}>\r\n            <div className={s.profileInfo__FormLeft}>\r\n                <p>\r\n                    <Field className={s.profileInfo__Name} name=\"fullName\" placeholder=\"Моє ім'я\" component=\"input\" />\r\n                </p>\r\n\r\n                <ProfileStatusWithHooks className={s.profileInfo__Parametr} status={profileInfo.status}\r\n                    getUserStatus={getUserStatus} updateUserStatus={updateUserStatus} isOwner={isOwner} />\r\n\r\n                <p className={s.profileInfo__Checkbox}>\r\n                    <span className={s.bold}>Шукаю роботу:&#160;</span>\r\n                    <Field className={s.profileInfo__CheckboxInput}\r\n                        name=\"lookingForAJob\" component=\"input\" type=\"checkbox\" id=\"lookingForAJob\" />\r\n                    <label className={s.profileInfo__CheckboxLabel} for=\"lookingForAJob\"></label>\r\n                </p>\r\n\r\n                <p className={s.profileInfo__Parametr}>\r\n                    <p className={s.bold}>Мої навички:</p>\r\n                    <Field className={s.profileInfo__ParametrInput}\r\n                        name=\"lookingForAJobDescription\" component=\"input\" />\r\n                </p>\r\n\r\n                <p className={s.profileInfo__Parametr}>\r\n                    <p className={s.bold}>Про мене:</p>\r\n                    <Field className={s.profileInfo__ParametrInput}\r\n                        name=\"aboutMe\" component=\"input\" />\r\n                </p>\r\n\r\n                <div>\r\n                    <button type=\"submit\" className={`${s.profileInfo__button} ${s.profileInfo__buttonSave}`}>\r\n                        Зберегти зміни\r\n                    </button>\r\n                </div>\r\n\r\n                <div>\r\n                    {error &&\r\n                        <div className={s.formCommonError}>{error}</div>}\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <p className={s.profileInfo__FormContacts}>\r\n                <p className={s.profileInfo__ContactsTitle}>Контакти:</p>\r\n                {Object.keys(profileInfo.contacts)\r\n                    .map(key => {\r\n                        return (\r\n                            <div className={s.profileInfo__Contact}>\r\n                                <span className={s.profileInfo__ContactTitle}>{key}:&#160;</span>\r\n                                <Field className={s.profileInfo__ContactValue} name={`contacts.` + key}\r\n                                    placeholder={key} component=\"input\" key={key} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </p>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ProfileDataFormRedux = reduxForm({ form: `edit-profile` })(ProfileDataForm);\r\n\r\n\r\nexport default ProfileDataFormRedux;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const ProfileInfo = (props) => {\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className={s.profileCover}>\r\n//                 <img className={s.profileCover__img}\r\n//                  src=\"https://s1.1zoom.me/b5050/382/388402-svetik_1920x1080.jpg\" />\r\n//             </div>\r\n//             <div className={s.profileInfo}>\r\n//                 <img className={s.profileInfo__Avatar}\r\n//                  src=\"https://tengrinews.kz/userdata/images/u38/resized/35fcc7bea1f32a6437650758096b9f89.jpeg\" />\r\n//                 <div className={s.profileInfo__Text} >\r\n//                     <p className={s.profileInfo__Name}> Володимир Погребняк</p>\r\n//                     <p className={s.profileInfo__Parametr}>Вік: 36</p>\r\n//                     <p className={s.profileInfo__Parametr}>Освіта: КНУ</p>\r\n//                     <p className={s.profileInfo__Parametr}>Місто: Жмеринка</p>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default ProfileInfo;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.scss';\r\nimport userPhotoDefault from '../../../../../assets/images/user_default.png';\r\nimport ProfileData from './ProfileData/ProfileData';\r\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm';\r\nimport ProfileDataFormRedux from './ProfileDataForm/ProfileDataForm';\r\n\r\nconst ProfileInfo = React.memo((props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.updatePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n                console.log('форма сохранена');\r\n            }\r\n        )\r\n        console.log(formData);\r\n    }\r\n\r\n    console.log('профайл инфо');\r\n    console.log(props.profileInfo);\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.profileCover}>\r\n                <img className={s.profileCover__img}\r\n                    src=\"https://s1.1zoom.me/b5050/382/388402-svetik_1920x1080.jpg\" />\r\n            </div>\r\n            <div className={s.profileInfo}>\r\n                <div className={s.profileInfo__PhotoWrapper}>\r\n                    <img className={s.profileInfo__PhotoImage}\r\n                        src={props.profileInfo.photos.large || userPhotoDefault} />\r\n                    <div>\r\n                        {props.isOwner\r\n                            &&\r\n                            <div className={s.input__wrapper}>\r\n                                <input className={s.input__file} onChange={onMainPhotoSelected} type=\"file\" name=\"file\" id=\"input__file\" />\r\n                                <label className={s.input__fileButton} for=\"input__file\">\r\n                                    <span className={s.input__fileIcon}></span>\r\n                                    <span className={s.input__fileButtonText}>Оновити фото</span>\r\n                                </label>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {editMode\r\n                    ?\r\n                    <ProfileDataFormRedux\r\n                        {...props}\r\n                        getUserStatus={props.getUserStatus}\r\n                        updateUserStatus={props.updateUserStatus}\r\n                        onSubmit={onSubmit}\r\n                        initialValues={props.profileInfo}\r\n                    />\r\n                    :\r\n                    <ProfileData\r\n                        {...props}\r\n                        getUserStatus={props.getUserStatus}\r\n                        updateUserStatus={props.updateUserStatus}\r\n                        goToEditMode={() => { setEditMode(true) }}\r\n                    />\r\n                }\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\n\r\nimport AddNewPost from './NewPost/NewPost';\r\nimport Posts from './Posts/Posts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <section className={s.profile}>\r\n      <ProfileInfo profileInfo={props.profileInfo}\r\n                   getUserStatus={props.getUserStatus}\r\n                   updateUserStatus={props.updateUserStatus}\r\n                   isOwner={props.isOwner}\r\n                   updatePhoto={props.updatePhoto}\r\n                   saveProfile={props.saveProfile} />\r\n      <AddNewPost addPost={props.addPost} newPostText={props.newPostText} />\r\n      <Posts posts={props.posts} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPost, setUserProfile, getUserProfile, getUserStatus, updateUserStatus, updatePhoto, saveProfile } from '../../../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n//внутренний контейнер\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    console.log(userId);\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    console.log(userId);\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} isOwner={!this.props.match.params.userId}/>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n//наиболее внешний контейнер\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profileInfo: state.profilePage.profileInfo,\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n};\r\n\r\n\r\nexport default compose (\r\n  connect(mapStateToProps,\r\n    {\r\n      addPost,\r\n      setUserProfile,\r\n      getUserProfile,\r\n      getUserStatus,\r\n      updateUserStatus,\r\n      updatePhoto,\r\n      saveProfile\r\n    }\r\n  ),\r\n  withRouter,\r\n  withAuthRedirect\r\n) (ProfileContainer);","import React, { Suspense } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport s from './Content.module.css';\r\n\r\nimport ProfileContainer from './Profile/ProfileContainer';\r\n// import DialogsContainer from './Dialogs/DialogsContainer';\r\n// import UsersContainer from './Users/UsersContainer';\r\n// import Login from '../../Login/Login';\r\nconst DialogsContainer = React.lazy(() => import('./Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./Users/UsersContainer'));\r\nconst Login = React.lazy(() => import('../../Login/Login'));\r\n\r\n\r\nconst Content = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      \r\n      <Suspense fallback={<div>Завантаження...</div>}>\r\n        <Route path=\"/login\" render={() => <Login />} />\r\n        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n        <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\r\n        <Route path=\"/users\" render={() => <UsersContainer />} />\r\n        {/* <Route path=\"/friends\" component={Friends} />\r\n      <Route path=\"/photos\" component={Photos} />\r\n      <Route path=\"/routes\" component={Routes} /> */}\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport Navbar from './Navbar/Navbar';\r\nimport Content from './Content/Content';\r\nimport s from './Main.module.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst Main = (props) => {\r\n  return (\r\n    <div className={`${s.main} wrapper`}>\r\n      <Navbar />\r\n      <Content />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;","import React, {\n  Component\n} from 'react';\n\nimport './components/Common/_normalize.css'\nimport './components/Common/_nullstyle.css'\nimport './components/Common/__scrollbar.scss'\nimport './App.scss';\n\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Main from './components/Main/Main';\nimport { initializeApp } from './../src/redux/app-reducer';\nimport { connect } from 'react-redux';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n\n    return (\n      <div className=\"app\">\n      <HeaderContainer />\n      <Main />\n    </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default compose(\n  withRouter,\n  connect (mapStateToProps, {initializeApp} )\n)  (App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link,\n  HashRouter\n} from \"react-router-dom\";\nimport {store} from './redux/redux-store';\nimport {Provider} from 'react-redux';\nimport App from './App';\n\nimport './index.scss';\n\n\n//функция отрисовки (перерисовки) UI\nlet renderEntireTree = ()=> {\n    ReactDOM.render(\n        <React.StrictMode>\n          <HashRouter>\n            <Provider store={store}>\n              <App/>\n            </Provider>\n          </HashRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n      );\n      \n      // If you want to start measuring performance in your app, pass a function\n      // to log results (for example: reportWebVitals(console.log))\n      // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n      reportWebVitals();\n}\n\n//первичная отрисовка\nrenderEntireTree();\n\n//подписка на события изменения\n//переписывает метод _renderEntireTree() в state\nstore.subscribe( () => {\n  renderEntireTree();\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3qz9G\",\"wrapper\":\"Header_wrapper__3UylV\",\"header__img\":\"Header_header__img__1d354\",\"login\":\"Header_login__1FCbm\",\"loginName\":\"Header_loginName__1Lw_5\",\"logoutButton\":\"Header_logoutButton__2yFXW\",\"loginLink\":\"Header_loginLink__1YazE\"};","import {\r\n    stopSubmit\r\n} from \"redux-form\";\r\nimport {\r\n    authAPI,\r\n    securityAPI\r\n} from \"../api/api\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//AC\r\nexport const setAuthUserData = (userId, email, login, isAuth = true, captchaUrl = null) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {\r\n        userId,\r\n        email,\r\n        login,\r\n        isAuth,\r\n        captchaUrl\r\n    }\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {\r\n        captchaUrl\r\n    }\r\n});\r\n\r\n//TC\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {\r\n            id,\r\n            email,\r\n            login,\r\n        } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n        getCaptchaUrlSuccess(null);\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ?\r\n            response.data.messages[0] :\r\n            \"some error\";\r\n\r\n        dispatch(stopSubmit(\"login\", {\r\n            _error: message\r\n        }));\r\n\r\n        console.log(response.data.resultCode);\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n\r\n    console.log(`каптча с сервера:` + captchaUrl);\r\n\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n\r\n};\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPosts\":\"NewPost_newPosts__3p6ZS\",\"newPosts__title\":\"NewPost_newPosts__title__y93Wa\",\"newPosts__text\":\"NewPost_newPosts__text__IO62E\",\"newPosts__button\":\"NewPost_newPosts__button__3TNCU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatus\":\"ProfileStatus_profileStatus__21WzX\",\"profileStatus__Description\":\"ProfileStatus_profileStatus__Description__mqL0z\",\"profileStatus__input\":\"ProfileStatus_profileStatus__input__3kq_G\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value.length < minLength) {\r\n        return `Min length is ${minLength} symbols`\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    }\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__c4fDl\",\"error\":\"FormControls_error__2DM7V\",\"formCommonError\":\"FormControls_formCommonError__3bSHw\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"login\"/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [{\r\n            id: 1,\r\n            name: 'Михайло'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Ізабела'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Софія'\r\n        }\r\n    ],\r\n    messages: [{\r\n            id: 1,\r\n            name: 'Ізабела',\r\n            messagesText: 'Привіт! Вже замінив колесо?'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Я',\r\n            messagesText: 'Привіт. Так вже відремонтував і встановив нові катафоти!'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Ізабела',\r\n            messagesText: 'Тоді завтра на 10:30 їдемо 20км по маршруту Б.'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Я',\r\n            messagesText: 'ОК'\r\n        }\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: 5,\r\n                name: 'Я',\r\n                messagesText: action.newMessageText\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//AC\r\nexport const addMessage = (newMessageText) => ({\r\n    type: ADD_MESSAGE,\r\n    newMessageText: newMessageText\r\n});\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}