{"version":3,"sources":["components/Login/Login.module.scss","components/Login/Login.jsx"],"names":["module","exports","Input","Element","maxLength15","maxLengthCreator","minLength5","minLengthCreator","LoginReduxForm","reduxForm","form","props","className","s","loginForm","onSubmit","handleSubmit","htmlFor","loginField","name","component","type","placeholder","validate","required","RememberMe","RememberMeInput","RememberMeLabel","error","formCommonError","loginButton","connect","state","isAuth","auth","login","to","loginTitle","formData","email","password","rememberMe","console","log"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,WAAa,0BAA0B,UAAY,yBAAyB,WAAa,0BAA0B,WAAa,0BAA0B,gBAAkB,+BAA+B,gBAAkB,+BAA+B,YAAc,6B,iCCDzT,wGASMC,EAAQC,YAAQ,SAChBC,EAAcC,YAAiB,IAC/BC,EAAaC,YAAiB,GA4B9BC,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,EA1BL,SAACE,GACf,OACI,0BAAMC,UAAWC,IAAEC,UAAWC,SAAUJ,EAAMK,cAC1C,6BACI,2BAAOC,QAAQ,UACf,kBAAC,IAAD,CAAOL,UAAWC,IAAEK,WAAYC,KAAK,QAAQC,UAAWlB,EAAOmB,KAAK,OAChEC,YAAa,QAASC,SAAU,CAACC,QAEzC,6BACI,2BAAOP,QAAQ,aACf,kBAAC,IAAD,CAAOL,UAAWC,IAAEK,WAAYC,KAAK,WAAWC,UAAWlB,EAAOmB,KAAK,WACvEC,YAAa,WAAYC,SAAU,CAACC,IAAUlB,EAAYF,MAE9D,yBAAKQ,UAAWC,IAAEY,YACd,kBAAC,IAAD,CAAOb,UAAWC,IAAEa,gBAAiBP,KAAK,aAAaC,UAAWlB,EAAOmB,KAAK,aAC9E,2BAAOT,UAAWC,IAAEc,gBAAiBV,QAAQ,cAA7C,eAEJ,6BACKN,EAAMiB,OACP,yBAAKhB,UAAWC,IAAEgB,iBAAkBlB,EAAMiB,QAE9C,4BAAQhB,UAAWC,IAAEiB,YAAaT,KAAK,UAAvC,aA+BGU,uBAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,WAA1BJ,EAtBD,SAACpB,GAMX,OAAIA,EAAMsB,OACC,kBAAC,IAAD,CAAUG,GAAI,aAIrB,yBAAKxB,UAAWC,IAAEsB,OACd,wBAAIvB,UAAWC,IAAEwB,YAAjB,SACA,kBAAC7B,EAAD,CAAgBO,SAZP,SAACuB,GACd3B,EAAMwB,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,YACxDC,QAAQC,IAAIL,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/5.6b9990dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2DqEy\",\"loginTitle\":\"Login_loginTitle__3JZKd\",\"loginForm\":\"Login_loginForm__3BjhM\",\"loginField\":\"Login_loginField__sUmQn\",\"RememberMe\":\"Login_RememberMe__wSdmn\",\"RememberMeLabel\":\"Login_RememberMeLabel__8I-Nk\",\"formCommonError\":\"Login_formCommonError__1fy5a\",\"loginButton\":\"Login_loginButton__3kiEU\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, minLengthCreator, required } from \"../../utils/validators/validators\";\r\nimport { Element } from \"../Common/FormControls/FormControls\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport s from './Login.module.scss';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Input = Element(\"input\");\r\nconst maxLength15 = maxLengthCreator(15);\r\nconst minLength5 = minLengthCreator(5);\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form className={s.loginForm} onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"email\"></label>\r\n                <Field className={s.loginField} name=\"email\" component={Input} type=\"text\"\r\n                    placeholder={\"login\"} validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"password\"></label>\r\n                <Field className={s.loginField} name=\"password\" component={Input} type=\"password\"\r\n                placeholder={\"password\"} validate={[required, minLength5, maxLength15]} />\r\n            </div>\r\n            <div className={s.RememberMe}>\r\n                <Field className={s.RememberMeInput} name=\"rememberMe\" component={Input} type=\"checkbox\" />\r\n                <label className={s.RememberMeLabel} htmlFor=\"rememberMe\">rememberMe</label>\r\n            </div>\r\n            <div>\r\n                {props.error && \r\n                <div className={s.formCommonError}>{props.error}</div>}\r\n            </div>\r\n            <button className={s.loginButton} type=\"submit\">Login</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n        console.log(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            <h1 className={s.loginTitle}>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login}) (Login);"],"sourceRoot":""}